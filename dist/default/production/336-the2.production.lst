

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed May 11 21:33:01 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F8722 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  000D02                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _L3
    76  000D02  0F                 	db	15
    77                           
    78                           ;initializer for _L2
    79  000D03  0A                 	db	10
    80                           
    81                           ;initializer for _L1
    82  000D04  05                 	db	5
    83                           
    84                           	psect	nvCOMRAM
    85  000022                     __pnvCOMRAM:
    86                           	callstack 0
    87  000022                     _game_level:
    88                           	callstack 0
    89  000022                     	ds	1
    90  000023                     _whichRG:
    91                           	callstack 0
    92  000023                     	ds	1
    93  000024                     _isRG4Pressed:
    94                           	callstack 0
    95  000024                     	ds	1
    96  000025                     _isRG3Pressed:
    97                           	callstack 0
    98  000025                     	ds	1
    99  000026                     _isRG2Pressed:
   100                           	callstack 0
   101  000026                     	ds	1
   102  000027                     _isRG1Pressed:
   103                           	callstack 0
   104  000027                     	ds	1
   105  000028                     _isRG0Pressed:
   106                           	callstack 0
   107  000028                     	ds	1
   108  000029                     _level:
   109                           	callstack 0
   110  000029                     	ds	1
   111  00002A                     _health:
   112                           	callstack 0
   113  00002A                     	ds	1
   114  0000                     _TMR0	set	4054
   115  0000                     _PORTFbits	set	3973
   116  0000                     _PORTGbits	set	3974
   117  0000                     _PORTC	set	3970
   118  0000                     _PORTCbits	set	3970
   119  0000                     _T0CON	set	4053
   120  0000                     _INTCON	set	4082
   121  0000                     _T1CON	set	4045
   122  0000                     _PORTJ	set	3976
   123  0000                     _PORTH	set	3975
   124  0000                     _PORTF	set	3973
   125  0000                     _PORTE	set	3972
   126  0000                     _PORTD	set	3971
   127  0000                     _PORTB	set	3969
   128  0000                     _PORTA	set	3968
   129  0000                     _TRISJ	set	3994
   130  0000                     _TRISH	set	3993
   131  0000                     _TRISG	set	3992
   132  0000                     _TRISF	set	3991
   133  0000                     _TRISE	set	3990
   134  0000                     _TRISD	set	3989
   135  0000                     _TRISC	set	3988
   136  0000                     _TRISB	set	3987
   137  0000                     _TRISA	set	3986
   138  0000                     _ADCON1	set	4033
   139  0000                     _INTCONbits	set	4082
   140  0000                     _TMR1H	set	4047
   141  0000                     _TMR1L	set	4046
   142                           
   143                           ; #config settings
   144                           
   145                           	psect	cinit
   146  000C48                     __pcinit:
   147                           	callstack 0
   148  000C48                     start_initialization:
   149                           	callstack 0
   150  000C48                     __initialization:
   151                           	callstack 0
   152                           
   153                           ; Initialize objects allocated to COMRAM (3 bytes)
   154                           ; load TBLPTR registers with __pidataCOMRAM
   155  000C48  0E02               	movlw	low __pidataCOMRAM
   156  000C4A  6EF6               	movwf	tblptrl,c
   157  000C4C  0E0D               	movlw	high __pidataCOMRAM
   158  000C4E  6EF7               	movwf	tblptrh,c
   159  000C50  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   160  000C52  6EF8               	movwf	tblptru,c
   161  000C54  0009               	tblrd		*+	;fetch initializer
   162  000C56  CFF5 F02B          	movff	tablat,__pdataCOMRAM
   163  000C5A  0009               	tblrd		*+	;fetch initializer
   164  000C5C  CFF5 F02C          	movff	tablat,__pdataCOMRAM+1
   165  000C60  0009               	tblrd		*+	;fetch initializer
   166  000C62  CFF5 F02D          	movff	tablat,__pdataCOMRAM+2
   167                           
   168                           ; Clear objects allocated to COMRAM (17 bytes)
   169  000C66  EE00  F001         	lfsr	0,__pbssCOMRAM
   170  000C6A  0E11               	movlw	17
   171  000C6C                     clear_0:
   172  000C6C  6AEE               	clrf	postinc0,c
   173  000C6E  06E8               	decf	wreg,f,c
   174  000C70  E1FD               	bnz	clear_0
   175  000C72                     end_of_initialization:
   176                           	callstack 0
   177  000C72                     __end_of__initialization:
   178                           	callstack 0
   179  000C72  902E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   180  000C74  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   181  000C76  0100               	movlb	0
   182  000C78  EF00  F006         	goto	_main	;jump to C main() function
   183                           
   184                           	psect	bssCOMRAM
   185  000001                     __pbssCOMRAM:
   186                           	callstack 0
   187  000001                     _tmr_ticks_left:
   188                           	callstack 0
   189  000001                     	ds	1
   190  000002                     _tmr_startreq:
   191                           	callstack 0
   192  000002                     	ds	1
   193  000003                     _tmr_state:
   194                           	callstack 0
   195  000003                     	ds	1
   196  000004                     _level_subcount:
   197                           	callstack 0
   198  000004                     	ds	1
   199  000005                     _game_state:
   200                           	callstack 0
   201  000005                     	ds	1
   202  000006                     _htmrval:
   203                           	callstack 0
   204  000006                     	ds	1
   205  000007                     _tmr1flag:
   206                           	callstack 0
   207  000007                     	ds	1
   208  000008                     _starterDelay:
   209                           	callstack 0
   210  000008                     	ds	1
   211  000009                     _isPressed:
   212                           	callstack 0
   213  000009                     	ds	1
   214  00000A                     _isRC0Pressed:
   215                           	callstack 0
   216  00000A                     	ds	1
   217  00000B                     _isGameFinished:
   218                           	callstack 0
   219  00000B                     	ds	1
   220  00000C                     _isGameStarted:
   221                           	callstack 0
   222  00000C                     	ds	1
   223  00000D                     _sevenSeg4WayCounter:
   224                           	callstack 0
   225  00000D                     	ds	1
   226  00000E                     _sevenSeg3WayCounter:
   227                           	callstack 0
   228  00000E                     	ds	1
   229  00000F                     _sevenSeg2WayCounter:
   230                           	callstack 0
   231  00000F                     	ds	1
   232  000010                     _sevenSegCounter:
   233                           	callstack 0
   234  000010                     	ds	1
   235  000011                     _ltmrval:
   236                           	callstack 0
   237  000011                     	ds	1
   238                           
   239                           	psect	dataCOMRAM
   240  00002B                     __pdataCOMRAM:
   241                           	callstack 0
   242  00002B                     _L3:
   243                           	callstack 0
   244  00002B                     	ds	1
   245  00002C                     _L2:
   246                           	callstack 0
   247  00002C                     	ds	1
   248  00002D                     _L1:
   249                           	callstack 0
   250  00002D                     	ds	1
   251                           
   252                           	psect	cstackCOMRAM
   253  000012                     __pcstackCOMRAM:
   254                           	callstack 0
   255  000012                     ??_lowPriorityISR:
   256  000012                     
   257                           ; 1 bytes @ 0x0
   258  000012                     	ds	1
   259  000013                     ?___awmod:
   260                           	callstack 0
   261  000013                     tmr_start@ticks:
   262                           	callstack 0
   263  000013                     sevenSeg@D:
   264                           	callstack 0
   265  000013                     ___awmod@dividend:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x1
   269  000013                     	ds	1
   270  000014                     ??_sevenSeg:
   271                           
   272                           ; 1 bytes @ 0x2
   273  000014                     	ds	1
   274  000015                     ___awmod@divisor:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x3
   278  000015                     	ds	1
   279  000016                     sevenSeg@J:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x4
   283  000016                     	ds	1
   284  000017                     ??_sevenSeg_controller:
   285  000017                     ___awmod@counter:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x5
   289  000017                     	ds	1
   290  000018                     ___awmod@sign:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x6
   294  000018                     	ds	1
   295  000019                     randomgen@i:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x7
   299  000019                     	ds	1
   300  00001A                     randomgen@val:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x8
   304  00001A                     	ds	1
   305  00001B                     randomgen@noteval:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x9
   309  00001B                     	ds	1
   310  00001C                     randomgen@num:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0xA
   314  00001C                     	ds	1
   315  00001D                     randomgen@lastbit:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0xB
   319  00001D                     	ds	1
   320  00001E                     randomgen@intermbit:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0xC
   324  00001E                     	ds	1
   325  00001F                     ??_game_task:
   326                           
   327                           ; 1 bytes @ 0xD
   328  00001F                     	ds	2
   329  000021                     game_task@count:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0xF
   333  000021                     	ds	1
   334  000022                     
   335                           ; 1 bytes @ 0x10
   336 ;;
   337 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   338 ;;
   339 ;; *************** function _main *****************
   340 ;; Defined at:
   341 ;;		line 724 in file "newmain.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;		None
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg, status,2, status,0, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : 0/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;Total ram usage:        0 bytes
   360 ;; Hardware stack levels required when called:    6
   361 ;; This function calls:
   362 ;;		_game_task
   363 ;;		_init_irq
   364 ;;		_init_ports
   365 ;;		_init_vars
   366 ;;		_input_task
   367 ;;		_sevenSeg_controller
   368 ;;		_tmr_init
   369 ;; This function is called by:
   370 ;;		Startup code after reset
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           	psect	text0
   375  000C00                     __ptext0:
   376                           	callstack 0
   377  000C00                     _main:
   378                           	callstack 25
   379  000C00                     
   380                           ;newmain.c: 726:     init_vars();
   381  000C00  ECB5  F005         	call	_init_vars	;wreg free
   382                           
   383                           ;newmain.c: 727:     init_ports();
   384  000C04  ECDB  F005         	call	_init_ports	;wreg free
   385                           
   386                           ;newmain.c: 728:     tmr_init();
   387  000C08  EC6E  F006         	call	_tmr_init	;wreg free
   388                           
   389                           ;newmain.c: 729:     init_irq();
   390  000C0C  EC7E  F006         	call	_init_irq	;wreg free
   391  000C10                     l2029:
   392                           
   393                           ;newmain.c: 731:     {;newmain.c: 734:         input_task();
   394  000C10  ECFD  F002         	call	_input_task	;wreg free
   395  000C14                     
   396                           ;newmain.c: 735:         sevenSeg_controller();
   397  000C14  ECEF  F001         	call	_sevenSeg_controller	;wreg free
   398  000C18                     
   399                           ;newmain.c: 737:         if ((isGameStarted == 0) || (isGameFinished == 1))
   400  000C18  500C               	movf	_isGameStarted^0,w,c
   401  000C1A  B4D8               	btfsc	status,2,c
   402  000C1C  EF12  F006         	goto	u1351
   403  000C20  EF14  F006         	goto	u1350
   404  000C24                     u1351:
   405  000C24  EF08  F006         	goto	l2029
   406  000C28                     u1350:
   407  000C28  040B               	decf	_isGameFinished^0,w,c
   408  000C2A  A4D8               	btfss	status,2,c
   409  000C2C  EF1A  F006         	goto	u1361
   410  000C30  EF1C  F006         	goto	u1360
   411  000C34                     u1361:
   412  000C34  EF1E  F006         	goto	l2037
   413  000C38                     u1360:
   414  000C38  EF08  F006         	goto	l2029
   415  000C3C                     l2037:
   416                           
   417                           ;newmain.c: 741:         game_task();
   418  000C3C  EC15  F000         	call	_game_task	;wreg free
   419  000C40  EF08  F006         	goto	l2029
   420  000C44  EF13  F000         	goto	start
   421  000C48                     __end_of_main:
   422                           	callstack 0
   423                           
   424 ;; *************** function _tmr_init *****************
   425 ;; Defined at:
   426 ;;		line 153 in file "newmain.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, status,2
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; Hardware stack levels required when called:    3
   447 ;; This function calls:
   448 ;;		Nothing
   449 ;; This function is called by:
   450 ;;		_main
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text1
   455  000CDC                     __ptext1:
   456                           	callstack 0
   457  000CDC                     _tmr_init:
   458                           	callstack 27
   459  000CDC                     
   460                           ;newmain.c: 158:     INTCONbits.TMR0IF = 0;
   461  000CDC  0E47               	movlw	71
   462  000CDE  6ED5               	movwf	213,c	;volatile
   463                           
   464                           ;newmain.c: 159: 
   465  000CE0  0E00               	movlw	0
   466  000CE2  6ED7               	movwf	215,c	;volatile
   467  000CE4  0E00               	movlw	0
   468  000CE6  6ED6               	movwf	214,c	;volatile
   469                           
   470                           ;newmain.c: 160: }
   471  000CE8  0EC1               	movlw	193
   472  000CEA  6ECD               	movwf	205,c	;volatile
   473  000CEC  0012               	return		;funcret
   474  000CEE                     __end_of_tmr_init:
   475                           	callstack 0
   476                           
   477 ;; *************** function _sevenSeg_controller *****************
   478 ;; Defined at:
   479 ;;		line 355 in file "newmain.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;Total ram usage:        2 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    4
   500 ;; This function calls:
   501 ;;		_sevenSeg
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text2
   508  0003DE                     __ptext2:
   509                           	callstack 0
   510  0003DE                     _sevenSeg_controller:
   511                           	callstack 26
   512  0003DE                     
   513                           ;newmain.c: 357:     switch (game_state)
   514  0003DE  EFCF  F002         	goto	l1809
   515  0003E2                     l1747:
   516                           
   517                           ;newmain.c: 360:         if (sevenSeg2WayCounter == 0)
   518  0003E2  500F               	movf	_sevenSeg2WayCounter^0,w,c
   519  0003E4  A4D8               	btfss	status,2,c
   520  0003E6  EFF7  F001         	goto	u951
   521  0003EA  EFF9  F001         	goto	u950
   522  0003EE                     u951:
   523  0003EE  EF00  F002         	goto	l1751
   524  0003F2                     u950:
   525  0003F2                     
   526                           ;newmain.c: 361:             sevenSeg(health, 0);
   527  0003F2  0E00               	movlw	0
   528  0003F4  6E13               	movwf	sevenSeg@D^0,c
   529  0003F6  502A               	movf	_health^0,w,c
   530  0003F8  EC7E  F004         	call	_sevenSeg
   531  0003FC  EFFC  F002         	goto	l235
   532  000400                     l1751:
   533                           
   534                           ;newmain.c: 363:             sevenSeg(game_level, 3);
   535  000400  0E03               	movlw	3
   536  000402  6E13               	movwf	sevenSeg@D^0,c
   537  000404  5022               	movf	_game_level^0,w,c
   538  000406  EC7E  F004         	call	_sevenSeg
   539  00040A  EFFC  F002         	goto	l235
   540  00040E                     l1753:
   541                           
   542                           ;newmain.c: 366:         if (sevenSeg2WayCounter == 0)
   543  00040E  500F               	movf	_sevenSeg2WayCounter^0,w,c
   544  000410  A4D8               	btfss	status,2,c
   545  000412  EF0D  F002         	goto	u961
   546  000416  EF0F  F002         	goto	u960
   547  00041A                     u961:
   548  00041A  EF16  F002         	goto	l1757
   549  00041E                     u960:
   550  00041E                     
   551                           ;newmain.c: 367:             sevenSeg(health, 0);
   552  00041E  0E00               	movlw	0
   553  000420  6E13               	movwf	sevenSeg@D^0,c
   554  000422  502A               	movf	_health^0,w,c
   555  000424  EC7E  F004         	call	_sevenSeg
   556  000428  EFFC  F002         	goto	l235
   557  00042C                     l1757:
   558                           
   559                           ;newmain.c: 369:             sevenSeg(game_level, 3);
   560  00042C  0E03               	movlw	3
   561  00042E  6E13               	movwf	sevenSeg@D^0,c
   562  000430  5022               	movf	_game_level^0,w,c
   563  000432  EC7E  F004         	call	_sevenSeg
   564  000436  EFFC  F002         	goto	l235
   565  00043A                     l1759:
   566                           
   567                           ;newmain.c: 372:         if (sevenSeg2WayCounter == 0)
   568  00043A  500F               	movf	_sevenSeg2WayCounter^0,w,c
   569  00043C  A4D8               	btfss	status,2,c
   570  00043E  EF23  F002         	goto	u971
   571  000442  EF25  F002         	goto	u970
   572  000446                     u971:
   573  000446  EF2C  F002         	goto	l1763
   574  00044A                     u970:
   575  00044A                     
   576                           ;newmain.c: 373:             sevenSeg(health, 0);
   577  00044A  0E00               	movlw	0
   578  00044C  6E13               	movwf	sevenSeg@D^0,c
   579  00044E  502A               	movf	_health^0,w,c
   580  000450  EC7E  F004         	call	_sevenSeg
   581  000454  EFFC  F002         	goto	l235
   582  000458                     l1763:
   583                           
   584                           ;newmain.c: 375:             sevenSeg(game_level, 3);
   585  000458  0E03               	movlw	3
   586  00045A  6E13               	movwf	sevenSeg@D^0,c
   587  00045C  5022               	movf	_game_level^0,w,c
   588  00045E  EC7E  F004         	call	_sevenSeg
   589  000462  EFFC  F002         	goto	l235
   590  000466                     l1765:
   591                           
   592                           ;newmain.c: 378:         if (sevenSeg2WayCounter == 0)
   593  000466  500F               	movf	_sevenSeg2WayCounter^0,w,c
   594  000468  A4D8               	btfss	status,2,c
   595  00046A  EF39  F002         	goto	u981
   596  00046E  EF3B  F002         	goto	u980
   597  000472                     u981:
   598  000472  EF42  F002         	goto	l1769
   599  000476                     u980:
   600  000476                     
   601                           ;newmain.c: 379:             sevenSeg(health, 0);
   602  000476  0E00               	movlw	0
   603  000478  6E13               	movwf	sevenSeg@D^0,c
   604  00047A  502A               	movf	_health^0,w,c
   605  00047C  EC7E  F004         	call	_sevenSeg
   606  000480  EFFC  F002         	goto	l235
   607  000484                     l1769:
   608                           
   609                           ;newmain.c: 381:             sevenSeg(game_level, 3);
   610  000484  0E03               	movlw	3
   611  000486  6E13               	movwf	sevenSeg@D^0,c
   612  000488  5022               	movf	_game_level^0,w,c
   613  00048A  EC7E  F004         	call	_sevenSeg
   614  00048E  EFFC  F002         	goto	l235
   615  000492                     l1771:
   616                           
   617                           ;newmain.c: 385:         if (sevenSeg2WayCounter == 0)
   618  000492  500F               	movf	_sevenSeg2WayCounter^0,w,c
   619  000494  A4D8               	btfss	status,2,c
   620  000496  EF4F  F002         	goto	u991
   621  00049A  EF51  F002         	goto	u990
   622  00049E                     u991:
   623  00049E  EF58  F002         	goto	l1775
   624  0004A2                     u990:
   625  0004A2                     
   626                           ;newmain.c: 386:             sevenSeg(health, 0);
   627  0004A2  0E00               	movlw	0
   628  0004A4  6E13               	movwf	sevenSeg@D^0,c
   629  0004A6  502A               	movf	_health^0,w,c
   630  0004A8  EC7E  F004         	call	_sevenSeg
   631  0004AC  EFFC  F002         	goto	l235
   632  0004B0                     l1775:
   633                           
   634                           ;newmain.c: 388:             sevenSeg(game_level, 3);
   635  0004B0  0E03               	movlw	3
   636  0004B2  6E13               	movwf	sevenSeg@D^0,c
   637  0004B4  5022               	movf	_game_level^0,w,c
   638  0004B6  EC7E  F004         	call	_sevenSeg
   639  0004BA  EFFC  F002         	goto	l235
   640  0004BE                     l1777:
   641                           
   642                           ;newmain.c: 391:         if (sevenSeg2WayCounter == 0)
   643  0004BE  500F               	movf	_sevenSeg2WayCounter^0,w,c
   644  0004C0  A4D8               	btfss	status,2,c
   645  0004C2  EF65  F002         	goto	u1001
   646  0004C6  EF67  F002         	goto	u1000
   647  0004CA                     u1001:
   648  0004CA  EF6E  F002         	goto	l1781
   649  0004CE                     u1000:
   650  0004CE                     
   651                           ;newmain.c: 392:             sevenSeg(health, 0);
   652  0004CE  0E00               	movlw	0
   653  0004D0  6E13               	movwf	sevenSeg@D^0,c
   654  0004D2  502A               	movf	_health^0,w,c
   655  0004D4  EC7E  F004         	call	_sevenSeg
   656  0004D8  EFFC  F002         	goto	l235
   657  0004DC                     l1781:
   658                           
   659                           ;newmain.c: 394:             sevenSeg(game_level, 3);
   660  0004DC  0E03               	movlw	3
   661  0004DE  6E13               	movwf	sevenSeg@D^0,c
   662  0004E0  5022               	movf	_game_level^0,w,c
   663  0004E2  EC7E  F004         	call	_sevenSeg
   664  0004E6  EFFC  F002         	goto	l235
   665  0004EA                     l1783:
   666                           
   667                           ;newmain.c: 397:         if (sevenSeg3WayCounter == 0)
   668  0004EA  500E               	movf	_sevenSeg3WayCounter^0,w,c
   669  0004EC  A4D8               	btfss	status,2,c
   670  0004EE  EF7B  F002         	goto	u1011
   671  0004F2  EF7D  F002         	goto	u1010
   672  0004F6                     u1011:
   673  0004F6  EF84  F002         	goto	l1787
   674  0004FA                     u1010:
   675  0004FA                     
   676                           ;newmain.c: 398:             sevenSeg(11, 0);
   677  0004FA  0E00               	movlw	0
   678  0004FC  6E13               	movwf	sevenSeg@D^0,c
   679  0004FE  0E0B               	movlw	11
   680  000500  EC7E  F004         	call	_sevenSeg
   681  000504  EFFC  F002         	goto	l235
   682  000508                     l1787:
   683  000508  040E               	decf	_sevenSeg3WayCounter^0,w,c
   684  00050A  A4D8               	btfss	status,2,c
   685  00050C  EF8A  F002         	goto	u1021
   686  000510  EF8C  F002         	goto	u1020
   687  000514                     u1021:
   688  000514  EF93  F002         	goto	l1791
   689  000518                     u1020:
   690  000518                     
   691                           ;newmain.c: 400:             sevenSeg(12, 1);
   692  000518  0E01               	movlw	1
   693  00051A  6E13               	movwf	sevenSeg@D^0,c
   694  00051C  0E0C               	movlw	12
   695  00051E  EC7E  F004         	call	_sevenSeg
   696  000522  EFFC  F002         	goto	l235
   697  000526                     l1791:
   698                           
   699                           ;newmain.c: 402:             sevenSeg(13, 2);
   700  000526  0E02               	movlw	2
   701  000528  6E13               	movwf	sevenSeg@D^0,c
   702  00052A  0E0D               	movlw	13
   703  00052C  EC7E  F004         	call	_sevenSeg
   704  000530  EFFC  F002         	goto	l235
   705  000534                     l1793:
   706                           
   707                           ;newmain.c: 405:         if (sevenSeg4WayCounter == 0)
   708  000534  500D               	movf	_sevenSeg4WayCounter^0,w,c
   709  000536  A4D8               	btfss	status,2,c
   710  000538  EFA0  F002         	goto	u1031
   711  00053C  EFA2  F002         	goto	u1030
   712  000540                     u1031:
   713  000540  EFA9  F002         	goto	l1797
   714  000544                     u1030:
   715  000544                     
   716                           ;newmain.c: 406:             sevenSeg(10, 0);
   717  000544  0E00               	movlw	0
   718  000546  6E13               	movwf	sevenSeg@D^0,c
   719  000548  0E0A               	movlw	10
   720  00054A  EC7E  F004         	call	_sevenSeg
   721  00054E  EFFC  F002         	goto	l235
   722  000552                     l1797:
   723  000552  040D               	decf	_sevenSeg4WayCounter^0,w,c
   724  000554  A4D8               	btfss	status,2,c
   725  000556  EFAF  F002         	goto	u1041
   726  00055A  EFB1  F002         	goto	u1040
   727  00055E                     u1041:
   728  00055E  EFB8  F002         	goto	l1801
   729  000562                     u1040:
   730  000562                     
   731                           ;newmain.c: 408:             sevenSeg(0, 1);
   732  000562  0E01               	movlw	1
   733  000564  6E13               	movwf	sevenSeg@D^0,c
   734  000566  0E00               	movlw	0
   735  000568  EC7E  F004         	call	_sevenSeg
   736  00056C  EFFC  F002         	goto	l235
   737  000570                     l1801:
   738  000570  0E02               	movlw	2
   739  000572  180D               	xorwf	_sevenSeg4WayCounter^0,w,c
   740  000574  A4D8               	btfss	status,2,c
   741  000576  EFBF  F002         	goto	u1051
   742  00057A  EFC1  F002         	goto	u1050
   743  00057E                     u1051:
   744  00057E  EFC8  F002         	goto	l1805
   745  000582                     u1050:
   746  000582                     
   747                           ;newmain.c: 410:             sevenSeg(5, 2);
   748  000582  0E02               	movlw	2
   749  000584  6E13               	movwf	sevenSeg@D^0,c
   750  000586  0E05               	movlw	5
   751  000588  EC7E  F004         	call	_sevenSeg
   752  00058C  EFFC  F002         	goto	l235
   753  000590                     l1805:
   754                           
   755                           ;newmain.c: 412:             sevenSeg(11, 3);
   756  000590  0E03               	movlw	3
   757  000592  6E13               	movwf	sevenSeg@D^0,c
   758  000594  0E0B               	movlw	11
   759  000596  EC7E  F004         	call	_sevenSeg
   760  00059A  EFFC  F002         	goto	l235
   761  00059E                     l1809:
   762  00059E  5005               	movf	_game_state^0,w,c
   763  0005A0  6E17               	movwf	??_sevenSeg_controller^0,c
   764  0005A2  6A18               	clrf	(??_sevenSeg_controller+1)^0,c
   765                           
   766                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   767                           ; Switch size 1, requested type "simple"
   768                           ; Number of cases is 1, Range of values is 0 to 0
   769                           ; switch strategies available:
   770                           ; Name         Instructions Cycles
   771                           ; simple_byte            4     3 (average)
   772                           ;	Chosen strategy is simple_byte
   773  0005A4  5018               	movf	(??_sevenSeg_controller+1)^0,w,c
   774  0005A6  0A00               	xorlw	0	; case 0
   775  0005A8  B4D8               	btfsc	status,2,c
   776  0005AA  EFD9  F002         	goto	l2063
   777  0005AE  EFFC  F002         	goto	l235
   778  0005B2                     l2063:
   779                           
   780                           ; Switch size 1, requested type "simple"
   781                           ; Number of cases is 8, Range of values is 0 to 7
   782                           ; switch strategies available:
   783                           ; Name         Instructions Cycles
   784                           ; simple_byte           25    13 (average)
   785                           ;	Chosen strategy is simple_byte
   786  0005B2  5017               	movf	??_sevenSeg_controller^0,w,c
   787  0005B4  0A00               	xorlw	0	; case 0
   788  0005B6  B4D8               	btfsc	status,2,c
   789  0005B8  EFF1  F001         	goto	l1747
   790  0005BC  0A01               	xorlw	1	; case 1
   791  0005BE  B4D8               	btfsc	status,2,c
   792  0005C0  EF07  F002         	goto	l1753
   793  0005C4  0A03               	xorlw	3	; case 2
   794  0005C6  B4D8               	btfsc	status,2,c
   795  0005C8  EF1D  F002         	goto	l1759
   796  0005CC  0A01               	xorlw	1	; case 3
   797  0005CE  B4D8               	btfsc	status,2,c
   798  0005D0  EF33  F002         	goto	l1765
   799  0005D4  0A07               	xorlw	7	; case 4
   800  0005D6  B4D8               	btfsc	status,2,c
   801  0005D8  EF49  F002         	goto	l1771
   802  0005DC  0A01               	xorlw	1	; case 5
   803  0005DE  B4D8               	btfsc	status,2,c
   804  0005E0  EF5F  F002         	goto	l1777
   805  0005E4  0A03               	xorlw	3	; case 6
   806  0005E6  B4D8               	btfsc	status,2,c
   807  0005E8  EF75  F002         	goto	l1783
   808  0005EC  0A01               	xorlw	1	; case 7
   809  0005EE  B4D8               	btfsc	status,2,c
   810  0005F0  EF9A  F002         	goto	l1793
   811  0005F4  EFFC  F002         	goto	l235
   812  0005F8                     l235:
   813  0005F8  0012               	return		;funcret
   814  0005FA                     __end_of_sevenSeg_controller:
   815                           	callstack 0
   816                           
   817 ;; *************** function _sevenSeg *****************
   818 ;; Defined at:
   819 ;;		line 417 in file "newmain.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  J               1    wreg     unsigned char 
   822 ;;  D               1    1[COMRAM] unsigned char 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  J               1    4[COMRAM] unsigned char 
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   834 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;Total ram usage:        4 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; Hardware stack levels required when called:    3
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_sevenSeg_controller
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text3
   849  0008FC                     __ptext3:
   850                           	callstack 0
   851  0008FC                     _sevenSeg:
   852                           	callstack 26
   853                           
   854                           ;incstack = 0
   855                           ;sevenSeg@J stored from wreg
   856  0008FC  6E16               	movwf	sevenSeg@J^0,c
   857  0008FE                     
   858                           ;newmain.c: 417: void sevenSeg(uint8_t J, uint8_t D);newmain.c: 418: {;newmain.c: 419:  
      +                             switch (J)
   859  0008FE  EFB9  F004         	goto	l1723
   860  000902                     l1693:
   861                           
   862                           ;newmain.c: 424:         PORTJ = 0x3f;
   863  000902  0E3F               	movlw	63
   864  000904  6E88               	movwf	136,c	;volatile
   865                           
   866                           ;newmain.c: 425:         break;
   867  000906  EF0E  F005         	goto	l1735
   868  00090A                     l1695:
   869                           
   870                           ;newmain.c: 427:         PORTJ = 0x06;
   871  00090A  0E06               	movlw	6
   872  00090C  6E88               	movwf	136,c	;volatile
   873                           
   874                           ;newmain.c: 428:         break;
   875  00090E  EF0E  F005         	goto	l1735
   876  000912                     l1697:
   877                           
   878                           ;newmain.c: 430:         PORTJ = 0x5b;
   879  000912  0E5B               	movlw	91
   880  000914  6E88               	movwf	136,c	;volatile
   881                           
   882                           ;newmain.c: 431:         break;
   883  000916  EF0E  F005         	goto	l1735
   884  00091A                     l1699:
   885                           
   886                           ;newmain.c: 433:         PORTJ = 0x4f;
   887  00091A  0E4F               	movlw	79
   888  00091C  6E88               	movwf	136,c	;volatile
   889                           
   890                           ;newmain.c: 434:         break;
   891  00091E  EF0E  F005         	goto	l1735
   892  000922                     l1701:
   893                           
   894                           ;newmain.c: 436:         PORTJ = 0x66;
   895  000922  0E66               	movlw	102
   896  000924  6E88               	movwf	136,c	;volatile
   897                           
   898                           ;newmain.c: 437:         break;
   899  000926  EF0E  F005         	goto	l1735
   900  00092A                     l1703:
   901                           
   902                           ;newmain.c: 439:         PORTJ = 0x6d;
   903  00092A  0E6D               	movlw	109
   904  00092C  6E88               	movwf	136,c	;volatile
   905                           
   906                           ;newmain.c: 440:         break;
   907  00092E  EF0E  F005         	goto	l1735
   908  000932                     l1705:
   909                           
   910                           ;newmain.c: 442:         PORTJ = 0x7d;
   911  000932  0E7D               	movlw	125
   912  000934  6E88               	movwf	136,c	;volatile
   913                           
   914                           ;newmain.c: 443:         break;
   915  000936  EF0E  F005         	goto	l1735
   916  00093A                     l1707:
   917                           
   918                           ;newmain.c: 445:         PORTJ = 0x07;
   919  00093A  0E07               	movlw	7
   920  00093C  6E88               	movwf	136,c	;volatile
   921                           
   922                           ;newmain.c: 446:         break;
   923  00093E  EF0E  F005         	goto	l1735
   924  000942                     l1709:
   925                           
   926                           ;newmain.c: 448:         PORTJ = 0x7f;
   927  000942  0E7F               	movlw	127
   928  000944  6E88               	movwf	136,c	;volatile
   929                           
   930                           ;newmain.c: 449:         break;
   931  000946  EF0E  F005         	goto	l1735
   932  00094A                     l1711:
   933                           
   934                           ;newmain.c: 451:         PORTJ = 0x6f;
   935  00094A  0E6F               	movlw	111
   936  00094C  6E88               	movwf	136,c	;volatile
   937                           
   938                           ;newmain.c: 452:         break;
   939  00094E  EF0E  F005         	goto	l1735
   940  000952                     l1713:
   941                           
   942                           ;newmain.c: 454:         PORTJ = 0x38;
   943  000952  0E38               	movlw	56
   944  000954  6E88               	movwf	136,c	;volatile
   945                           
   946                           ;newmain.c: 455:         break;
   947  000956  EF0E  F005         	goto	l1735
   948  00095A                     l1715:
   949                           
   950                           ;newmain.c: 457:         PORTJ = 0x79;
   951  00095A  0E79               	movlw	121
   952  00095C  6E88               	movwf	136,c	;volatile
   953                           
   954                           ;newmain.c: 458:         break;
   955  00095E  EF0E  F005         	goto	l1735
   956  000962                     l1717:
   957                           
   958                           ;newmain.c: 460:         PORTJ = 0x54;
   959  000962  0E54               	movlw	84
   960  000964  6E88               	movwf	136,c	;volatile
   961                           
   962                           ;newmain.c: 461:         break;
   963  000966  EF0E  F005         	goto	l1735
   964  00096A                     l1719:
   965                           
   966                           ;newmain.c: 463:         PORTJ = 0x5e;
   967  00096A  0E5E               	movlw	94
   968  00096C  6E88               	movwf	136,c	;volatile
   969                           
   970                           ;newmain.c: 464:         break;
   971  00096E  EF0E  F005         	goto	l1735
   972  000972                     l1723:
   973  000972  5016               	movf	sevenSeg@J^0,w,c
   974  000974  6E14               	movwf	??_sevenSeg^0,c
   975  000976  6A15               	clrf	(??_sevenSeg+1)^0,c
   976                           
   977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   978                           ; Switch size 1, requested type "simple"
   979                           ; Number of cases is 1, Range of values is 0 to 0
   980                           ; switch strategies available:
   981                           ; Name         Instructions Cycles
   982                           ; simple_byte            4     3 (average)
   983                           ;	Chosen strategy is simple_byte
   984  000978  5015               	movf	(??_sevenSeg+1)^0,w,c
   985  00097A  0A00               	xorlw	0	; case 0
   986  00097C  B4D8               	btfsc	status,2,c
   987  00097E  EFC3  F004         	goto	l2065
   988  000982  EF0E  F005         	goto	l1735
   989  000986                     l2065:
   990                           
   991                           ; Switch size 1, requested type "simple"
   992                           ; Number of cases is 14, Range of values is 0 to 13
   993                           ; switch strategies available:
   994                           ; Name         Instructions Cycles
   995                           ; simple_byte           43    22 (average)
   996                           ;	Chosen strategy is simple_byte
   997  000986  5014               	movf	??_sevenSeg^0,w,c
   998  000988  0A00               	xorlw	0	; case 0
   999  00098A  B4D8               	btfsc	status,2,c
  1000  00098C  EF81  F004         	goto	l1693
  1001  000990  0A01               	xorlw	1	; case 1
  1002  000992  B4D8               	btfsc	status,2,c
  1003  000994  EF85  F004         	goto	l1695
  1004  000998  0A03               	xorlw	3	; case 2
  1005  00099A  B4D8               	btfsc	status,2,c
  1006  00099C  EF89  F004         	goto	l1697
  1007  0009A0  0A01               	xorlw	1	; case 3
  1008  0009A2  B4D8               	btfsc	status,2,c
  1009  0009A4  EF8D  F004         	goto	l1699
  1010  0009A8  0A07               	xorlw	7	; case 4
  1011  0009AA  B4D8               	btfsc	status,2,c
  1012  0009AC  EF91  F004         	goto	l1701
  1013  0009B0  0A01               	xorlw	1	; case 5
  1014  0009B2  B4D8               	btfsc	status,2,c
  1015  0009B4  EF95  F004         	goto	l1703
  1016  0009B8  0A03               	xorlw	3	; case 6
  1017  0009BA  B4D8               	btfsc	status,2,c
  1018  0009BC  EF99  F004         	goto	l1705
  1019  0009C0  0A01               	xorlw	1	; case 7
  1020  0009C2  B4D8               	btfsc	status,2,c
  1021  0009C4  EF9D  F004         	goto	l1707
  1022  0009C8  0A0F               	xorlw	15	; case 8
  1023  0009CA  B4D8               	btfsc	status,2,c
  1024  0009CC  EFA1  F004         	goto	l1709
  1025  0009D0  0A01               	xorlw	1	; case 9
  1026  0009D2  B4D8               	btfsc	status,2,c
  1027  0009D4  EFA5  F004         	goto	l1711
  1028  0009D8  0A03               	xorlw	3	; case 10
  1029  0009DA  B4D8               	btfsc	status,2,c
  1030  0009DC  EFA9  F004         	goto	l1713
  1031  0009E0  0A01               	xorlw	1	; case 11
  1032  0009E2  B4D8               	btfsc	status,2,c
  1033  0009E4  EFAD  F004         	goto	l1715
  1034  0009E8  0A07               	xorlw	7	; case 12
  1035  0009EA  B4D8               	btfsc	status,2,c
  1036  0009EC  EFB1  F004         	goto	l1717
  1037  0009F0  0A01               	xorlw	1	; case 13
  1038  0009F2  B4D8               	btfsc	status,2,c
  1039  0009F4  EFB5  F004         	goto	l1719
  1040  0009F8  EF0E  F005         	goto	l1735
  1041  0009FC                     l1725:
  1042                           
  1043                           ;newmain.c: 469:         PORTH = 0x01;
  1044  0009FC  0E01               	movlw	1
  1045  0009FE  6E87               	movwf	135,c	;volatile
  1046                           
  1047                           ;newmain.c: 470:         break;
  1048  000A00  EF2B  F005         	goto	l260
  1049  000A04                     l1727:
  1050                           
  1051                           ;newmain.c: 472:         PORTH = 0x02;
  1052  000A04  0E02               	movlw	2
  1053  000A06  6E87               	movwf	135,c	;volatile
  1054                           
  1055                           ;newmain.c: 473:         break;
  1056  000A08  EF2B  F005         	goto	l260
  1057  000A0C                     l1729:
  1058                           
  1059                           ;newmain.c: 475:         PORTH = 0x04;
  1060  000A0C  0E04               	movlw	4
  1061  000A0E  6E87               	movwf	135,c	;volatile
  1062                           
  1063                           ;newmain.c: 476:         break;
  1064  000A10  EF2B  F005         	goto	l260
  1065  000A14                     l1731:
  1066                           
  1067                           ;newmain.c: 478:         PORTH = 0x08;
  1068  000A14  0E08               	movlw	8
  1069  000A16  6E87               	movwf	135,c	;volatile
  1070                           
  1071                           ;newmain.c: 479:         break;
  1072  000A18  EF2B  F005         	goto	l260
  1073  000A1C                     l1735:
  1074  000A1C  5013               	movf	sevenSeg@D^0,w,c
  1075  000A1E  6E14               	movwf	??_sevenSeg^0,c
  1076  000A20  6A15               	clrf	(??_sevenSeg+1)^0,c
  1077                           
  1078                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1079                           ; Switch size 1, requested type "simple"
  1080                           ; Number of cases is 1, Range of values is 0 to 0
  1081                           ; switch strategies available:
  1082                           ; Name         Instructions Cycles
  1083                           ; simple_byte            4     3 (average)
  1084                           ;	Chosen strategy is simple_byte
  1085  000A22  5015               	movf	(??_sevenSeg+1)^0,w,c
  1086  000A24  0A00               	xorlw	0	; case 0
  1087  000A26  B4D8               	btfsc	status,2,c
  1088  000A28  EF18  F005         	goto	l2067
  1089  000A2C  EF2B  F005         	goto	l260
  1090  000A30                     l2067:
  1091                           
  1092                           ; Switch size 1, requested type "simple"
  1093                           ; Number of cases is 4, Range of values is 0 to 3
  1094                           ; switch strategies available:
  1095                           ; Name         Instructions Cycles
  1096                           ; simple_byte           13     7 (average)
  1097                           ;	Chosen strategy is simple_byte
  1098  000A30  5014               	movf	??_sevenSeg^0,w,c
  1099  000A32  0A00               	xorlw	0	; case 0
  1100  000A34  B4D8               	btfsc	status,2,c
  1101  000A36  EFFE  F004         	goto	l1725
  1102  000A3A  0A01               	xorlw	1	; case 1
  1103  000A3C  B4D8               	btfsc	status,2,c
  1104  000A3E  EF02  F005         	goto	l1727
  1105  000A42  0A03               	xorlw	3	; case 2
  1106  000A44  B4D8               	btfsc	status,2,c
  1107  000A46  EF06  F005         	goto	l1729
  1108  000A4A  0A01               	xorlw	1	; case 3
  1109  000A4C  B4D8               	btfsc	status,2,c
  1110  000A4E  EF0A  F005         	goto	l1731
  1111  000A52  EF2B  F005         	goto	l260
  1112  000A56                     l260:
  1113  000A56  0012               	return		;funcret
  1114  000A58                     __end_of_sevenSeg:
  1115                           	callstack 0
  1116                           
  1117 ;; *************** function _input_task *****************
  1118 ;; Defined at:
  1119 ;;		line 245 in file "newmain.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;		None
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;		None
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      void 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0, cstack
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;Total ram usage:        0 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    4
  1140 ;; This function calls:
  1141 ;;		_init_ports
  1142 ;;		_init_vars
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text4
  1149  0005FA                     __ptext4:
  1150                           	callstack 0
  1151  0005FA                     _input_task:
  1152                           	callstack 26
  1153  0005FA  500C               	movf	_isGameStarted^0,w,c
  1154  0005FC  B4D8               	btfsc	status,2,c
  1155  0005FE  EF03  F003         	goto	u191
  1156  000602  EF05  F003         	goto	u190
  1157  000606                     u191:
  1158  000606  EF0D  F003         	goto	l1229
  1159  00060A                     u190:
  1160  00060A  500B               	movf	_isGameFinished^0,w,c
  1161  00060C  B4D8               	btfsc	status,2,c
  1162  00060E  EF0B  F003         	goto	u201
  1163  000612  EF0D  F003         	goto	u200
  1164  000616                     u201:
  1165  000616  EF35  F003         	goto	l1243
  1166  00061A                     u200:
  1167  00061A                     l1229:
  1168  00061A  040A               	decf	_isRC0Pressed^0,w,c
  1169  00061C  A4D8               	btfss	status,2,c
  1170  00061E  EF13  F003         	goto	u211
  1171  000622  EF15  F003         	goto	u210
  1172  000626                     u211:
  1173  000626  EF17  F003         	goto	l177
  1174  00062A                     u210:
  1175  00062A  EF35  F003         	goto	l1243
  1176  00062E                     l177:
  1177  00062E  A082               	btfss	130,0,c	;volatile
  1178  000630  EF1C  F003         	goto	u221
  1179  000634  EF1E  F003         	goto	u220
  1180  000638                     u221:
  1181  000638  EF35  F003         	goto	l1243
  1182  00063C                     u220:
  1183  00063C                     
  1184                           ;newmain.c: 268:         {;newmain.c: 269:             health = 9;
  1185  00063C  0E09               	movlw	9
  1186  00063E  6E2A               	movwf	_health^0,c
  1187                           
  1188                           ;newmain.c: 270:             isRC0Pressed = 1;
  1189  000640  0E01               	movlw	1
  1190  000642  6E0A               	movwf	_isRC0Pressed^0,c
  1191                           
  1192                           ;newmain.c: 271:             game_state = G_INIT;
  1193  000644  0E00               	movlw	0
  1194  000646  6E05               	movwf	_game_state^0,c
  1195  000648                     
  1196                           ;newmain.c: 272:                 init_vars();
  1197  000648  ECB5  F005         	call	_init_vars	;wreg free
  1198  00064C                     
  1199                           ;newmain.c: 273:                 init_ports();
  1200  00064C  ECDB  F005         	call	_init_ports	;wreg free
  1201                           
  1202                           ;newmain.c: 274:                 isRC0Pressed = 0;
  1203  000650  0E00               	movlw	0
  1204  000652  6E0A               	movwf	_isRC0Pressed^0,c
  1205                           
  1206                           ;newmain.c: 275:                 isGameStarted = 1;
  1207  000654  0E01               	movlw	1
  1208  000656  6E0C               	movwf	_isGameStarted^0,c
  1209                           
  1210                           ;newmain.c: 276:                 isGameFinished = 0;
  1211  000658  0E00               	movlw	0
  1212  00065A  6E0B               	movwf	_isGameFinished^0,c
  1213                           
  1214                           ;newmain.c: 277:                 TRISC = 0x00;
  1215  00065C  0E00               	movlw	0
  1216  00065E  6E94               	movwf	148,c	;volatile
  1217                           
  1218                           ;newmain.c: 278:                 PORTC = 0x00;
  1219  000660  0E00               	movlw	0
  1220  000662  6E82               	movwf	130,c	;volatile
  1221  000664                     
  1222                           ;newmain.c: 279:                 T0CON |= 0x80;
  1223  000664  8ED5               	bsf	213,7,c	;volatile
  1224  000666                     
  1225                           ;newmain.c: 280:                 T1CON = 0xc9;
  1226  000666  0EC9               	movlw	201
  1227  000668  6ECD               	movwf	205,c	;volatile
  1228  00066A                     l1243:
  1229                           
  1230                           ;newmain.c: 284:     if (isRG0Pressed == 0)
  1231  00066A  5028               	movf	_isRG0Pressed^0,w,c
  1232  00066C  A4D8               	btfss	status,2,c
  1233  00066E  EF3B  F003         	goto	u231
  1234  000672  EF3D  F003         	goto	u230
  1235  000676                     u231:
  1236  000676  EF4A  F003         	goto	l180
  1237  00067A                     u230:
  1238  00067A                     
  1239                           ;newmain.c: 285:     {;newmain.c: 286:         if (PORTGbits.RG0 == 0)
  1240  00067A  B086               	btfsc	134,0,c	;volatile
  1241  00067C  EF42  F003         	goto	u241
  1242  000680  EF44  F003         	goto	u240
  1243  000684                     u241:
  1244  000684  EF53  F003         	goto	l182
  1245  000688                     u240:
  1246  000688                     
  1247                           ;newmain.c: 287:         {;newmain.c: 288:             isRG0Pressed = 1;
  1248  000688  0E01               	movlw	1
  1249  00068A  6E28               	movwf	_isRG0Pressed^0,c
  1250                           
  1251                           ;newmain.c: 289:             whichRG = 0;
  1252  00068C  0E00               	movlw	0
  1253  00068E  6E23               	movwf	_whichRG^0,c
  1254  000690  EF53  F003         	goto	l182
  1255  000694                     l180:
  1256  000694  A086               	btfss	134,0,c	;volatile
  1257  000696  EF4F  F003         	goto	u251
  1258  00069A  EF51  F003         	goto	u250
  1259  00069E                     u251:
  1260  00069E  EF53  F003         	goto	l182
  1261  0006A2                     u250:
  1262  0006A2                     
  1263                           ;newmain.c: 293:     {;newmain.c: 294:         isRG0Pressed = 0;
  1264  0006A2  0E00               	movlw	0
  1265  0006A4  6E28               	movwf	_isRG0Pressed^0,c
  1266  0006A6                     l182:
  1267                           
  1268                           ;newmain.c: 297:     if (isRG1Pressed == 0)
  1269  0006A6  5027               	movf	_isRG1Pressed^0,w,c
  1270  0006A8  A4D8               	btfss	status,2,c
  1271  0006AA  EF59  F003         	goto	u261
  1272  0006AE  EF5B  F003         	goto	u260
  1273  0006B2                     u261:
  1274  0006B2  EF68  F003         	goto	l184
  1275  0006B6                     u260:
  1276  0006B6                     
  1277                           ;newmain.c: 298:     {;newmain.c: 299:         if (PORTGbits.RG1 == 0)
  1278  0006B6  B286               	btfsc	134,1,c	;volatile
  1279  0006B8  EF60  F003         	goto	u271
  1280  0006BC  EF62  F003         	goto	u270
  1281  0006C0                     u271:
  1282  0006C0  EF71  F003         	goto	l186
  1283  0006C4                     u270:
  1284  0006C4                     
  1285                           ;newmain.c: 300:         {;newmain.c: 301:             isRG1Pressed = 1;
  1286  0006C4  0E01               	movlw	1
  1287  0006C6  6E27               	movwf	_isRG1Pressed^0,c
  1288                           
  1289                           ;newmain.c: 302:             whichRG = 1;
  1290  0006C8  0E01               	movlw	1
  1291  0006CA  6E23               	movwf	_whichRG^0,c
  1292  0006CC  EF71  F003         	goto	l186
  1293  0006D0                     l184:
  1294  0006D0  A286               	btfss	134,1,c	;volatile
  1295  0006D2  EF6D  F003         	goto	u281
  1296  0006D6  EF6F  F003         	goto	u280
  1297  0006DA                     u281:
  1298  0006DA  EF71  F003         	goto	l186
  1299  0006DE                     u280:
  1300  0006DE                     
  1301                           ;newmain.c: 306:     {;newmain.c: 307:         isRG1Pressed = 0;
  1302  0006DE  0E00               	movlw	0
  1303  0006E0  6E27               	movwf	_isRG1Pressed^0,c
  1304  0006E2                     l186:
  1305                           
  1306                           ;newmain.c: 310:     if (isRG2Pressed == 0)
  1307  0006E2  5026               	movf	_isRG2Pressed^0,w,c
  1308  0006E4  A4D8               	btfss	status,2,c
  1309  0006E6  EF77  F003         	goto	u291
  1310  0006EA  EF79  F003         	goto	u290
  1311  0006EE                     u291:
  1312  0006EE  EF86  F003         	goto	l188
  1313  0006F2                     u290:
  1314  0006F2                     
  1315                           ;newmain.c: 311:     {;newmain.c: 312:         if (PORTGbits.RG2 == 0)
  1316  0006F2  B486               	btfsc	134,2,c	;volatile
  1317  0006F4  EF7E  F003         	goto	u301
  1318  0006F8  EF80  F003         	goto	u300
  1319  0006FC                     u301:
  1320  0006FC  EF8F  F003         	goto	l190
  1321  000700                     u300:
  1322  000700                     
  1323                           ;newmain.c: 313:         {;newmain.c: 314:             isRG2Pressed = 1;
  1324  000700  0E01               	movlw	1
  1325  000702  6E26               	movwf	_isRG2Pressed^0,c
  1326                           
  1327                           ;newmain.c: 315:             whichRG = 2;
  1328  000704  0E02               	movlw	2
  1329  000706  6E23               	movwf	_whichRG^0,c
  1330  000708  EF8F  F003         	goto	l190
  1331  00070C                     l188:
  1332  00070C  A486               	btfss	134,2,c	;volatile
  1333  00070E  EF8B  F003         	goto	u311
  1334  000712  EF8D  F003         	goto	u310
  1335  000716                     u311:
  1336  000716  EF8F  F003         	goto	l190
  1337  00071A                     u310:
  1338  00071A                     
  1339                           ;newmain.c: 319:     {;newmain.c: 320:         isRG2Pressed = 0;
  1340  00071A  0E00               	movlw	0
  1341  00071C  6E26               	movwf	_isRG2Pressed^0,c
  1342  00071E                     l190:
  1343                           
  1344                           ;newmain.c: 323:     if (isRG3Pressed == 0)
  1345  00071E  5025               	movf	_isRG3Pressed^0,w,c
  1346  000720  A4D8               	btfss	status,2,c
  1347  000722  EF95  F003         	goto	u321
  1348  000726  EF97  F003         	goto	u320
  1349  00072A                     u321:
  1350  00072A  EFA4  F003         	goto	l192
  1351  00072E                     u320:
  1352  00072E                     
  1353                           ;newmain.c: 324:     {;newmain.c: 325:         if (PORTGbits.RG3 == 0)
  1354  00072E  B686               	btfsc	134,3,c	;volatile
  1355  000730  EF9C  F003         	goto	u331
  1356  000734  EF9E  F003         	goto	u330
  1357  000738                     u331:
  1358  000738  EFAD  F003         	goto	l194
  1359  00073C                     u330:
  1360  00073C                     
  1361                           ;newmain.c: 326:         {;newmain.c: 327:             isRG3Pressed = 1;
  1362  00073C  0E01               	movlw	1
  1363  00073E  6E25               	movwf	_isRG3Pressed^0,c
  1364                           
  1365                           ;newmain.c: 328:             whichRG = 3;
  1366  000740  0E03               	movlw	3
  1367  000742  6E23               	movwf	_whichRG^0,c
  1368  000744  EFAD  F003         	goto	l194
  1369  000748                     l192:
  1370  000748  A686               	btfss	134,3,c	;volatile
  1371  00074A  EFA9  F003         	goto	u341
  1372  00074E  EFAB  F003         	goto	u340
  1373  000752                     u341:
  1374  000752  EFAD  F003         	goto	l194
  1375  000756                     u340:
  1376  000756                     
  1377                           ;newmain.c: 332:     {;newmain.c: 333:         isRG3Pressed = 0;
  1378  000756  0E00               	movlw	0
  1379  000758  6E25               	movwf	_isRG3Pressed^0,c
  1380  00075A                     l194:
  1381                           
  1382                           ;newmain.c: 336:     if (isRG4Pressed == 0)
  1383  00075A  5024               	movf	_isRG4Pressed^0,w,c
  1384  00075C  A4D8               	btfss	status,2,c
  1385  00075E  EFB3  F003         	goto	u351
  1386  000762  EFB5  F003         	goto	u350
  1387  000766                     u351:
  1388  000766  EFC2  F003         	goto	l196
  1389  00076A                     u350:
  1390  00076A                     
  1391                           ;newmain.c: 337:     {;newmain.c: 338:         if (PORTGbits.RG4 == 0)
  1392  00076A  B886               	btfsc	134,4,c	;volatile
  1393  00076C  EFBA  F003         	goto	u361
  1394  000770  EFBC  F003         	goto	u360
  1395  000774                     u361:
  1396  000774  EFCB  F003         	goto	l200
  1397  000778                     u360:
  1398  000778                     
  1399                           ;newmain.c: 339:         {;newmain.c: 340:             isRG4Pressed = 1;
  1400  000778  0E01               	movlw	1
  1401  00077A  6E24               	movwf	_isRG4Pressed^0,c
  1402                           
  1403                           ;newmain.c: 341:             whichRG = 4;
  1404  00077C  0E04               	movlw	4
  1405  00077E  6E23               	movwf	_whichRG^0,c
  1406  000780  EFCB  F003         	goto	l200
  1407  000784                     l196:
  1408  000784  A886               	btfss	134,4,c	;volatile
  1409  000786  EFC7  F003         	goto	u371
  1410  00078A  EFC9  F003         	goto	u370
  1411  00078E                     u371:
  1412  00078E  EFCB  F003         	goto	l200
  1413  000792                     u370:
  1414  000792                     
  1415                           ;newmain.c: 345:     {;newmain.c: 346:         isRG4Pressed = 0;
  1416  000792  0E00               	movlw	0
  1417  000794  6E24               	movwf	_isRG4Pressed^0,c
  1418  000796                     l200:
  1419  000796  0012               	return		;funcret
  1420  000798                     __end_of_input_task:
  1421                           	callstack 0
  1422                           
  1423 ;; *************** function _init_vars *****************
  1424 ;; Defined at:
  1425 ;;		line 64 in file "newmain.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    3
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_input_task
  1450 ;;		_main
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text5
  1455  000B6A                     __ptext5:
  1456                           	callstack 0
  1457  000B6A                     _init_vars:
  1458                           	callstack 26
  1459  000B6A                     
  1460                           ;newmain.c: 66:     sevenSeg3WayCounter = 0;
  1461  000B6A  0E09               	movlw	9
  1462  000B6C  6E2A               	movwf	_health^0,c
  1463                           
  1464                           ;newmain.c: 67:     sevenSeg4WayCounter = 0;
  1465  000B6E  0E01               	movlw	1
  1466  000B70  6E29               	movwf	_level^0,c
  1467                           
  1468                           ;newmain.c: 68:     whichRG = 5;
  1469  000B72  0E00               	movlw	0
  1470  000B74  6E0C               	movwf	_isGameStarted^0,c
  1471                           
  1472                           ;newmain.c: 69:     isPressed = 0;
  1473  000B76  0E00               	movlw	0
  1474  000B78  6E0B               	movwf	_isGameFinished^0,c
  1475                           
  1476                           ;newmain.c: 70:     starterDelay = 0;
  1477  000B7A  0E00               	movlw	0
  1478  000B7C  6E0A               	movwf	_isRC0Pressed^0,c
  1479  000B7E                     
  1480                           ;newmain.c: 71:     level_subcount = 0;
  1481  000B7E  6828               	setf	_isRG0Pressed^0,c
  1482  000B80                     
  1483                           ;newmain.c: 72:     game_level = 1;
  1484  000B80  6827               	setf	_isRG1Pressed^0,c
  1485  000B82                     
  1486                           ;newmain.c: 73:     game_state = G_INIT;
  1487  000B82  6826               	setf	_isRG2Pressed^0,c
  1488  000B84                     
  1489                           ;newmain.c: 74:     tmr1flag = 0;
  1490  000B84  6825               	setf	_isRG3Pressed^0,c
  1491  000B86                     
  1492                           ;newmain.c: 75: }
  1493  000B86  6824               	setf	_isRG4Pressed^0,c
  1494                           
  1495                           ;newmain.c: 76: 
  1496  000B88  0E00               	movlw	0
  1497  000B8A  6E10               	movwf	_sevenSegCounter^0,c
  1498                           
  1499                           ;newmain.c: 77: 
  1500  000B8C  0E00               	movlw	0
  1501  000B8E  6E0F               	movwf	_sevenSeg2WayCounter^0,c
  1502                           
  1503                           ;newmain.c: 78: 
  1504  000B90  0E00               	movlw	0
  1505  000B92  6E0E               	movwf	_sevenSeg3WayCounter^0,c
  1506                           
  1507                           ;newmain.c: 79: void init_ports()
  1508  000B94  0E00               	movlw	0
  1509  000B96  6E0D               	movwf	_sevenSeg4WayCounter^0,c
  1510                           
  1511                           ;newmain.c: 80: {
  1512  000B98  0E05               	movlw	5
  1513  000B9A  6E23               	movwf	_whichRG^0,c
  1514                           
  1515                           ;newmain.c: 81:     ADCON1 = 0x0f;
  1516  000B9C  0E00               	movlw	0
  1517  000B9E  6E09               	movwf	_isPressed^0,c
  1518                           
  1519                           ;newmain.c: 82:     TRISA = 0x00;
  1520  000BA0  0E00               	movlw	0
  1521  000BA2  6E08               	movwf	_starterDelay^0,c
  1522                           
  1523                           ;newmain.c: 83:     TRISB = 0x00;
  1524  000BA4  0E00               	movlw	0
  1525  000BA6  6E04               	movwf	_level_subcount^0,c
  1526                           
  1527                           ;newmain.c: 84:     TRISC = 0x01;
  1528  000BA8  0E01               	movlw	1
  1529  000BAA  6E22               	movwf	_game_level^0,c
  1530                           
  1531                           ;newmain.c: 85:     TRISD = 0x00;
  1532  000BAC  0E00               	movlw	0
  1533  000BAE  6E05               	movwf	_game_state^0,c
  1534                           
  1535                           ;newmain.c: 86:     TRISE = 0x00;
  1536  000BB0  0E00               	movlw	0
  1537  000BB2  6E07               	movwf	_tmr1flag^0,c
  1538  000BB4  0012               	return		;funcret
  1539  000BB6                     __end_of_init_vars:
  1540                           	callstack 0
  1541                           
  1542 ;; *************** function _init_irq *****************
  1543 ;; Defined at:
  1544 ;;		line 115 in file "newmain.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    3
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text6
  1573  000CFC                     __ptext6:
  1574                           	callstack 0
  1575  000CFC                     _init_irq:
  1576                           	callstack 27
  1577  000CFC                     
  1578                           ;newmain.c: 117:     TMR_DONE
  1579  000CFC  0EA0               	movlw	160
  1580  000CFE  6EF2               	movwf	242,c	;volatile
  1581  000D00  0012               	return		;funcret
  1582  000D02                     __end_of_init_irq:
  1583                           	callstack 0
  1584                           
  1585 ;; *************** function _game_task *****************
  1586 ;; Defined at:
  1587 ;;		line 514 in file "newmain.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  count           1   15[COMRAM] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;Total ram usage:        3 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    5
  1608 ;; This function calls:
  1609 ;;		_health_decreaser
  1610 ;;		_randomgen
  1611 ;;		_reset_task
  1612 ;;		_shape_shifter
  1613 ;;		_tmr_start
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text7
  1620  00002A                     __ptext7:
  1621                           	callstack 0
  1622  00002A                     _game_task:
  1623                           	callstack 25
  1624  00002A                     
  1625                           ;newmain.c: 521:     uint8_t count = 0;
  1626  00002A  0E00               	movlw	0
  1627  00002C  6E21               	movwf	game_task@count^0,c
  1628  00002E                     
  1629                           ;newmain.c: 522:     if (isRG0Pressed == 1)
  1630  00002E  0428               	decf	_isRG0Pressed^0,w,c
  1631  000030  A4D8               	btfss	status,2,c
  1632  000032  EF1D  F000         	goto	u1061
  1633  000036  EF1F  F000         	goto	u1060
  1634  00003A                     u1061:
  1635  00003A  EF21  F000         	goto	l1823
  1636  00003E                     u1060:
  1637  00003E                     
  1638                           ;newmain.c: 523:     {;newmain.c: 524:         count++;
  1639  00003E  2A21               	incf	game_task@count^0,f,c
  1640  000040                     
  1641                           ;newmain.c: 525:         isRG0Pressed = -1;
  1642  000040  6828               	setf	_isRG0Pressed^0,c
  1643  000042                     l1823:
  1644                           
  1645                           ;newmain.c: 527:     if (isRG1Pressed == 1)
  1646  000042  0427               	decf	_isRG1Pressed^0,w,c
  1647  000044  A4D8               	btfss	status,2,c
  1648  000046  EF27  F000         	goto	u1071
  1649  00004A  EF29  F000         	goto	u1070
  1650  00004E                     u1071:
  1651  00004E  EF2B  F000         	goto	l1829
  1652  000052                     u1070:
  1653  000052                     
  1654                           ;newmain.c: 528:     {;newmain.c: 529:         count++;
  1655  000052  2A21               	incf	game_task@count^0,f,c
  1656  000054                     
  1657                           ;newmain.c: 530:         isRG1Pressed = -1;
  1658  000054  6827               	setf	_isRG1Pressed^0,c
  1659  000056                     l1829:
  1660                           
  1661                           ;newmain.c: 532:     if (isRG2Pressed == 1)
  1662  000056  0426               	decf	_isRG2Pressed^0,w,c
  1663  000058  A4D8               	btfss	status,2,c
  1664  00005A  EF31  F000         	goto	u1081
  1665  00005E  EF33  F000         	goto	u1080
  1666  000062                     u1081:
  1667  000062  EF35  F000         	goto	l1835
  1668  000066                     u1080:
  1669  000066                     
  1670                           ;newmain.c: 533:     {;newmain.c: 534:         count++;
  1671  000066  2A21               	incf	game_task@count^0,f,c
  1672  000068                     
  1673                           ;newmain.c: 535:         isRG2Pressed = -1;
  1674  000068  6826               	setf	_isRG2Pressed^0,c
  1675  00006A                     l1835:
  1676                           
  1677                           ;newmain.c: 537:     if (isRG3Pressed == 1)
  1678  00006A  0425               	decf	_isRG3Pressed^0,w,c
  1679  00006C  A4D8               	btfss	status,2,c
  1680  00006E  EF3B  F000         	goto	u1091
  1681  000072  EF3D  F000         	goto	u1090
  1682  000076                     u1091:
  1683  000076  EF3F  F000         	goto	l1841
  1684  00007A                     u1090:
  1685  00007A                     
  1686                           ;newmain.c: 538:     {;newmain.c: 539:         count++;
  1687  00007A  2A21               	incf	game_task@count^0,f,c
  1688  00007C                     
  1689                           ;newmain.c: 540:         isRG3Pressed = -1;
  1690  00007C  6825               	setf	_isRG3Pressed^0,c
  1691  00007E                     l1841:
  1692                           
  1693                           ;newmain.c: 542:     if (isRG4Pressed == 1)
  1694  00007E  0424               	decf	_isRG4Pressed^0,w,c
  1695  000080  A4D8               	btfss	status,2,c
  1696  000082  EF45  F000         	goto	u1101
  1697  000086  EF47  F000         	goto	u1100
  1698  00008A                     u1101:
  1699  00008A  EF49  F000         	goto	l1847
  1700  00008E                     u1100:
  1701  00008E                     
  1702                           ;newmain.c: 543:     {;newmain.c: 544:         count++;
  1703  00008E  2A21               	incf	game_task@count^0,f,c
  1704  000090                     
  1705                           ;newmain.c: 545:         isRG4Pressed = -1;
  1706  000090  6824               	setf	_isRG4Pressed^0,c
  1707  000092                     l1847:
  1708                           
  1709                           ;newmain.c: 548:     if (count > 1)
  1710  000092  0E01               	movlw	1
  1711  000094  6421               	cpfsgt	game_task@count^0,c
  1712  000096  EF4F  F000         	goto	u1111
  1713  00009A  EF51  F000         	goto	u1110
  1714  00009E                     u1111:
  1715  00009E  EF8D  F000         	goto	l1879
  1716  0000A2                     u1110:
  1717  0000A2                     
  1718                           ;newmain.c: 549:     {;newmain.c: 550:         whichRG = -1;
  1719  0000A2  6823               	setf	_whichRG^0,c
  1720  0000A4                     
  1721                           ;newmain.c: 551:         isPressed = 1;
  1722  0000A4  0E01               	movlw	1
  1723  0000A6  6E09               	movwf	_isPressed^0,c
  1724  0000A8  EF8D  F000         	goto	l1879
  1725  0000AC                     l1853:
  1726                           
  1727                           ;newmain.c: 559:         health_decreaser();
  1728  0000AC  EC4B  F006         	call	_health_decreaser	;wreg free
  1729                           
  1730                           ;newmain.c: 560:         break;
  1731  0000B0  EFB9  F000         	goto	l1881
  1732  0000B4                     l282:
  1733                           
  1734                           ;newmain.c: 562:         if (PORTFbits.RF0 == 1)
  1735  0000B4  A085               	btfss	133,0,c	;volatile
  1736  0000B6  EF5F  F000         	goto	u1121
  1737  0000BA  EF61  F000         	goto	u1120
  1738  0000BE                     u1121:
  1739  0000BE  EF56  F000         	goto	l1853
  1740  0000C2                     u1120:
  1741  0000C2                     l1855:
  1742                           
  1743                           ;newmain.c: 563:             tmr_state = TMR_DONE;
  1744  0000C2  0E01               	movlw	1
  1745  0000C4  6E03               	movwf	_tmr_state^0,c
  1746  0000C6  EFB9  F000         	goto	l1881
  1747  0000CA                     l285:
  1748                           
  1749                           ;newmain.c: 568:         if (PORTFbits.RF1 == 1)
  1750  0000CA  A285               	btfss	133,1,c	;volatile
  1751  0000CC  EF6A  F000         	goto	u1131
  1752  0000D0  EF6C  F000         	goto	u1130
  1753  0000D4                     u1131:
  1754  0000D4  EF70  F000         	goto	l1861
  1755  0000D8                     u1130:
  1756  0000D8                     
  1757                           ;newmain.c: 569:             tmr_state = TMR_DONE;
  1758  0000D8  0E01               	movlw	1
  1759  0000DA  6E03               	movwf	_tmr_state^0,c
  1760  0000DC  EF72  F000         	goto	l1863
  1761  0000E0                     l1861:
  1762                           
  1763                           ;newmain.c: 571:             health_decreaser();
  1764  0000E0  EC4B  F006         	call	_health_decreaser	;wreg free
  1765  0000E4                     l1863:
  1766                           
  1767                           ;newmain.c: 573:         if (PORTFbits.RF2 == 1)
  1768  0000E4  A485               	btfss	133,2,c	;volatile
  1769  0000E6  EF77  F000         	goto	u1141
  1770  0000EA  EF79  F000         	goto	u1140
  1771  0000EE                     u1141:
  1772  0000EE  EF56  F000         	goto	l1853
  1773  0000F2                     u1140:
  1774  0000F2  EF61  F000         	goto	l1855
  1775  0000F6                     l291:
  1776                           
  1777                           ;newmain.c: 579:         if (PORTFbits.RF3 == 1)
  1778  0000F6  A685               	btfss	133,3,c	;volatile
  1779  0000F8  EF80  F000         	goto	u1151
  1780  0000FC  EF82  F000         	goto	u1150
  1781  000100                     u1151:
  1782  000100  EF56  F000         	goto	l1853
  1783  000104                     u1150:
  1784  000104  EF61  F000         	goto	l1855
  1785  000108                     l294:
  1786                           
  1787                           ;newmain.c: 585:         if (PORTFbits.RF4 == 1)
  1788  000108  A885               	btfss	133,4,c	;volatile
  1789  00010A  EF89  F000         	goto	u1161
  1790  00010E  EF8B  F000         	goto	u1160
  1791  000112                     u1161:
  1792  000112  EF56  F000         	goto	l1853
  1793  000116                     u1160:
  1794  000116  EF61  F000         	goto	l1855
  1795  00011A                     l1879:
  1796  00011A  5023               	movf	_whichRG^0,w,c
  1797  00011C  6E1F               	movwf	??_game_task^0,c
  1798  00011E  6A20               	clrf	(??_game_task+1)^0,c
  1799                           
  1800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1801                           ; Switch size 1, requested type "simple"
  1802                           ; Number of cases is 2, Range of values is 0 to 255
  1803                           ; switch strategies available:
  1804                           ; Name         Instructions Cycles
  1805                           ; simple_byte            7     4 (average)
  1806                           ;	Chosen strategy is simple_byte
  1807  000120  5020               	movf	(??_game_task+1)^0,w,c
  1808  000122  0A00               	xorlw	0	; case 0
  1809  000124  B4D8               	btfsc	status,2,c
  1810  000126  EF9B  F000         	goto	l2069
  1811  00012A  0AFF               	xorlw	255	; case 255
  1812  00012C  B4D8               	btfsc	status,2,c
  1813  00012E  EFB2  F000         	goto	l2071
  1814  000132  EFB9  F000         	goto	l1881
  1815  000136                     l2069:
  1816                           
  1817                           ; Switch size 1, requested type "simple"
  1818                           ; Number of cases is 5, Range of values is 0 to 4
  1819                           ; switch strategies available:
  1820                           ; Name         Instructions Cycles
  1821                           ; simple_byte           16     9 (average)
  1822                           ;	Chosen strategy is simple_byte
  1823  000136  501F               	movf	??_game_task^0,w,c
  1824  000138  0A00               	xorlw	0	; case 0
  1825  00013A  B4D8               	btfsc	status,2,c
  1826  00013C  EF5A  F000         	goto	l282
  1827  000140  0A01               	xorlw	1	; case 1
  1828  000142  B4D8               	btfsc	status,2,c
  1829  000144  EF65  F000         	goto	l285
  1830  000148  0A03               	xorlw	3	; case 2
  1831  00014A  B4D8               	btfsc	status,2,c
  1832  00014C  EF72  F000         	goto	l1863
  1833  000150  0A01               	xorlw	1	; case 3
  1834  000152  B4D8               	btfsc	status,2,c
  1835  000154  EF7B  F000         	goto	l291
  1836  000158  0A07               	xorlw	7	; case 4
  1837  00015A  B4D8               	btfsc	status,2,c
  1838  00015C  EF84  F000         	goto	l294
  1839  000160  EFB9  F000         	goto	l1881
  1840  000164                     l2071:
  1841                           
  1842                           ; Switch size 1, requested type "simple"
  1843                           ; Number of cases is 1, Range of values is 255 to 255
  1844                           ; switch strategies available:
  1845                           ; Name         Instructions Cycles
  1846                           ; simple_byte            4     3 (average)
  1847                           ;	Chosen strategy is simple_byte
  1848  000164  501F               	movf	??_game_task^0,w,c
  1849  000166  0AFF               	xorlw	255	; case 255
  1850  000168  B4D8               	btfsc	status,2,c
  1851  00016A  EF56  F000         	goto	l1853
  1852  00016E  EFB9  F000         	goto	l1881
  1853  000172                     l1881:
  1854                           
  1855                           ;newmain.c: 594:     whichRG = 5;
  1856  000172  0E05               	movlw	5
  1857  000174  6E23               	movwf	_whichRG^0,c
  1858                           
  1859                           ;newmain.c: 595:     switch (game_state)
  1860  000176  EFC1  F001         	goto	l2013
  1861  00017A                     l1883:
  1862                           
  1863                           ;newmain.c: 598:         tmr_start(77);
  1864  00017A  0E4D               	movlw	77
  1865  00017C  EC63  F006         	call	_tmr_start
  1866  000180                     
  1867                           ;newmain.c: 599:         game_state = LEVEL1;
  1868  000180  0E01               	movlw	1
  1869  000182  6E05               	movwf	_game_state^0,c
  1870  000184                     
  1871                           ;newmain.c: 601:         randomgen();
  1872  000184  ECCC  F003         	call	_randomgen	;wreg free
  1873  000188                     
  1874                           ;newmain.c: 602:         ++level_subcount;
  1875  000188  2A04               	incf	_level_subcount^0,f,c
  1876  00018A                     
  1877                           ;newmain.c: 603:         game_level = 1;
  1878  00018A  0E01               	movlw	1
  1879  00018C  6E22               	movwf	_game_level^0,c
  1880                           
  1881                           ;newmain.c: 604:         break;
  1882  00018E  EFEE  F001         	goto	l326
  1883  000192                     l1893:
  1884                           
  1885                           ;newmain.c: 608:         if (tmr_state == TMR_DONE)
  1886  000192  0403               	decf	_tmr_state^0,w,c
  1887  000194  A4D8               	btfss	status,2,c
  1888  000196  EFCF  F000         	goto	u1171
  1889  00019A  EFD1  F000         	goto	u1170
  1890  00019E                     u1171:
  1891  00019E  EFEE  F001         	goto	l326
  1892  0001A2                     u1170:
  1893  0001A2                     
  1894                           ;newmain.c: 609:         {;newmain.c: 610:             starterDelay++;
  1895  0001A2  2A08               	incf	_starterDelay^0,f,c
  1896  0001A4                     
  1897                           ;newmain.c: 611:             if (isPressed == 0 && starterDelay >= 6)
  1898  0001A4  5009               	movf	_isPressed^0,w,c
  1899  0001A6  A4D8               	btfss	status,2,c
  1900  0001A8  EFD8  F000         	goto	u1181
  1901  0001AC  EFDA  F000         	goto	u1180
  1902  0001B0                     u1181:
  1903  0001B0  EFE8  F000         	goto	l1903
  1904  0001B4                     u1180:
  1905  0001B4  5008               	movf	_starterDelay^0,w,c
  1906  0001B6  0A80               	xorlw	128
  1907  0001B8  0F7A               	addlw	-134
  1908  0001BA  A0D8               	btfss	status,0,c
  1909  0001BC  EFE2  F000         	goto	u1191
  1910  0001C0  EFE4  F000         	goto	u1190
  1911  0001C4                     u1191:
  1912  0001C4  EFE8  F000         	goto	l1903
  1913  0001C8                     u1190:
  1914  0001C8                     
  1915                           ;newmain.c: 612:             {;newmain.c: 613:                 health_decreaser();
  1916  0001C8  EC4B  F006         	call	_health_decreaser	;wreg free
  1917                           
  1918                           ;newmain.c: 614:             }
  1919  0001CC  EFEA  F000         	goto	l1905
  1920  0001D0                     l1903:
  1921                           
  1922                           ;newmain.c: 616:             {;newmain.c: 617:                 isPressed = 0;
  1923  0001D0  0E00               	movlw	0
  1924  0001D2  6E09               	movwf	_isPressed^0,c
  1925  0001D4                     l1905:
  1926                           
  1927                           ;newmain.c: 619:             if (level_subcount < L1)
  1928  0001D4  0E05               	movlw	5
  1929  0001D6  6004               	cpfslt	_level_subcount^0,c
  1930  0001D8  EFF0  F000         	goto	u1201
  1931  0001DC  EFF2  F000         	goto	u1200
  1932  0001E0                     u1201:
  1933  0001E0  EFF6  F000         	goto	l1911
  1934  0001E4                     u1200:
  1935  0001E4                     
  1936                           ;newmain.c: 620:             {;newmain.c: 621:                 shape_shifter();
  1937  0001E4  EC3E  F006         	call	_shape_shifter	;wreg free
  1938  0001E8                     
  1939                           ;newmain.c: 622:                 randomgen();
  1940  0001E8  ECCC  F003         	call	_randomgen	;wreg free
  1941  0001EC                     l1911:
  1942                           
  1943                           ;newmain.c: 624:             if (level_subcount >= L1)
  1944  0001EC  0E04               	movlw	4
  1945  0001EE  6404               	cpfsgt	_level_subcount^0,c
  1946  0001F0  EFFC  F000         	goto	u1211
  1947  0001F4  EFFE  F000         	goto	u1210
  1948  0001F8                     u1211:
  1949  0001F8  EF00  F001         	goto	l1915
  1950  0001FC                     u1210:
  1951  0001FC                     
  1952                           ;newmain.c: 625:             {;newmain.c: 626:                 shape_shifter();
  1953  0001FC  EC3E  F006         	call	_shape_shifter	;wreg free
  1954  000200                     l1915:
  1955                           
  1956                           ;newmain.c: 629:             ++level_subcount;
  1957  000200  2A04               	incf	_level_subcount^0,f,c
  1958  000202                     
  1959                           ;newmain.c: 630:             if (level_subcount == 6 + L1)
  1960  000202  0E0B               	movlw	11
  1961  000204  1804               	xorwf	_level_subcount^0,w,c
  1962  000206  A4D8               	btfss	status,2,c
  1963  000208  EF08  F001         	goto	u1221
  1964  00020C  EF0A  F001         	goto	u1220
  1965  000210                     u1221:
  1966  000210  EF0C  F001         	goto	l1921
  1967  000214                     u1220:
  1968  000214                     
  1969                           ;newmain.c: 631:             {;newmain.c: 632:                 game_state = LEVEL2_INIT;
  1970  000214  0E02               	movlw	2
  1971  000216  6E05               	movwf	_game_state^0,c
  1972  000218                     l1921:
  1973                           
  1974                           ;newmain.c: 634:             tmr_start(77);
  1975  000218  0E4D               	movlw	77
  1976  00021A  EC63  F006         	call	_tmr_start
  1977  00021E  EFEE  F001         	goto	l326
  1978  000222                     l1923:
  1979                           
  1980                           ;newmain.c: 638:         level_subcount = 0;
  1981  000222  0E00               	movlw	0
  1982  000224  6E04               	movwf	_level_subcount^0,c
  1983  000226                     
  1984                           ;newmain.c: 639:         tmr_start(61);
  1985  000226  0E3D               	movlw	61
  1986  000228  EC63  F006         	call	_tmr_start
  1987  00022C                     
  1988                           ;newmain.c: 640:         game_state = LEVEL2;
  1989  00022C  0E03               	movlw	3
  1990  00022E  6E05               	movwf	_game_state^0,c
  1991  000230                     
  1992                           ;newmain.c: 642:         randomgen();
  1993  000230  ECCC  F003         	call	_randomgen	;wreg free
  1994  000234                     
  1995                           ;newmain.c: 643:         ++level_subcount;
  1996  000234  2A04               	incf	_level_subcount^0,f,c
  1997  000236                     
  1998                           ;newmain.c: 644:         game_level = 2;
  1999  000236  0E02               	movlw	2
  2000  000238  6E22               	movwf	_game_level^0,c
  2001                           
  2002                           ;newmain.c: 645:         break;
  2003  00023A  EFEE  F001         	goto	l326
  2004  00023E                     l1935:
  2005                           
  2006                           ;newmain.c: 647:         if (tmr_state == TMR_DONE)
  2007  00023E  0403               	decf	_tmr_state^0,w,c
  2008  000240  A4D8               	btfss	status,2,c
  2009  000242  EF25  F001         	goto	u1231
  2010  000246  EF27  F001         	goto	u1230
  2011  00024A                     u1231:
  2012  00024A  EFEE  F001         	goto	l326
  2013  00024E                     u1230:
  2014  00024E                     
  2015                           ;newmain.c: 648:         {;newmain.c: 649:             starterDelay++;
  2016  00024E  2A08               	incf	_starterDelay^0,f,c
  2017  000250                     
  2018                           ;newmain.c: 650:             if (isPressed == 0 && starterDelay >= 6)
  2019  000250  5009               	movf	_isPressed^0,w,c
  2020  000252  A4D8               	btfss	status,2,c
  2021  000254  EF2E  F001         	goto	u1241
  2022  000258  EF30  F001         	goto	u1240
  2023  00025C                     u1241:
  2024  00025C  EF3E  F001         	goto	l1945
  2025  000260                     u1240:
  2026  000260  5008               	movf	_starterDelay^0,w,c
  2027  000262  0A80               	xorlw	128
  2028  000264  0F7A               	addlw	-134
  2029  000266  A0D8               	btfss	status,0,c
  2030  000268  EF38  F001         	goto	u1251
  2031  00026C  EF3A  F001         	goto	u1250
  2032  000270                     u1251:
  2033  000270  EF3E  F001         	goto	l1945
  2034  000274                     u1250:
  2035  000274                     
  2036                           ;newmain.c: 651:             {;newmain.c: 652:                 health_decreaser();
  2037  000274  EC4B  F006         	call	_health_decreaser	;wreg free
  2038                           
  2039                           ;newmain.c: 653:             }
  2040  000278  EF40  F001         	goto	l1947
  2041  00027C                     l1945:
  2042                           
  2043                           ;newmain.c: 655:             {;newmain.c: 656:                 isPressed = 0;
  2044  00027C  0E00               	movlw	0
  2045  00027E  6E09               	movwf	_isPressed^0,c
  2046  000280                     l1947:
  2047                           
  2048                           ;newmain.c: 658:             if (level_subcount < L2)
  2049  000280  0E0A               	movlw	10
  2050  000282  6004               	cpfslt	_level_subcount^0,c
  2051  000284  EF46  F001         	goto	u1261
  2052  000288  EF48  F001         	goto	u1260
  2053  00028C                     u1261:
  2054  00028C  EF4C  F001         	goto	l1953
  2055  000290                     u1260:
  2056  000290                     
  2057                           ;newmain.c: 659:             {;newmain.c: 660:                 shape_shifter();
  2058  000290  EC3E  F006         	call	_shape_shifter	;wreg free
  2059  000294                     
  2060                           ;newmain.c: 661:                 randomgen();
  2061  000294  ECCC  F003         	call	_randomgen	;wreg free
  2062  000298                     l1953:
  2063                           
  2064                           ;newmain.c: 663:             if (level_subcount >= L2)
  2065  000298  0E09               	movlw	9
  2066  00029A  6404               	cpfsgt	_level_subcount^0,c
  2067  00029C  EF52  F001         	goto	u1271
  2068  0002A0  EF54  F001         	goto	u1270
  2069  0002A4                     u1271:
  2070  0002A4  EF56  F001         	goto	l1957
  2071  0002A8                     u1270:
  2072  0002A8                     
  2073                           ;newmain.c: 664:             {;newmain.c: 665:                 shape_shifter();
  2074  0002A8  EC3E  F006         	call	_shape_shifter	;wreg free
  2075  0002AC                     l1957:
  2076                           
  2077                           ;newmain.c: 668:             ++level_subcount;
  2078  0002AC  2A04               	incf	_level_subcount^0,f,c
  2079  0002AE                     
  2080                           ;newmain.c: 669:             if (level_subcount == 6 + L2)
  2081  0002AE  0E10               	movlw	16
  2082  0002B0  1804               	xorwf	_level_subcount^0,w,c
  2083  0002B2  A4D8               	btfss	status,2,c
  2084  0002B4  EF5E  F001         	goto	u1281
  2085  0002B8  EF60  F001         	goto	u1280
  2086  0002BC                     u1281:
  2087  0002BC  EF62  F001         	goto	l1963
  2088  0002C0                     u1280:
  2089  0002C0                     
  2090                           ;newmain.c: 670:             {;newmain.c: 671:                 game_state = LEVEL3_INIT;
  2091  0002C0  0E04               	movlw	4
  2092  0002C2  6E05               	movwf	_game_state^0,c
  2093  0002C4                     l1963:
  2094                           
  2095                           ;newmain.c: 673:             tmr_start(61);
  2096  0002C4  0E3D               	movlw	61
  2097  0002C6  EC63  F006         	call	_tmr_start
  2098  0002CA  EFEE  F001         	goto	l326
  2099  0002CE                     l1965:
  2100                           
  2101                           ;newmain.c: 677:         level_subcount = 0;
  2102  0002CE  0E00               	movlw	0
  2103  0002D0  6E04               	movwf	_level_subcount^0,c
  2104  0002D2                     
  2105                           ;newmain.c: 678:         tmr_start(46);
  2106  0002D2  0E2E               	movlw	46
  2107  0002D4  EC63  F006         	call	_tmr_start
  2108  0002D8                     
  2109                           ;newmain.c: 679:         game_state = LEVEL3;
  2110  0002D8  0E05               	movlw	5
  2111  0002DA  6E05               	movwf	_game_state^0,c
  2112  0002DC                     
  2113                           ;newmain.c: 681:         randomgen();
  2114  0002DC  ECCC  F003         	call	_randomgen	;wreg free
  2115  0002E0                     
  2116                           ;newmain.c: 682:         ++level_subcount;
  2117  0002E0  2A04               	incf	_level_subcount^0,f,c
  2118  0002E2                     
  2119                           ;newmain.c: 683:         game_level = 3;
  2120  0002E2  0E03               	movlw	3
  2121  0002E4  6E22               	movwf	_game_level^0,c
  2122                           
  2123                           ;newmain.c: 684:         break;
  2124  0002E6  EFEE  F001         	goto	l326
  2125  0002EA                     l1977:
  2126                           
  2127                           ;newmain.c: 686:         if (tmr_state == TMR_DONE)
  2128  0002EA  0403               	decf	_tmr_state^0,w,c
  2129  0002EC  A4D8               	btfss	status,2,c
  2130  0002EE  EF7B  F001         	goto	u1291
  2131  0002F2  EF7D  F001         	goto	u1290
  2132  0002F6                     u1291:
  2133  0002F6  EFEE  F001         	goto	l326
  2134  0002FA                     u1290:
  2135  0002FA                     
  2136                           ;newmain.c: 687:         {;newmain.c: 688:             starterDelay++;
  2137  0002FA  2A08               	incf	_starterDelay^0,f,c
  2138  0002FC                     
  2139                           ;newmain.c: 689:             if (isPressed == 0 && starterDelay >= 6)
  2140  0002FC  5009               	movf	_isPressed^0,w,c
  2141  0002FE  A4D8               	btfss	status,2,c
  2142  000300  EF84  F001         	goto	u1301
  2143  000304  EF86  F001         	goto	u1300
  2144  000308                     u1301:
  2145  000308  EF94  F001         	goto	l1987
  2146  00030C                     u1300:
  2147  00030C  5008               	movf	_starterDelay^0,w,c
  2148  00030E  0A80               	xorlw	128
  2149  000310  0F7A               	addlw	-134
  2150  000312  A0D8               	btfss	status,0,c
  2151  000314  EF8E  F001         	goto	u1311
  2152  000318  EF90  F001         	goto	u1310
  2153  00031C                     u1311:
  2154  00031C  EF94  F001         	goto	l1987
  2155  000320                     u1310:
  2156  000320                     
  2157                           ;newmain.c: 690:             {;newmain.c: 691:                 health_decreaser();
  2158  000320  EC4B  F006         	call	_health_decreaser	;wreg free
  2159                           
  2160                           ;newmain.c: 692:             }
  2161  000324  EF96  F001         	goto	l1989
  2162  000328                     l1987:
  2163                           
  2164                           ;newmain.c: 694:             {;newmain.c: 695:                 isPressed = 0;
  2165  000328  0E00               	movlw	0
  2166  00032A  6E09               	movwf	_isPressed^0,c
  2167  00032C                     l1989:
  2168                           
  2169                           ;newmain.c: 697:             if (level_subcount < L3)
  2170  00032C  0E0F               	movlw	15
  2171  00032E  6004               	cpfslt	_level_subcount^0,c
  2172  000330  EF9C  F001         	goto	u1321
  2173  000334  EF9E  F001         	goto	u1320
  2174  000338                     u1321:
  2175  000338  EFA2  F001         	goto	l1995
  2176  00033C                     u1320:
  2177  00033C                     
  2178                           ;newmain.c: 698:             {;newmain.c: 699:                 shape_shifter();
  2179  00033C  EC3E  F006         	call	_shape_shifter	;wreg free
  2180  000340                     
  2181                           ;newmain.c: 700:                 randomgen();
  2182  000340  ECCC  F003         	call	_randomgen	;wreg free
  2183  000344                     l1995:
  2184                           
  2185                           ;newmain.c: 702:             if (level_subcount >= L3)
  2186  000344  0E0E               	movlw	14
  2187  000346  6404               	cpfsgt	_level_subcount^0,c
  2188  000348  EFA8  F001         	goto	u1331
  2189  00034C  EFAA  F001         	goto	u1330
  2190  000350                     u1331:
  2191  000350  EFAC  F001         	goto	l1999
  2192  000354                     u1330:
  2193  000354                     
  2194                           ;newmain.c: 703:             {;newmain.c: 704:                 shape_shifter();
  2195  000354  EC3E  F006         	call	_shape_shifter	;wreg free
  2196  000358                     l1999:
  2197                           
  2198                           ;newmain.c: 707:             ++level_subcount;
  2199  000358  2A04               	incf	_level_subcount^0,f,c
  2200  00035A                     
  2201                           ;newmain.c: 708:             if (level_subcount == 6 + L3)
  2202  00035A  0E15               	movlw	21
  2203  00035C  1804               	xorwf	_level_subcount^0,w,c
  2204  00035E  A4D8               	btfss	status,2,c
  2205  000360  EFB4  F001         	goto	u1341
  2206  000364  EFB6  F001         	goto	u1340
  2207  000368                     u1341:
  2208  000368  EFB8  F001         	goto	l2005
  2209  00036C                     u1340:
  2210  00036C                     
  2211                           ;newmain.c: 709:             {;newmain.c: 710:                 game_state = END;
  2212  00036C  0E06               	movlw	6
  2213  00036E  6E05               	movwf	_game_state^0,c
  2214  000370                     l2005:
  2215                           
  2216                           ;newmain.c: 712:             tmr_start(46);
  2217  000370  0E2E               	movlw	46
  2218  000372  EC63  F006         	call	_tmr_start
  2219  000376  EFEE  F001         	goto	l326
  2220  00037A                     l2007:
  2221                           
  2222                           ;newmain.c: 716:         reset_task();
  2223  00037A  EC77  F006         	call	_reset_task	;wreg free
  2224                           
  2225                           ;newmain.c: 717:         break;
  2226  00037E  EFEE  F001         	goto	l326
  2227  000382                     l2013:
  2228  000382  5005               	movf	_game_state^0,w,c
  2229  000384  6E1F               	movwf	??_game_task^0,c
  2230  000386  6A20               	clrf	(??_game_task+1)^0,c
  2231                           
  2232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2233                           ; Switch size 1, requested type "simple"
  2234                           ; Number of cases is 1, Range of values is 0 to 0
  2235                           ; switch strategies available:
  2236                           ; Name         Instructions Cycles
  2237                           ; simple_byte            4     3 (average)
  2238                           ;	Chosen strategy is simple_byte
  2239  000388  5020               	movf	(??_game_task+1)^0,w,c
  2240  00038A  0A00               	xorlw	0	; case 0
  2241  00038C  B4D8               	btfsc	status,2,c
  2242  00038E  EFCB  F001         	goto	l2073
  2243  000392  EFEE  F001         	goto	l326
  2244  000396                     l2073:
  2245                           
  2246                           ; Switch size 1, requested type "simple"
  2247                           ; Number of cases is 8, Range of values is 0 to 7
  2248                           ; switch strategies available:
  2249                           ; Name         Instructions Cycles
  2250                           ; simple_byte           25    13 (average)
  2251                           ;	Chosen strategy is simple_byte
  2252  000396  501F               	movf	??_game_task^0,w,c
  2253  000398  0A00               	xorlw	0	; case 0
  2254  00039A  B4D8               	btfsc	status,2,c
  2255  00039C  EFBD  F000         	goto	l1883
  2256  0003A0  0A01               	xorlw	1	; case 1
  2257  0003A2  B4D8               	btfsc	status,2,c
  2258  0003A4  EFC9  F000         	goto	l1893
  2259  0003A8  0A03               	xorlw	3	; case 2
  2260  0003AA  B4D8               	btfsc	status,2,c
  2261  0003AC  EF11  F001         	goto	l1923
  2262  0003B0  0A01               	xorlw	1	; case 3
  2263  0003B2  B4D8               	btfsc	status,2,c
  2264  0003B4  EF1F  F001         	goto	l1935
  2265  0003B8  0A07               	xorlw	7	; case 4
  2266  0003BA  B4D8               	btfsc	status,2,c
  2267  0003BC  EF67  F001         	goto	l1965
  2268  0003C0  0A01               	xorlw	1	; case 5
  2269  0003C2  B4D8               	btfsc	status,2,c
  2270  0003C4  EF75  F001         	goto	l1977
  2271  0003C8  0A03               	xorlw	3	; case 6
  2272  0003CA  B4D8               	btfsc	status,2,c
  2273  0003CC  EFBD  F001         	goto	l2007
  2274  0003D0  0A01               	xorlw	1	; case 7
  2275  0003D2  B4D8               	btfsc	status,2,c
  2276  0003D4  EFBD  F001         	goto	l2007
  2277  0003D8  EFEE  F001         	goto	l326
  2278  0003DC                     l326:
  2279  0003DC  0012               	return		;funcret
  2280  0003DE                     __end_of_game_task:
  2281                           	callstack 0
  2282                           
  2283 ;; *************** function _tmr_start *****************
  2284 ;; Defined at:
  2285 ;;		line 165 in file "newmain.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  ticks           1    wreg     unsigned char 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  ticks           1    1[COMRAM] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, status,2
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;Total ram usage:        1 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    3
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_game_task
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text8
  2314  000CC6                     __ptext8:
  2315                           	callstack 0
  2316  000CC6                     _tmr_start:
  2317                           	callstack 26
  2318                           
  2319                           ;incstack = 0
  2320                           ;tmr_start@ticks stored from wreg
  2321  000CC6  6E13               	movwf	tmr_start@ticks^0,c
  2322  000CC8                     
  2323                           ;newmain.c: 165:     PORTA = 0x00;;newmain.c: 166: ;newmain.c: 167:     if (tmr1flag == 
      +                          0)
  2324  000CC8  C013  F001         	movff	tmr_start@ticks,_tmr_ticks_left
  2325  000CCC                     
  2326                           ;newmain.c: 168:     {
  2327  000CCC  0E00               	movlw	0
  2328  000CCE  6E03               	movwf	_tmr_state^0,c
  2329  000CD0                     
  2330                           ;newmain.c: 169:         ltmrval = TMR1L;
  2331  000CD0  0E00               	movlw	0
  2332  000CD2  6ED7               	movwf	215,c	;volatile
  2333  000CD4  0E00               	movlw	0
  2334  000CD6  6ED6               	movwf	214,c	;volatile
  2335  000CD8                     
  2336                           ;newmain.c: 170:         htmrval = TMR1H;
  2337  000CD8  94F2               	bcf	242,2,c	;volatile
  2338  000CDA  0012               	return		;funcret
  2339  000CDC                     __end_of_tmr_start:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function _shape_shifter *****************
  2343 ;; Defined at:
  2344 ;;		line 487 in file "newmain.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;		None
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;		None
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;Total ram usage:        0 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    3
  2365 ;; This function calls:
  2366 ;;		Nothing
  2367 ;; This function is called by:
  2368 ;;		_game_task
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text9
  2373  000C7C                     __ptext9:
  2374                           	callstack 0
  2375  000C7C                     _shape_shifter:
  2376                           	callstack 26
  2377  000C7C                     
  2378                           ;newmain.c: 489:     PORTF = PORTE;
  2379  000C7C  CF84 FF85          	movff	3972,3973	;volatile
  2380                           
  2381                           ;newmain.c: 490:     PORTE = PORTD;
  2382  000C80  CF83 FF84          	movff	3971,3972	;volatile
  2383                           
  2384                           ;newmain.c: 491:     PORTD = PORTC;
  2385  000C84  CF82 FF83          	movff	3970,3971	;volatile
  2386                           
  2387                           ;newmain.c: 492:     PORTC = PORTB;
  2388  000C88  CF81 FF82          	movff	3969,3970	;volatile
  2389                           
  2390                           ;newmain.c: 493:     PORTB = PORTA;
  2391  000C8C  CF80 FF81          	movff	3968,3969	;volatile
  2392  000C90                     
  2393                           ;newmain.c: 494:     PORTA = 0x00;
  2394  000C90  0E00               	movlw	0
  2395  000C92  6E80               	movwf	128,c	;volatile
  2396  000C94  0012               	return		;funcret
  2397  000C96                     __end_of_shape_shifter:
  2398                           	callstack 0
  2399                           
  2400 ;; *************** function _reset_task *****************
  2401 ;; Defined at:
  2402 ;;		line 497 in file "newmain.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    4
  2423 ;; This function calls:
  2424 ;;		_init_ports
  2425 ;; This function is called by:
  2426 ;;		_game_task
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text10
  2431  000CEE                     __ptext10:
  2432                           	callstack 0
  2433  000CEE                     _reset_task:
  2434                           	callstack 25
  2435  000CEE                     
  2436                           ;newmain.c: 500:     isGameStarted = 0;
  2437  000CEE  0E00               	movlw	0
  2438  000CF0  6E0C               	movwf	_isGameStarted^0,c
  2439                           
  2440                           ;newmain.c: 501:     isGameFinished = 1;
  2441  000CF2  0E01               	movlw	1
  2442  000CF4  6E0B               	movwf	_isGameFinished^0,c
  2443  000CF6                     
  2444                           ;newmain.c: 502:     init_ports();
  2445  000CF6  ECDB  F005         	call	_init_ports	;wreg free
  2446  000CFA  0012               	return		;funcret
  2447  000CFC                     __end_of_reset_task:
  2448                           	callstack 0
  2449                           
  2450 ;; *************** function _init_ports *****************
  2451 ;; Defined at:
  2452 ;;		line 91 in file "newmain.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;		None
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;Total ram usage:        0 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    3
  2473 ;; This function calls:
  2474 ;;		Nothing
  2475 ;; This function is called by:
  2476 ;;		_input_task
  2477 ;;		_reset_task
  2478 ;;		_main
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text11
  2483  000BB6                     __ptext11:
  2484                           	callstack 0
  2485  000BB6                     _init_ports:
  2486                           	callstack 26
  2487  000BB6                     
  2488                           ;newmain.c: 93:     PORTB = 0x00;
  2489  000BB6  0E0F               	movlw	15
  2490  000BB8  6EC1               	movwf	193,c	;volatile
  2491                           
  2492                           ;newmain.c: 94:     PORTD = 0x00;
  2493  000BBA  0E00               	movlw	0
  2494  000BBC  6E92               	movwf	146,c	;volatile
  2495                           
  2496                           ;newmain.c: 95:     PORTE = 0x00;
  2497  000BBE  0E00               	movlw	0
  2498  000BC0  6E93               	movwf	147,c	;volatile
  2499                           
  2500                           ;newmain.c: 96:     PORTF = 0x00;
  2501  000BC2  0E01               	movlw	1
  2502  000BC4  6E94               	movwf	148,c	;volatile
  2503                           
  2504                           ;newmain.c: 97:     PORTH = 0x00;
  2505  000BC6  0E00               	movlw	0
  2506  000BC8  6E95               	movwf	149,c	;volatile
  2507                           
  2508                           ;newmain.c: 98:     PORTJ = 0x00;
  2509  000BCA  0E00               	movlw	0
  2510  000BCC  6E96               	movwf	150,c	;volatile
  2511                           
  2512                           ;newmain.c: 99: 
  2513  000BCE  0E00               	movlw	0
  2514  000BD0  6E97               	movwf	151,c	;volatile
  2515                           
  2516                           ;newmain.c: 100:     T1CON = 0xc1;
  2517  000BD2  0E1F               	movlw	31
  2518  000BD4  6E98               	movwf	152,c	;volatile
  2519                           
  2520                           ;newmain.c: 101: }
  2521  000BD6  0E00               	movlw	0
  2522  000BD8  6E99               	movwf	153,c	;volatile
  2523                           
  2524                           ;newmain.c: 102: 
  2525  000BDA  0E00               	movlw	0
  2526  000BDC  6E9A               	movwf	154,c	;volatile
  2527                           
  2528                           ;newmain.c: 104: {
  2529  000BDE  0E00               	movlw	0
  2530  000BE0  6E80               	movwf	128,c	;volatile
  2531                           
  2532                           ;newmain.c: 105:     INTCON = 0xa0;
  2533  000BE2  0E00               	movlw	0
  2534  000BE4  6E81               	movwf	129,c	;volatile
  2535                           
  2536                           ;newmain.c: 106: 
  2537  000BE6  0E00               	movlw	0
  2538  000BE8  6E83               	movwf	131,c	;volatile
  2539                           
  2540                           ;newmain.c: 107: }
  2541  000BEA  0E00               	movlw	0
  2542  000BEC  6E84               	movwf	132,c	;volatile
  2543                           
  2544                           ;newmain.c: 108: 
  2545  000BEE  0E00               	movlw	0
  2546  000BF0  6E85               	movwf	133,c	;volatile
  2547                           
  2548                           ;newmain.c: 109: 
  2549  000BF2  0E00               	movlw	0
  2550  000BF4  6E87               	movwf	135,c	;volatile
  2551                           
  2552                           ;newmain.c: 110: 
  2553  000BF6  0E00               	movlw	0
  2554  000BF8  6E88               	movwf	136,c	;volatile
  2555                           
  2556                           ;newmain.c: 112: 
  2557  000BFA  0EC1               	movlw	193
  2558  000BFC  6ECD               	movwf	205,c	;volatile
  2559  000BFE  0012               	return		;funcret
  2560  000C00                     __end_of_init_ports:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function _randomgen *****************
  2564 ;; Defined at:
  2565 ;;		line 174 in file "newmain.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  intermbit       1   12[COMRAM] unsigned char 
  2570 ;;  lastbit         1   11[COMRAM] unsigned char 
  2571 ;;  num             1   10[COMRAM] unsigned char 
  2572 ;;  noteval         1    9[COMRAM] unsigned char 
  2573 ;;  val             1    8[COMRAM] unsigned char 
  2574 ;;  i               1    7[COMRAM] unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;Total ram usage:        6 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    4
  2591 ;; This function calls:
  2592 ;;		___awmod
  2593 ;; This function is called by:
  2594 ;;		_game_task
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text12
  2599  000798                     __ptext12:
  2600                           	callstack 0
  2601  000798                     _randomgen:
  2602                           	callstack 25
  2603  000798                     
  2604                           ;newmain.c: 176:     {;newmain.c: 177:         noteval = 0x07 & ltmrval;
  2605  000798  0E00               	movlw	0
  2606  00079A  6E80               	movwf	128,c	;volatile
  2607                           
  2608                           ;newmain.c: 179:         val = 0x01;
  2609  00079C  5007               	movf	_tmr1flag^0,w,c
  2610  00079E  A4D8               	btfss	status,2,c
  2611  0007A0  EFD4  F003         	goto	u871
  2612  0007A4  EFD6  F003         	goto	u870
  2613  0007A8                     u871:
  2614  0007A8  EFDC  F003         	goto	l1641
  2615  0007AC                     u870:
  2616  0007AC                     
  2617                           ;newmain.c: 180:         for (i = 0; i < noteval; i++);newmain.c: 181:         {
  2618  0007AC  CFCE F011          	movff	4046,_ltmrval	;volatile
  2619                           
  2620                           ;newmain.c: 182:             val = val << 1;
  2621  0007B0  CFCF F006          	movff	4047,_htmrval	;volatile
  2622  0007B4                     
  2623                           ;newmain.c: 184:         PORTA = val;
  2624  0007B4  0E01               	movlw	1
  2625  0007B6  6E07               	movwf	_tmr1flag^0,c
  2626  0007B8                     l1641:
  2627                           
  2628                           ;newmain.c: 187:             lastbit = 0x01 & TMR1L;
  2629  0007B8  0407               	decf	_tmr1flag^0,w,c
  2630  0007BA  A4D8               	btfss	status,2,c
  2631  0007BC  EFE2  F003         	goto	u881
  2632  0007C0  EFE4  F003         	goto	u880
  2633  0007C4                     u881:
  2634  0007C4  EF7D  F004         	goto	l171
  2635  0007C8                     u880:
  2636  0007C8                     
  2637                           ;newmain.c: 188:             intermbit = 0x01 & TMR1H;;newmain.c: 189:             htmrv
      +                          al = htmrval >> 8;
  2638  0007C8  5011               	movf	_ltmrval^0,w,c
  2639  0007CA  0B07               	andlw	7
  2640  0007CC  6E1B               	movwf	randomgen@noteval^0,c
  2641  0007CE                     
  2642                           ;newmain.c: 190:             ltmrval = ltmrval >> 8;
  2643  0007CE  C01B  F013         	movff	randomgen@noteval,___awmod@dividend
  2644  0007D2  6A14               	clrf	(___awmod@dividend+1)^0,c
  2645  0007D4  0E00               	movlw	0
  2646  0007D6  6E16               	movwf	(___awmod@divisor+1)^0,c
  2647  0007D8  0E05               	movlw	5
  2648  0007DA  6E15               	movwf	___awmod@divisor^0,c
  2649  0007DC  EC2C  F005         	call	___awmod	;wreg free
  2650  0007E0  5013               	movf	?___awmod^0,w,c
  2651  0007E2  6E1B               	movwf	randomgen@noteval^0,c
  2652  0007E4                     
  2653                           ;newmain.c: 191:             lastbit = lastbit << 7;
  2654  0007E4  0E01               	movlw	1
  2655  0007E6  6E1A               	movwf	randomgen@val^0,c
  2656  0007E8                     
  2657                           ;newmain.c: 192:             intermbit = intermbit << 7;
  2658  0007E8  0E00               	movlw	0
  2659  0007EA  6E19               	movwf	randomgen@i^0,c
  2660  0007EC  EFFC  F003         	goto	l1655
  2661  0007F0                     l1651:
  2662                           
  2663                           ;newmain.c: 193:             ltmrval = ltmrval | lastbit;;newmain.c: 194:             ht
      +                          mrval = htmrval | intermbit;
  2664  0007F0  501A               	movf	randomgen@val^0,w,c
  2665  0007F2  241A               	addwf	randomgen@val^0,w,c
  2666  0007F4  6E1A               	movwf	randomgen@val^0,c
  2667  0007F6                     
  2668                           ;newmain.c: 195:         }
  2669  0007F6  2A19               	incf	randomgen@i^0,f,c
  2670  0007F8                     l1655:
  2671  0007F8  501B               	movf	randomgen@noteval^0,w,c
  2672  0007FA  5C19               	subwf	randomgen@i^0,w,c
  2673  0007FC  A0D8               	btfss	status,0,c
  2674  0007FE  EF03  F004         	goto	u891
  2675  000802  EF05  F004         	goto	u890
  2676  000806                     u891:
  2677  000806  EFF8  F003         	goto	l1651
  2678  00080A                     u890:
  2679  00080A                     
  2680                           ;newmain.c: 196:         if (level == 2)
  2681  00080A  C01A  FF80         	movff	randomgen@val,3968	;volatile
  2682  00080E                     
  2683                           ;newmain.c: 197:         {
  2684  00080E  0429               	decf	_level^0,w,c
  2685  000810  A4D8               	btfss	status,2,c
  2686  000812  EF0D  F004         	goto	u901
  2687  000816  EF0F  F004         	goto	u900
  2688  00081A                     u901:
  2689  00081A  EF25  F004         	goto	l162
  2690  00081E                     u900:
  2691  00081E                     
  2692                           ;newmain.c: 198:             num = 3;;newmain.c: 199:             while (num > 0)
  2693  00081E  50CE               	movf	206,w,c	;volatile
  2694  000820  0B01               	andlw	1
  2695  000822  6E1D               	movwf	randomgen@lastbit^0,c
  2696                           
  2697                           ;newmain.c: 200:             {
  2698  000824  50CF               	movf	207,w,c	;volatile
  2699  000826  0B01               	andlw	1
  2700  000828  6E1E               	movwf	randomgen@intermbit^0,c
  2701  00082A                     
  2702                           ;newmain.c: 201:                 lastbit = 0x01 & TMR1L;
  2703  00082A  0E00               	movlw	0
  2704  00082C  6E06               	movwf	_htmrval^0,c
  2705  00082E                     
  2706                           ;newmain.c: 202:                 intermbit = 0x01 & TMR1H;
  2707  00082E  0E00               	movlw	0
  2708  000830  6E11               	movwf	_ltmrval^0,c
  2709                           
  2710                           ;newmain.c: 203:                 htmrval = htmrval >> 8;
  2711  000832  401D               	rrncf	randomgen@lastbit^0,w,c
  2712  000834  0B80               	andlw	128
  2713  000836  6E1D               	movwf	randomgen@lastbit^0,c
  2714                           
  2715                           ;newmain.c: 204:                 ltmrval = ltmrval >> 8;
  2716  000838  401E               	rrncf	randomgen@intermbit^0,w,c
  2717  00083A  0B80               	andlw	128
  2718  00083C  6E1E               	movwf	randomgen@intermbit^0,c
  2719                           
  2720                           ;newmain.c: 205:                 lastbit = lastbit << 7;
  2721  00083E  5011               	movf	_ltmrval^0,w,c
  2722  000840  101D               	iorwf	randomgen@lastbit^0,w,c
  2723  000842  6E11               	movwf	_ltmrval^0,c
  2724                           
  2725                           ;newmain.c: 206:                 intermbit = intermbit << 7;
  2726  000844  5006               	movf	_htmrval^0,w,c
  2727  000846  101E               	iorwf	randomgen@intermbit^0,w,c
  2728  000848  6E06               	movwf	_htmrval^0,c
  2729  00084A                     l162:
  2730                           
  2731                           ;newmain.c: 208:                 htmrval = htmrval | intermbit;
  2732  00084A  0E02               	movlw	2
  2733  00084C  1829               	xorwf	_level^0,w,c
  2734  00084E  A4D8               	btfss	status,2,c
  2735  000850  EF2C  F004         	goto	u911
  2736  000854  EF2E  F004         	goto	u910
  2737  000858                     u911:
  2738  000858  EF51  F004         	goto	l1677
  2739  00085C                     u910:
  2740  00085C                     
  2741                           ;newmain.c: 209:                 num--;;newmain.c: 210:             }
  2742  00085C  0E03               	movlw	3
  2743  00085E  6E1C               	movwf	randomgen@num^0,c
  2744                           
  2745                           ;newmain.c: 211:         }
  2746  000860  EF49  F004         	goto	l1675
  2747  000864                     l1667:
  2748                           
  2749                           ;newmain.c: 212:         if (level == 3);newmain.c: 213:         {
  2750  000864  50CE               	movf	206,w,c	;volatile
  2751  000866  0B01               	andlw	1
  2752  000868  6E1D               	movwf	randomgen@lastbit^0,c
  2753                           
  2754                           ;newmain.c: 214:             num = 5;
  2755  00086A  50CF               	movf	207,w,c	;volatile
  2756  00086C  0B01               	andlw	1
  2757  00086E  6E1E               	movwf	randomgen@intermbit^0,c
  2758  000870                     
  2759                           ;newmain.c: 215:             while (num > 0)
  2760  000870  0E00               	movlw	0
  2761  000872  6E06               	movwf	_htmrval^0,c
  2762  000874                     
  2763                           ;newmain.c: 216:             {
  2764  000874  0E00               	movlw	0
  2765  000876  6E11               	movwf	_ltmrval^0,c
  2766                           
  2767                           ;newmain.c: 217:                 lastbit = 0x01 & TMR1L;
  2768  000878  401D               	rrncf	randomgen@lastbit^0,w,c
  2769  00087A  0B80               	andlw	128
  2770  00087C  6E1D               	movwf	randomgen@lastbit^0,c
  2771                           
  2772                           ;newmain.c: 218:                 intermbit = 0x01 & TMR1H;
  2773  00087E  401E               	rrncf	randomgen@intermbit^0,w,c
  2774  000880  0B80               	andlw	128
  2775  000882  6E1E               	movwf	randomgen@intermbit^0,c
  2776                           
  2777                           ;newmain.c: 219:                 htmrval = htmrval >> 8;
  2778  000884  5011               	movf	_ltmrval^0,w,c
  2779  000886  101D               	iorwf	randomgen@lastbit^0,w,c
  2780  000888  6E11               	movwf	_ltmrval^0,c
  2781                           
  2782                           ;newmain.c: 220:                 ltmrval = ltmrval >> 8;
  2783  00088A  5006               	movf	_htmrval^0,w,c
  2784  00088C  101E               	iorwf	randomgen@intermbit^0,w,c
  2785  00088E  6E06               	movwf	_htmrval^0,c
  2786  000890                     
  2787                           ;newmain.c: 221:                 lastbit = lastbit << 7;
  2788  000890  061C               	decf	randomgen@num^0,f,c
  2789  000892                     l1675:
  2790                           
  2791                           ;newmain.c: 211:         }
  2792  000892  501C               	movf	randomgen@num^0,w,c
  2793  000894  A4D8               	btfss	status,2,c
  2794  000896  EF4F  F004         	goto	u921
  2795  00089A  EF51  F004         	goto	u920
  2796  00089E                     u921:
  2797  00089E  EF32  F004         	goto	l1667
  2798  0008A2                     u920:
  2799  0008A2                     l1677:
  2800                           
  2801                           ;newmain.c: 224:                 htmrval = htmrval | intermbit;
  2802  0008A2  0E03               	movlw	3
  2803  0008A4  1829               	xorwf	_level^0,w,c
  2804  0008A6  A4D8               	btfss	status,2,c
  2805  0008A8  EF58  F004         	goto	u931
  2806  0008AC  EF5A  F004         	goto	u930
  2807  0008B0                     u931:
  2808  0008B0  EF7D  F004         	goto	l171
  2809  0008B4                     u930:
  2810  0008B4                     
  2811                           ;newmain.c: 225:                 num--;;newmain.c: 226:             }
  2812  0008B4  0E05               	movlw	5
  2813  0008B6  6E1C               	movwf	randomgen@num^0,c
  2814                           
  2815                           ;newmain.c: 227:         }
  2816  0008B8  EF75  F004         	goto	l1689
  2817  0008BC                     l1681:
  2818                           
  2819                           ;newmain.c: 228:     };newmain.c: 229: }
  2820  0008BC  50CE               	movf	206,w,c	;volatile
  2821  0008BE  0B01               	andlw	1
  2822  0008C0  6E1D               	movwf	randomgen@lastbit^0,c
  2823                           
  2824                           ;newmain.c: 230: 
  2825  0008C2  50CF               	movf	207,w,c	;volatile
  2826  0008C4  0B01               	andlw	1
  2827  0008C6  6E1E               	movwf	randomgen@intermbit^0,c
  2828  0008C8                     
  2829                           ;newmain.c: 231: 
  2830  0008C8  0E00               	movlw	0
  2831  0008CA  6E06               	movwf	_htmrval^0,c
  2832  0008CC                     
  2833                           ;newmain.c: 232: 
  2834  0008CC  0E00               	movlw	0
  2835  0008CE  6E11               	movwf	_ltmrval^0,c
  2836                           
  2837                           ;newmain.c: 233: void input_task()
  2838  0008D0  401D               	rrncf	randomgen@lastbit^0,w,c
  2839  0008D2  0B80               	andlw	128
  2840  0008D4  6E1D               	movwf	randomgen@lastbit^0,c
  2841                           
  2842                           ;newmain.c: 234: {
  2843  0008D6  401E               	rrncf	randomgen@intermbit^0,w,c
  2844  0008D8  0B80               	andlw	128
  2845  0008DA  6E1E               	movwf	randomgen@intermbit^0,c
  2846                           
  2847                           ;newmain.c: 235: 
  2848  0008DC  5011               	movf	_ltmrval^0,w,c
  2849  0008DE  101D               	iorwf	randomgen@lastbit^0,w,c
  2850  0008E0  6E11               	movwf	_ltmrval^0,c
  2851                           
  2852                           ;newmain.c: 236: 
  2853  0008E2  5006               	movf	_htmrval^0,w,c
  2854  0008E4  101E               	iorwf	randomgen@intermbit^0,w,c
  2855  0008E6  6E06               	movwf	_htmrval^0,c
  2856  0008E8                     
  2857                           ;newmain.c: 237: 
  2858  0008E8  061C               	decf	randomgen@num^0,f,c
  2859  0008EA                     l1689:
  2860                           
  2861                           ;newmain.c: 227:         }
  2862  0008EA  501C               	movf	randomgen@num^0,w,c
  2863  0008EC  A4D8               	btfss	status,2,c
  2864  0008EE  EF7B  F004         	goto	u941
  2865  0008F2  EF7D  F004         	goto	u940
  2866  0008F6                     u941:
  2867  0008F6  EF5E  F004         	goto	l1681
  2868  0008FA                     u940:
  2869  0008FA                     l171:
  2870  0008FA  0012               	return		;funcret
  2871  0008FC                     __end_of_randomgen:
  2872                           	callstack 0
  2873                           
  2874 ;; *************** function ___awmod *****************
  2875 ;; Defined at:
  2876 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/awmod.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  dividend        2    1[COMRAM] int 
  2879 ;;  divisor         2    3[COMRAM] int 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  sign            1    6[COMRAM] unsigned char 
  2882 ;;  counter         1    5[COMRAM] unsigned char 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  2    1[COMRAM] int 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;Total ram usage:        6 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    3
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_randomgen
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text13
  2907  000A58                     __ptext13:
  2908                           	callstack 0
  2909  000A58                     ___awmod:
  2910                           	callstack 25
  2911  000A58  0E00               	movlw	0
  2912  000A5A  6E18               	movwf	___awmod@sign^0,c
  2913  000A5C  BE14               	btfsc	(___awmod@dividend+1)^0,7,c
  2914  000A5E  EF35  F005         	goto	u810
  2915  000A62  EF33  F005         	goto	u811
  2916  000A66                     u811:
  2917  000A66  EF3B  F005         	goto	l1605
  2918  000A6A                     u810:
  2919  000A6A  6C13               	negf	___awmod@dividend^0,c
  2920  000A6C  1E14               	comf	(___awmod@dividend+1)^0,f,c
  2921  000A6E  B0D8               	btfsc	status,0,c
  2922  000A70  2A14               	incf	(___awmod@dividend+1)^0,f,c
  2923  000A72  0E01               	movlw	1
  2924  000A74  6E18               	movwf	___awmod@sign^0,c
  2925  000A76                     l1605:
  2926  000A76  BE16               	btfsc	(___awmod@divisor+1)^0,7,c
  2927  000A78  EF42  F005         	goto	u820
  2928  000A7C  EF40  F005         	goto	u821
  2929  000A80                     u821:
  2930  000A80  EF46  F005         	goto	l1609
  2931  000A84                     u820:
  2932  000A84  6C15               	negf	___awmod@divisor^0,c
  2933  000A86  1E16               	comf	(___awmod@divisor+1)^0,f,c
  2934  000A88  B0D8               	btfsc	status,0,c
  2935  000A8A  2A16               	incf	(___awmod@divisor+1)^0,f,c
  2936  000A8C                     l1609:
  2937  000A8C  5015               	movf	___awmod@divisor^0,w,c
  2938  000A8E  1016               	iorwf	(___awmod@divisor+1)^0,w,c
  2939  000A90  B4D8               	btfsc	status,2,c
  2940  000A92  EF4D  F005         	goto	u831
  2941  000A96  EF4F  F005         	goto	u830
  2942  000A9A                     u831:
  2943  000A9A  EF73  F005         	goto	l1625
  2944  000A9E                     u830:
  2945  000A9E  0E01               	movlw	1
  2946  000AA0  6E17               	movwf	___awmod@counter^0,c
  2947  000AA2  EF57  F005         	goto	l1615
  2948  000AA6                     l1613:
  2949  000AA6  90D8               	bcf	status,0,c
  2950  000AA8  3615               	rlcf	___awmod@divisor^0,f,c
  2951  000AAA  3616               	rlcf	(___awmod@divisor+1)^0,f,c
  2952  000AAC  2A17               	incf	___awmod@counter^0,f,c
  2953  000AAE                     l1615:
  2954  000AAE  AE16               	btfss	(___awmod@divisor+1)^0,7,c
  2955  000AB0  EF5C  F005         	goto	u841
  2956  000AB4  EF5E  F005         	goto	u840
  2957  000AB8                     u841:
  2958  000AB8  EF53  F005         	goto	l1613
  2959  000ABC                     u840:
  2960  000ABC                     l1617:
  2961  000ABC  5015               	movf	___awmod@divisor^0,w,c
  2962  000ABE  5C13               	subwf	___awmod@dividend^0,w,c
  2963  000AC0  5016               	movf	(___awmod@divisor+1)^0,w,c
  2964  000AC2  5814               	subwfb	(___awmod@dividend+1)^0,w,c
  2965  000AC4  A0D8               	btfss	status,0,c
  2966  000AC6  EF67  F005         	goto	u851
  2967  000ACA  EF69  F005         	goto	u850
  2968  000ACE                     u851:
  2969  000ACE  EF6D  F005         	goto	l1621
  2970  000AD2                     u850:
  2971  000AD2  5015               	movf	___awmod@divisor^0,w,c
  2972  000AD4  5E13               	subwf	___awmod@dividend^0,f,c
  2973  000AD6  5016               	movf	(___awmod@divisor+1)^0,w,c
  2974  000AD8  5A14               	subwfb	(___awmod@dividend+1)^0,f,c
  2975  000ADA                     l1621:
  2976  000ADA  90D8               	bcf	status,0,c
  2977  000ADC  3216               	rrcf	(___awmod@divisor+1)^0,f,c
  2978  000ADE  3215               	rrcf	___awmod@divisor^0,f,c
  2979  000AE0  2E17               	decfsz	___awmod@counter^0,f,c
  2980  000AE2  EF5E  F005         	goto	l1617
  2981  000AE6                     l1625:
  2982  000AE6  5018               	movf	___awmod@sign^0,w,c
  2983  000AE8  B4D8               	btfsc	status,2,c
  2984  000AEA  EF79  F005         	goto	u861
  2985  000AEE  EF7B  F005         	goto	u860
  2986  000AF2                     u861:
  2987  000AF2  EF7F  F005         	goto	l1629
  2988  000AF6                     u860:
  2989  000AF6  6C13               	negf	___awmod@dividend^0,c
  2990  000AF8  1E14               	comf	(___awmod@dividend+1)^0,f,c
  2991  000AFA  B0D8               	btfsc	status,0,c
  2992  000AFC  2A14               	incf	(___awmod@dividend+1)^0,f,c
  2993  000AFE                     l1629:
  2994  000AFE  C013  F013         	movff	___awmod@dividend,?___awmod
  2995  000B02  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  2996  000B06  0012               	return		;funcret
  2997  000B08                     __end_of___awmod:
  2998                           	callstack 0
  2999                           
  3000 ;; *************** function _health_decreaser *****************
  3001 ;; Defined at:
  3002 ;;		line 505 in file "newmain.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;Total ram usage:        0 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    3
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_game_task
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text14
  3031  000C96                     __ptext14:
  3032                           	callstack 0
  3033  000C96                     _health_decreaser:
  3034                           	callstack 26
  3035  000C96                     
  3036                           ;newmain.c: 507:     health--;
  3037  000C96  062A               	decf	_health^0,f,c
  3038  000C98                     
  3039                           ;newmain.c: 508:     if (health == 0)
  3040  000C98  502A               	movf	_health^0,w,c
  3041  000C9A  A4D8               	btfss	status,2,c
  3042  000C9C  EF52  F006         	goto	u151
  3043  000CA0  EF54  F006         	goto	u150
  3044  000CA4                     u151:
  3045  000CA4  EF56  F006         	goto	l270
  3046  000CA8                     u150:
  3047  000CA8                     
  3048                           ;newmain.c: 509:     {;newmain.c: 510:         game_state = LOSE;
  3049  000CA8  0E07               	movlw	7
  3050  000CAA  6E05               	movwf	_game_state^0,c
  3051  000CAC                     l270:
  3052  000CAC  0012               	return		;funcret
  3053  000CAE                     __end_of_health_decreaser:
  3054                           	callstack 0
  3055                           
  3056 ;; *************** function _lowPriorityISR *****************
  3057 ;; Defined at:
  3058 ;;		line 24 in file "newmain.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;		None
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;		None
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  1    wreg      void 
  3065 ;; Registers used:
  3066 ;;		None
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;Total ram usage:        1 bytes
  3077 ;; Hardware stack levels used:    1
  3078 ;; Hardware stack levels required when called:    2
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		Interrupt level 1
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	intcodelo
  3087  000018                     __pintcodelo:
  3088                           	callstack 0
  3089  000018                     _lowPriorityISR:
  3090                           	callstack 25
  3091                           
  3092                           ;incstack = 0
  3093  000018  802E               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3094  00001A  CFE0 F012          	movff	bsr,??_lowPriorityISR
  3095  00001E  C012  FFE0         	movff	??_lowPriorityISR,bsr
  3096  000022  902E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3097  000024  0010               	retfie	
  3098  000026                     __end_of_lowPriorityISR:
  3099                           	callstack 0
  3100                           
  3101 ;; *************** function _highPriorityISR *****************
  3102 ;; Defined at:
  3103 ;;		line 17 in file "newmain.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;		None
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2, status,0, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3121 ;;Total ram usage:        0 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    1
  3124 ;; This function calls:
  3125 ;;		_tmr_isr
  3126 ;; This function is called by:
  3127 ;;		Interrupt level 2
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	intcode
  3132  000008                     __pintcode:
  3133                           	callstack 0
  3134  000008                     _highPriorityISR:
  3135                           	callstack 25
  3136                           
  3137                           ;incstack = 0
  3138  000008  822E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3139  00000A  ED57  F006         	call	int_func,f	;refresh shadow registers
  3140                           
  3141                           	psect	intcode_body
  3142  000CAE                     __pintcode_body:
  3143                           	callstack 25
  3144  000CAE                     int_func:
  3145                           	callstack 25
  3146  000CAE  0006               	pop		; remove dummy address from shadow register refresh
  3147  000CB0                     
  3148                           ;newmain.c: 19: int8_t isRC0Pressed;
  3149  000CB0  A4F2               	btfss	242,2,c	;volatile
  3150  000CB2  EF5D  F006         	goto	i2u78_41
  3151  000CB6  EF5F  F006         	goto	i2u78_40
  3152  000CBA                     i2u78_41:
  3153  000CBA  EF61  F006         	goto	i2l74
  3154  000CBE                     i2u78_40:
  3155  000CBE                     
  3156                           ;newmain.c: 20: int8_t isRG0Pressed;;newmain.c: 21: int8_t isRG1Pressed;
  3157  000CBE  EC84  F005         	call	_tmr_isr	;wreg free
  3158  000CC2                     i2l74:
  3159  000CC2  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3160  000CC4  0011               	retfie		f
  3161  000CC6                     __end_of_highPriorityISR:
  3162                           	callstack 0
  3163                           
  3164 ;; *************** function _tmr_isr *****************
  3165 ;; Defined at:
  3166 ;;		line 135 in file "newmain.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;Total ram usage:        0 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_highPriorityISR
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text17
  3194  000B08                     __ptext17:
  3195                           	callstack 0
  3196  000B08                     _tmr_isr:
  3197                           	callstack 25
  3198  000B08                     
  3199                           ;newmain.c: 137:     INTCONbits.TMR0IF = 0;
  3200  000B08  040F               	decf	_sevenSeg2WayCounter^0,w,c
  3201  000B0A  A4D8               	btfss	status,2,c
  3202  000B0C  EF8A  F005         	goto	i2u16_41
  3203  000B10  EF8C  F005         	goto	i2u16_40
  3204  000B14                     i2u16_41:
  3205  000B14  EF90  F005         	goto	i2l1201
  3206  000B18                     i2u16_40:
  3207  000B18                     
  3208                           ;newmain.c: 138:     if (--tmr_ticks_left == 0)
  3209  000B18  0E00               	movlw	0
  3210  000B1A  6E0F               	movwf	_sevenSeg2WayCounter^0,c
  3211  000B1C  EF92  F005         	goto	i2l1203
  3212  000B20                     i2l1201:
  3213                           
  3214                           ;newmain.c: 140: }
  3215  000B20  0E01               	movlw	1
  3216  000B22  6E0F               	movwf	_sevenSeg2WayCounter^0,c
  3217  000B24                     i2l1203:
  3218                           
  3219                           ;newmain.c: 141: void tmr_init()
  3220  000B24  0E02               	movlw	2
  3221  000B26  180E               	xorwf	_sevenSeg3WayCounter^0,w,c
  3222  000B28  A4D8               	btfss	status,2,c
  3223  000B2A  EF99  F005         	goto	i2u17_41
  3224  000B2E  EF9B  F005         	goto	i2u17_40
  3225  000B32                     i2u17_41:
  3226  000B32  EF9F  F005         	goto	i2l1207
  3227  000B36                     i2u17_40:
  3228  000B36                     
  3229                           ;newmain.c: 142: {
  3230  000B36  0E00               	movlw	0
  3231  000B38  6E0E               	movwf	_sevenSeg3WayCounter^0,c
  3232  000B3A  EFA0  F005         	goto	i2l1209
  3233  000B3E                     i2l1207:
  3234                           
  3235                           ;newmain.c: 144: 
  3236  000B3E  2A0E               	incf	_sevenSeg3WayCounter^0,f,c
  3237  000B40                     i2l1209:
  3238                           
  3239                           ;newmain.c: 145: 
  3240  000B40  0E03               	movlw	3
  3241  000B42  180D               	xorwf	_sevenSeg4WayCounter^0,w,c
  3242  000B44  A4D8               	btfss	status,2,c
  3243  000B46  EFA7  F005         	goto	i2u18_41
  3244  000B4A  EFA9  F005         	goto	i2u18_40
  3245  000B4E                     i2u18_41:
  3246  000B4E  EFAD  F005         	goto	i2l1213
  3247  000B52                     i2u18_40:
  3248  000B52                     
  3249                           ;newmain.c: 146:     T0CON = 0x47;
  3250  000B52  0E00               	movlw	0
  3251  000B54  6E0D               	movwf	_sevenSeg4WayCounter^0,c
  3252  000B56  EFAE  F005         	goto	i2l1215
  3253  000B5A                     i2l1213:
  3254                           
  3255                           ;newmain.c: 148:     T1CON = 0xc1;
  3256  000B5A  2A0D               	incf	_sevenSeg4WayCounter^0,f,c
  3257  000B5C                     i2l1215:
  3258                           
  3259                           ;newmain.c: 149: }
  3260  000B5C  94F2               	bcf	242,2,c	;volatile
  3261  000B5E                     
  3262                           ;newmain.c: 150: 
  3263  000B5E  2E01               	decfsz	_tmr_ticks_left^0,f,c
  3264  000B60  EFB4  F005         	goto	i2l148
  3265  000B64                     
  3266                           ;newmain.c: 151: 
  3267  000B64  0E01               	movlw	1
  3268  000B66  6E03               	movwf	_tmr_state^0,c
  3269  000B68                     i2l148:
  3270  000B68  0012               	return		;funcret
  3271  000B6A                     __end_of_tmr_isr:
  3272                           	callstack 0
  3273  0000                     
  3274                           	psect	rparam
  3275  0000                     
  3276                           	psect	temp
  3277  00002E                     btemp:
  3278                           	callstack 0
  3279  00002E                     	ds	1
  3280  0000                     int$flags	set	btemp
  3281  0000                     wtemp8	set	btemp+1
  3282  0000                     ttemp5	set	btemp+1
  3283  0000                     ttemp6	set	btemp+4
  3284  0000                     ttemp7	set	btemp+8
  3285                           
  3286                           	psect	idloc
  3287                           
  3288                           ;Config register IDLOC0 @ 0x200000
  3289                           ;	unspecified, using default values
  3290  200000                     	org	2097152
  3291  200000  FF                 	db	255
  3292                           
  3293                           ;Config register IDLOC1 @ 0x200001
  3294                           ;	unspecified, using default values
  3295  200001                     	org	2097153
  3296  200001  FF                 	db	255
  3297                           
  3298                           ;Config register IDLOC2 @ 0x200002
  3299                           ;	unspecified, using default values
  3300  200002                     	org	2097154
  3301  200002  FF                 	db	255
  3302                           
  3303                           ;Config register IDLOC3 @ 0x200003
  3304                           ;	unspecified, using default values
  3305  200003                     	org	2097155
  3306  200003  FF                 	db	255
  3307                           
  3308                           ;Config register IDLOC4 @ 0x200004
  3309                           ;	unspecified, using default values
  3310  200004                     	org	2097156
  3311  200004  FF                 	db	255
  3312                           
  3313                           ;Config register IDLOC5 @ 0x200005
  3314                           ;	unspecified, using default values
  3315  200005                     	org	2097157
  3316  200005  FF                 	db	255
  3317                           
  3318                           ;Config register IDLOC6 @ 0x200006
  3319                           ;	unspecified, using default values
  3320  200006                     	org	2097158
  3321  200006  FF                 	db	255
  3322                           
  3323                           ;Config register IDLOC7 @ 0x200007
  3324                           ;	unspecified, using default values
  3325  200007                     	org	2097159
  3326  200007  FF                 	db	255
  3327                           
  3328                           	psect	config
  3329                           
  3330                           ; Padding undefined space
  3331  300000                     	org	3145728
  3332  300000  FF                 	db	255
  3333                           
  3334                           ;Config register CONFIG1H @ 0x300001
  3335                           ;	Oscillator Selection bits
  3336                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  3337                           ;	Fail-Safe Clock Monitor Enable bit
  3338                           ;	FCMEN = 0x0, unprogrammed default
  3339                           ;	Internal/External Oscillator Switchover bit
  3340                           ;	IESO = 0x0, unprogrammed default
  3341  300001                     	org	3145729
  3342  300001  06                 	db	6
  3343                           
  3344                           ;Config register CONFIG2L @ 0x300002
  3345                           ;	unspecified, using default values
  3346                           ;	Power-up Timer Enable bit
  3347                           ;	PWRT = 0x1, unprogrammed default
  3348                           ;	Brown-out Reset Enable bits
  3349                           ;	BOREN = 0x3, unprogrammed default
  3350                           ;	Brown-out Voltage bits
  3351                           ;	BORV = 0x3, unprogrammed default
  3352  300002                     	org	3145730
  3353  300002  1F                 	db	31
  3354                           
  3355                           ;Config register CONFIG2H @ 0x300003
  3356                           ;	Watchdog Timer
  3357                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3358                           ;	Watchdog Timer Postscale Select bits
  3359                           ;	WDTPS = 0xF, unprogrammed default
  3360  300003                     	org	3145731
  3361  300003  1E                 	db	30
  3362                           
  3363                           ;Config register CONFIG3L @ 0x300004
  3364                           ;	unspecified, using default values
  3365                           ;	Processor Data Memory Mode Select bits
  3366                           ;	MODE = 0x3, unprogrammed default
  3367                           ;	Address Bus Width Select bits
  3368                           ;	ADDRBW = 0x3, unprogrammed default
  3369                           ;	Data Bus Width Select bit
  3370                           ;	DATABW = 0x1, unprogrammed default
  3371                           ;	External Bus Data Wait Enable bit
  3372                           ;	WAIT = 0x1, unprogrammed default
  3373  300004                     	org	3145732
  3374  300004  F3                 	db	243
  3375                           
  3376                           ;Config register CONFIG3H @ 0x300005
  3377                           ;	unspecified, using default values
  3378                           ;	CCP2 MUX bit
  3379                           ;	CCP2MX = 0x1, unprogrammed default
  3380                           ;	ECCP MUX bit
  3381                           ;	ECCPMX = 0x1, unprogrammed default
  3382                           ;	Low-Power Timer1 Oscillator Enable bit
  3383                           ;	LPT1OSC = 0x0, unprogrammed default
  3384                           ;	MCLR Pin Enable bit
  3385                           ;	MCLRE = 0x1, unprogrammed default
  3386  300005                     	org	3145733
  3387  300005  83                 	db	131
  3388                           
  3389                           ;Config register CONFIG4L @ 0x300006
  3390                           ;	unspecified, using default values
  3391                           ;	Stack Full/Underflow Reset Enable bit
  3392                           ;	STVREN = 0x1, unprogrammed default
  3393                           ;	Single-Supply ICSP Enable bit
  3394                           ;	LVP = 0x1, unprogrammed default
  3395                           ;	Boot Block Size Select bits
  3396                           ;	BBSIZ = 0x0, unprogrammed default
  3397                           ;	Extended Instruction Set Enable bit
  3398                           ;	XINST = 0x0, unprogrammed default
  3399                           ;	Background Debugger Enable bit
  3400                           ;	DEBUG = 0x1, unprogrammed default
  3401  300006                     	org	3145734
  3402  300006  85                 	db	133
  3403                           
  3404                           ; Padding undefined space
  3405  300007                     	org	3145735
  3406  300007  FF                 	db	255
  3407                           
  3408                           ;Config register CONFIG5L @ 0x300008
  3409                           ;	unspecified, using default values
  3410                           ;	Code Protection bit Block 0
  3411                           ;	CP0 = 0x1, unprogrammed default
  3412                           ;	Code Protection bit Block 1
  3413                           ;	CP1 = 0x1, unprogrammed default
  3414                           ;	Code Protection bit Block 2
  3415                           ;	CP2 = 0x1, unprogrammed default
  3416                           ;	Code Protection bit Block 3
  3417                           ;	CP3 = 0x1, unprogrammed default
  3418                           ;	Code Protection bit Block 4
  3419                           ;	CP4 = 0x1, unprogrammed default
  3420                           ;	Code Protection bit Block 5
  3421                           ;	CP5 = 0x1, unprogrammed default
  3422                           ;	Code Protection bit Block 6
  3423                           ;	CP6 = 0x1, unprogrammed default
  3424                           ;	Code Protection bit Block 7
  3425                           ;	CP7 = 0x1, unprogrammed default
  3426  300008                     	org	3145736
  3427  300008  FF                 	db	255
  3428                           
  3429                           ;Config register CONFIG5H @ 0x300009
  3430                           ;	unspecified, using default values
  3431                           ;	Boot Block Code Protection bit
  3432                           ;	CPB = 0x1, unprogrammed default
  3433                           ;	Data EEPROM Code Protection bit
  3434                           ;	CPD = 0x1, unprogrammed default
  3435  300009                     	org	3145737
  3436  300009  C0                 	db	192
  3437                           
  3438                           ;Config register CONFIG6L @ 0x30000A
  3439                           ;	unspecified, using default values
  3440                           ;	Write Protection bit Block 0
  3441                           ;	WRT0 = 0x1, unprogrammed default
  3442                           ;	Write Protection bit Block 1
  3443                           ;	WRT1 = 0x1, unprogrammed default
  3444                           ;	Write Protection bit Block 2
  3445                           ;	WRT2 = 0x1, unprogrammed default
  3446                           ;	Write Protection bit Block 3
  3447                           ;	WRT3 = 0x1, unprogrammed default
  3448                           ;	Write Protection bit Block 4
  3449                           ;	WRT4 = 0x1, unprogrammed default
  3450                           ;	Write Protection bit Block 5
  3451                           ;	WRT5 = 0x1, unprogrammed default
  3452                           ;	Write Protection bit Block 6
  3453                           ;	WRT6 = 0x1, unprogrammed default
  3454                           ;	Write Protection bit Block 7
  3455                           ;	WRT7 = 0x1, unprogrammed default
  3456  30000A                     	org	3145738
  3457  30000A  FF                 	db	255
  3458                           
  3459                           ;Config register CONFIG6H @ 0x30000B
  3460                           ;	unspecified, using default values
  3461                           ;	Configuration Register Write Protection bit
  3462                           ;	WRTC = 0x1, unprogrammed default
  3463                           ;	Boot Block Write Protection bit
  3464                           ;	WRTB = 0x1, unprogrammed default
  3465                           ;	Data EEPROM Write Protection bit
  3466                           ;	WRTD = 0x1, unprogrammed default
  3467  30000B                     	org	3145739
  3468  30000B  E0                 	db	224
  3469                           
  3470                           ;Config register CONFIG7L @ 0x30000C
  3471                           ;	unspecified, using default values
  3472                           ;	Table Read Protection bit Block 0
  3473                           ;	EBTR0 = 0x1, unprogrammed default
  3474                           ;	Table Read Protection bit Block 1
  3475                           ;	EBTR1 = 0x1, unprogrammed default
  3476                           ;	Table Read Protection bit Block 2
  3477                           ;	EBTR2 = 0x1, unprogrammed default
  3478                           ;	Table Read Protection bit Block 3
  3479                           ;	EBTR3 = 0x1, unprogrammed default
  3480                           ;	Table Read Protection bit Block 4
  3481                           ;	EBTR4 = 0x1, unprogrammed default
  3482                           ;	Table Read Protection bit Block 5
  3483                           ;	EBTR5 = 0x1, unprogrammed default
  3484                           ;	Table Read Protection bit Block 6
  3485                           ;	EBTR6 = 0x1, unprogrammed default
  3486                           ;	Table Read Protection bit Block 7
  3487                           ;	EBTR7 = 0x1, unprogrammed default
  3488  30000C                     	org	3145740
  3489  30000C  FF                 	db	255
  3490                           
  3491                           ;Config register CONFIG7H @ 0x30000D
  3492                           ;	unspecified, using default values
  3493                           ;	Boot Block Table Read Protection bit
  3494                           ;	EBTRB = 0x1, unprogrammed default
  3495  30000D                     	org	3145741
  3496  30000D  40                 	db	64
  3497                           tosu	equ	0xFFF
  3498                           tosh	equ	0xFFE
  3499                           tosl	equ	0xFFD
  3500                           stkptr	equ	0xFFC
  3501                           pclatu	equ	0xFFB
  3502                           pclath	equ	0xFFA
  3503                           pcl	equ	0xFF9
  3504                           tblptru	equ	0xFF8
  3505                           tblptrh	equ	0xFF7
  3506                           tblptrl	equ	0xFF6
  3507                           tablat	equ	0xFF5
  3508                           prodh	equ	0xFF4
  3509                           prodl	equ	0xFF3
  3510                           indf0	equ	0xFEF
  3511                           postinc0	equ	0xFEE
  3512                           postdec0	equ	0xFED
  3513                           preinc0	equ	0xFEC
  3514                           plusw0	equ	0xFEB
  3515                           fsr0h	equ	0xFEA
  3516                           fsr0l	equ	0xFE9
  3517                           wreg	equ	0xFE8
  3518                           indf1	equ	0xFE7
  3519                           postinc1	equ	0xFE6
  3520                           postdec1	equ	0xFE5
  3521                           preinc1	equ	0xFE4
  3522                           plusw1	equ	0xFE3
  3523                           fsr1h	equ	0xFE2
  3524                           fsr1l	equ	0xFE1
  3525                           bsr	equ	0xFE0
  3526                           indf2	equ	0xFDF
  3527                           postinc2	equ	0xFDE
  3528                           postdec2	equ	0xFDD
  3529                           preinc2	equ	0xFDC
  3530                           plusw2	equ	0xFDB
  3531                           fsr2h	equ	0xFDA
  3532                           fsr2l	equ	0xFD9
  3533                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         17
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     16      45
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_game_task
    _sevenSeg_controller->_sevenSeg
    _game_task->_randomgen
    _randomgen->___awmod

Critical Paths under _lowPriorityISR in COMRAM

    None.

Critical Paths under _highPriorityISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _lowPriorityISR in BANK0

    None.

Critical Paths under _highPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lowPriorityISR in BANK1

    None.

Critical Paths under _highPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lowPriorityISR in BANK2

    None.

Critical Paths under _highPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lowPriorityISR in BANK3

    None.

Critical Paths under _highPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lowPriorityISR in BANK4

    None.

Critical Paths under _highPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lowPriorityISR in BANK5

    None.

Critical Paths under _highPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lowPriorityISR in BANK6

    None.

Critical Paths under _highPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lowPriorityISR in BANK7

    None.

Critical Paths under _highPriorityISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lowPriorityISR in BANK8

    None.

Critical Paths under _highPriorityISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lowPriorityISR in BANK9

    None.

Critical Paths under _highPriorityISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lowPriorityISR in BANK10

    None.

Critical Paths under _highPriorityISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lowPriorityISR in BANK11

    None.

Critical Paths under _highPriorityISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lowPriorityISR in BANK12

    None.

Critical Paths under _highPriorityISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lowPriorityISR in BANK13

    None.

Critical Paths under _highPriorityISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lowPriorityISR in BANK14

    None.

Critical Paths under _highPriorityISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lowPriorityISR in BANK15

    None.

Critical Paths under _highPriorityISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2420
                          _game_task
                           _init_irq
                         _init_ports
                          _init_vars
                         _input_task
                _sevenSeg_controller
                           _tmr_init
 ---------------------------------------------------------------------------------
 (1) _tmr_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sevenSeg_controller                                  2     2      0    1488
                                              5 COMRAM     2     2      0
                           _sevenSeg
 ---------------------------------------------------------------------------------
 (2) _sevenSeg                                             4     3      1    1488
                                              1 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _input_task                                           0     0      0       0
                         _init_ports
                          _init_vars
 ---------------------------------------------------------------------------------
 (2) _init_vars                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_irq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _game_task                                            3     3      0     932
                                             13 COMRAM     3     3      0
                   _health_decreaser
                          _randomgen
                         _reset_task
                      _shape_shifter
                          _tmr_start
 ---------------------------------------------------------------------------------
 (2) _tmr_start                                            1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _shape_shifter                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _reset_task                                           0     0      0       0
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _randomgen                                            6     6      0     889
                                              7 COMRAM     6     6      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _health_decreaser                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _lowPriorityISR                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _highPriorityISR                                      0     0      0       0
                            _tmr_isr
 ---------------------------------------------------------------------------------
 (6) _tmr_isr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _game_task
     _health_decreaser
     _randomgen
       ___awmod
     _reset_task
       _init_ports
     _shape_shifter
     _tmr_start
   _init_irq
   _init_ports
   _init_vars
   _input_task
     _init_ports
     _init_vars
   _sevenSeg_controller
     _sevenSeg
   _tmr_init

 _lowPriorityISR (ROOT)

 _highPriorityISR (ROOT)
   _tmr_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     10      2D       1       47.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      32        0.0%
DATA                 0      0      2D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed May 11 21:33:01 2022

                          _L1 002D                            _L2 002C                            _L3 002B  
            randomgen@lastbit 001D                            bsr 000FE0              randomgen@noteval 001B  
                         l200 0796                           l132 0D00                           l126 0BB4  
                         l151 0CEC                           l161 080A                           l129 0BFE  
                         l162 084A                           l154 0CDA                           l171 08FA  
                         l235 05F8                           l180 0694                           l260 0A56  
                         l270 0CAC                           l326 03DC                           l190 071E  
                         l182 06A6                           l263 0C94                           l192 0748  
                         l184 06D0                           l177 062E                           l266 0CFA  
                         l282 00B4                           l194 075A                           l186 06E2  
                         l291 00F6                           l196 0784                           l188 070C  
                         l285 00CA                           l294 0108                           l584 0B06  
                         u200 061A                           u201 0616                           u210 062A  
                         u211 0626                           u300 0700                           u220 063C  
                         u301 06FC                           u221 0638                           u150 0CA8  
                         u310 071A                           u230 067A                           u151 0CA4  
                         u311 0716                           u231 0676                           u320 072E  
                         u240 0688                           u321 072A                           u241 0684  
                         u330 073C                           u250 06A2                           u331 0738  
                         u251 069E                           u340 0756                           u260 06B6  
                         u341 0752                           u261 06B2                           u350 076A  
                         u270 06C4                           u190 060A                           u351 0766  
                         u271 06C0                           u191 0606                           u360 0778  
                         u280 06DE                           u361 0774                           u281 06DA  
                         u370 0792                           u290 06F2                           u371 078E  
                         u291 06EE                           u810 0A6A                           u811 0A66  
                         u820 0A84                           u900 081E                           u821 0A80  
                         u901 081A                           u830 0A9E                           u910 085C  
                         u831 0A9A                           u911 0858                           u840 0ABC  
                         u920 08A2                           u841 0AB8                           u921 089E  
                         u850 0AD2                           u930 08B4                           u851 0ACE  
                         u931 08B0                           u860 0AF6                           u940 08FA  
                         u861 0AF2                           u941 08F6                           u870 07AC  
                         u950 03F2                           u871 07A8                           u951 03EE  
                         u880 07C8                           u960 041E                           u881 07C4  
                         u961 041A                           u890 080A                           u970 044A  
                         u891 0806                           u971 0446                           u980 0476  
                         u981 0472                           u990 04A2                           u991 049E  
                ___awmod@sign 0018                           wreg 000FE8                          l1013 0BB6  
                        l2001 035A                          l2003 036C                          l1051 0B6A  
                        l2005 0370                          l2013 0382                          l1221 0CFC  
                        l1061 0B86                          l1053 0B7E                          l1063 0CC8  
                        l2007 037A                          l1055 0B80                          l1223 0CDC  
                        l2031 0C14                          l1065 0CCC                          l1057 0B82  
                        l1241 0666                          l1233 063C                          l1225 05FA  
                        l2033 0C18                          l1067 0CD0                          l1059 0B84  
                        l1251 06B6                          l1235 0648                          l1243 066A  
                        l1227 060A                          l2035 0C28                          l2027 0C00  
                        l1069 0CD8                          l1261 071A                          l1253 06C4  
                        l1245 067A                          l1237 064C                          l1229 061A  
                        l2037 0C3C                          l2029 0C10                          l1191 0C96  
                        l1183 0C7C                          l2071 0164                          l1271 0778  
                        l1263 072E                          l1255 06DE                          l1247 0688  
                        l1239 0664                          l2063 05B2                          l1193 0C98  
                        l1601 0A6A                          l1185 0C90                          l2073 0396  
                        l1273 0792                          l1265 073C                          l1257 06F2  
                        l1249 06A2                          l2065 0986                          l1195 0CA8  
                        l1611 0A9E                          l1603 0A72                          l1187 0CEE  
                        l1267 0756                          l1259 0700                          l2067 0A30  
                        l1621 0ADA                          l1613 0AA6                          l1605 0A76  
                        l1189 0CF6                          l2069 0136                          l1269 076A  
                        l1701 0922                          l1623 0AE0                          l1615 0AAE  
                        l1607 0A84                          l1711 094A                          l1703 092A  
                        l1617 0ABC                          l1625 0AE6                          l1609 0A8C  
                        l1641 07B8                          l1633 0798                          l1713 0952  
                        l1705 0932                          l1801 0570                          l1627 0AF6  
                        l1619 0AD2                          l1651 07F0                          l1643 07C8  
                        l1635 07AC                          l1731 0A14                          l1715 095A  
                        l1707 093A                          l1723 0972                          l1803 0582  
                        l1629 0AFE                          l1661 082A                          l1653 07F6  
                        l1645 07CE                          l1637 07B4                          l1901 01C8  
                        l1821 0040                          l1725 09FC                          l1717 0962  
                        l1709 0942                          l1805 0590                          l1671 0874  
                        l1663 082E                          l1655 07F8                          l1647 07E4  
                        l1639 07B4                          l1911 01EC                          l1903 01D0  
                        l1831 0066                          l1823 0042                          l1815 002A  
                        l1727 0A04                          l1719 096A                          l1735 0A1C  
                        l1751 0400                          l1681 08BC                          l1673 0890  
                        l1665 085C                          l1657 080E                          l1649 07E8  
                        l1921 0218                          l1913 01FC                          l1905 01D4  
                        l1841 007E                          l1833 0068                          l1825 0052  
                        l1817 002E                          l1729 0A0C                          l1761 044A  
                        l1753 040E                          l1809 059E                          l1745 03DE  
                        l1683 08C8                          l1667 0864                          l1675 0892  
                        l1659 081E                          l1931 0234                          l1923 0222  
                        l1915 0200                          l1907 01E4                          l1851 00A4  
                        l1843 008E                          l1835 006A                          l1827 0054  
                        l1819 003E                          l1691 08FE                          l1771 0492  
                        l1763 0458                          l1755 041E                          l1747 03E2  
                        l1597 0A58                          l1685 08CC                          l1669 0870  
                        l1677 08A2                          l1941 0260                          l1933 0236  
                        l1925 0226                          l1917 0202                          l1909 01E8  
                        l1861 00E0                          l1853 00AC                          l1845 0090  
                        l1837 007A                          l1829 0056                          l1693 0902  
                        l1781 04DC                          l1773 04A2                          l1765 0466  
                        l1757 042C                          l1749 03F2                          l1599 0A5C  
                        l1687 08E8                          l1679 08B4                          l1951 0294  
                        l1943 0274                          l1935 023E                          l1927 022C  
                        l1919 0214                          l1863 00E4                          l1855 00C2  
                        l1847 0092                          l1839 007C                          l1695 090A  
                        l1791 0526                          l1783 04EA                          l1775 04B0  
                        l1767 0476                          l1759 043A                          l1689 08EA  
                        l1961 02C0                          l1953 0298                          l1945 027C  
                        l1937 024E                          l1929 0230                          l1881 0172  
                        l1849 00A2                          l1697 0912                          l1793 0534  
                        l1785 04FA                          l1777 04BE                          l1769 0484  
                        l1971 02DC                          l1963 02C4                          l1955 02A8  
                        l1947 0280                          l1939 0250                          l1891 018A  
                        l1883 017A                          l1859 00D8                          l1699 091A  
                        l1795 0544                          l1787 0508                          l1779 04CE  
                        l1981 02FC                          l1973 02E0                          l1965 02CE  
                        l1957 02AC                          l1949 0290                          l1893 0192  
                        l1885 0180                          l1797 0552                          l1789 0518  
                        l1991 033C                          l1983 030C                          l1975 02E2  
                        l1967 02D2                          l1959 02AE                          l1895 01A2  
                        l1887 0184                          l1879 011A                          l1799 0562  
                        l1993 0340                          l1985 0320                          l1977 02EA  
                        l1969 02D8                          l1897 01A4                          l1889 0188  
                        l1995 0344                          l1987 0328                          l1979 02FA  
                        l1899 01B4                          l1997 0354                          l1989 032C  
                        l1999 0358                          u1000 04CE                          u1001 04CA  
                        u1010 04FA                          u1011 04F6                          u1100 008E  
                        u1020 0518                          u1101 008A                          u1021 0514  
                        u1110 00A2                          u1030 0544                          u1111 009E  
                        u1031 0540                          u1200 01E4                          u1120 00C2  
                        u1040 0562                          u1201 01E0                          u1121 00BE  
                        u1041 055E                          u1210 01FC                          u1130 00D8  
                        u1050 0582                          u1211 01F8                          u1131 00D4  
                        u1051 057E                          u1300 030C                          u1220 0214  
                        u1140 00F2                          u1060 003E                          u1301 0308  
                        u1221 0210                          u1141 00EE                          u1061 003A  
                        u1310 0320                          u1230 024E                          u1150 0104  
                        u1070 0052                          u1311 031C                          u1231 024A  
                        u1151 0100                          u1071 004E                          u1320 033C  
                        u1240 0260                          u1160 0116                          u1080 0066  
                        u1321 0338                          u1241 025C                          u1161 0112  
                        u1081 0062                          u1330 0354                          u1250 0274  
                        u1170 01A2                          u1090 007A                          u1331 0350  
                        u1251 0270                          u1171 019E                          u1091 0076  
                        u1340 036C                          u1260 0290                          u1180 01B4  
                        u1341 0368                          u1261 028C                          u1181 01B0  
                        u1270 02A8                          u1190 01C8                          u1350 0C28  
                        u1271 02A4                          u1191 01C4                          u1351 0C24  
                        u1280 02C0                          u1360 0C38                          u1281 02BC  
                        u1361 0C34                          u1290 02FA                          u1291 02F6  
                        i1l79 001E                          i2l74 0CC2                          _TMR0 000FD6  
                _tmr_startreq 0002                  _starterDelay 0008                          _main 0C00  
                        btemp 002E            randomgen@intermbit 001E                          start 0026  
                ___param_bank 000000                         ?_main 0012               __end_of___awmod 0B08  
                       _T0CON 000FD5                         _T1CON 000FCD                         i2l148 0B68  
                       _TMR1H 000FCF                         _TMR1L 000FCE                         _PORTA 000F80  
             _sevenSegCounter 0010                         _PORTB 000F81                         _PORTC 000F82  
                       _PORTD 000F83                         _PORTE 000F84                         _PORTF 000F85  
                       _PORTH 000F87                         _PORTJ 000F88                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
                       _TRISE 000F96                         _TRISF 000F97                         _TRISG 000F98  
                       _TRISH 000F99                         _TRISJ 000F9A                         _level 0029  
                       tablat 000FF5               __end_of_tmr_isr 0B6A                         ttemp5 002F  
                       ttemp6 0032                         ttemp7 0036                         status 000FD8  
                       wtemp8 002F                _lowPriorityISR 0018               __initialization 0C48  
                __end_of_main 0C48                _tmr_ticks_left 0001         __end_of_shape_shifter 0C96  
                      ??_main 0022                 __activetblptr 000003                        _ADCON1 000FC1  
    __size_of_highPriorityISR 0CBE                        i2l1201 0B20                        i2l1211 0B52  
                      i2l1203 0B24                        i2l1213 0B5A                        i2l1205 0B36  
                      i2l1215 0B5C                        i2l1207 0B3E                        i2l1217 0B5E  
                      i2l1209 0B40                        i2l1219 0B64                        i2l1197 0B08  
                      i2l1199 0B18                        i2l1557 0CB0                        i2l1559 0CBE  
                      _INTCON 000FF2        __end_of_lowPriorityISR 0026     __size_of_health_decreaser 0018  
                   ??___awmod 0017                        _health 002A              __end_of_init_irq 0D02  
                _isRC0Pressed 000A                        clear_0 0C6C               ___awmod@divisor 0015  
             ___awmod@counter 0017                  __pdataCOMRAM 002B              __end_of_sevenSeg 0A58  
                _isRG0Pressed 0028                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                  _isRG1Pressed 0027                  _isRG2Pressed 0026  
            __end_of_tmr_init 0CEE                  _isRG3Pressed 0025                     ??_tmr_isr 0012  
                _isRG4Pressed 0024                    __accesstop 0060       __end_of__initialization 0C72  
 __end_of_sevenSeg_controller 05FA               ?_lowPriorityISR 0012                 ___rparam_used 000001  
              __pcstackCOMRAM 0012                game_task@count 0021            __size_of_game_task 03B4  
                  __pnvCOMRAM 0022            __size_of_init_vars 004C             ??_highPriorityISR 0012  
                  _game_level 0022            __size_of_randomgen 0164                    _game_state 0005  
                     i2u16_40 0B18                       i2u16_41 0B14                       i2u17_40 0B36  
                     i2u17_41 0B32                       i2u18_40 0B52                       i2u18_41 0B4E  
                     i2u78_40 0CBE                       i2u78_41 0CBA            __size_of_tmr_start 0016  
                   ?_init_irq 0012             __end_of_game_task 03DE                       __Hparam 0000  
                     __Lparam 0000                     ?_sevenSeg 0013              _health_decreaser 0C96  
                     ___awmod 0A58                     ?_tmr_init 0012                       __pcinit 0C48  
                  _init_ports 0BB6                       __ramtop 1000                       __ptext0 0C00  
                     __ptext1 0CDC                       __ptext2 03DE                       __ptext3 08FC  
                     __ptext4 05FA                       __ptext5 0B6A                       __ptext6 0CFC  
                     __ptext7 002A                       __ptext8 0CC6                       __ptext9 0C7C  
           __end_of_init_vars 0BB6              ___awmod@dividend 0013                       _htmrval 0006  
                     _ltmrval 0011                       _whichRG 0023                       _tmr_isr 0B08  
                  _input_task 05FA             __end_of_randomgen 08FC                __pintcode_body 0CAE  
        end_of_initialization 0C72                       int_func 0CAE                    ??_init_irq 0013  
                  _reset_task 0CEE                    ??_sevenSeg 0014                       postinc0 000FEE  
                  ??_tmr_init 0013             __end_of_tmr_start 0CDC                     _PORTCbits 000F82  
                   _PORTFbits 000F85                     _PORTGbits 000F86                _isGameFinished 000B  
            ??_lowPriorityISR 0012        __size_of_shape_shifter 001A                 __pidataCOMRAM 0D02  
                 ?_init_ports 0012           start_initialization 0C48                   ?_input_task 0012  
             _highPriorityISR 0008                   ?_reset_task 0012  __size_of_sevenSeg_controller 021C  
               _shape_shifter 0C7C                  randomgen@val 001A                  randomgen@num 001C  
                 __pbssCOMRAM 0001      __end_of_health_decreaser 0CAE           __size_of_init_ports 004A  
                  randomgen@i 0019             __size_of_init_irq 0006                     _game_task 002A  
                   __pintcode 0008                      ?___awmod 0013           __size_of_input_task 019E  
           __size_of_sevenSeg 015C                   __pintcodelo 0018             __size_of_tmr_init 0012  
              ?_shape_shifter 0012                _level_subcount 0004       __end_of_highPriorityISR 0CC6  
                   _isPressed 0009           __size_of_reset_task 000E                      ?_tmr_isr 0012  
                   _init_vars 0B6A                     _randomgen 0798                    ?_game_task 0012  
                   _tmr_state 0003                     _tmr_start 0CC6                 _isGameStarted 000C  
                  ?_init_vars 0012                    ?_randomgen 0012                      __Hrparam 0000  
                    __Lrparam 0000              __size_of___awmod 00B0               ??_shape_shifter 0013  
                ??_init_ports 0013                    ?_tmr_start 0012              ?_highPriorityISR 0012  
                ??_input_task 0013                      __ptext10 0CEE                      __ptext11 0BB6  
                    __ptext12 0798                      __ptext13 0A58                      __ptext14 0C96  
                    __ptext17 0B08           _sevenSeg_controller 03DE              __size_of_tmr_isr 0062  
               __size_of_main 0048                      _init_irq 0CFC            __end_of_init_ports 0C00  
                   sevenSeg@D 0013                     sevenSeg@J 0016                      _tmr1flag 0007  
                ??_reset_task 0013                   ??_game_task 001F                      _sevenSeg 08FC  
        ?_sevenSeg_controller 0012                      int$flags 002E                      _tmr_init 0CDC  
          __end_of_input_task 0798           _sevenSeg2WayCounter 000F                    _INTCONbits 000FF2  
         _sevenSeg3WayCounter 000E            __end_of_reset_task 0CFC                   ??_init_vars 0013  
              tmr_start@ticks 0013             ?_health_decreaser 0012                      intlevel1 0000  
                    intlevel2 0000                   ??_randomgen 0019            ??_health_decreaser 0013  
         _sevenSeg4WayCounter 000D       __size_of_lowPriorityISR 000E         ??_sevenSeg_controller 0017  
                 ??_tmr_start 0013  
