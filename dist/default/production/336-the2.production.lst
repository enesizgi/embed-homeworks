

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed May 11 16:22:00 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F8722 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  000D88                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _game_level
    77  000D88  01                 	db	1
    78                           
    79                           ;initializer for _L3
    80  000D89  0F                 	db	15
    81                           
    82                           ;initializer for _L2
    83  000D8A  0A                 	db	10
    84                           
    85                           ;initializer for _L1
    86  000D8B  05                 	db	5
    87                           
    88                           	psect	nvCOMRAM
    89  000024                     __pnvCOMRAM:
    90                           	callstack 0
    91  000024                     _whichRG:
    92                           	callstack 0
    93  000024                     	ds	1
    94  000025                     _isRG4Pressed:
    95                           	callstack 0
    96  000025                     	ds	1
    97  000026                     _isRG3Pressed:
    98                           	callstack 0
    99  000026                     	ds	1
   100  000027                     _isRG2Pressed:
   101                           	callstack 0
   102  000027                     	ds	1
   103  000028                     _isRG1Pressed:
   104                           	callstack 0
   105  000028                     	ds	1
   106  000029                     _isRG0Pressed:
   107                           	callstack 0
   108  000029                     	ds	1
   109  00002A                     _isGameStarted:
   110                           	callstack 0
   111  00002A                     	ds	1
   112  00002B                     _level:
   113                           	callstack 0
   114  00002B                     	ds	1
   115  00002C                     _health:
   116                           	callstack 0
   117  00002C                     	ds	1
   118  0000                     _TMR0	set	4054
   119  0000                     _PORTFbits	set	3973
   120  0000                     _PORTGbits	set	3974
   121  0000                     _PORTC	set	3970
   122  0000                     _TRISC	set	3988
   123  0000                     _PORTCbits	set	3970
   124  0000                     _T1CON	set	4045
   125  0000                     _T0CON	set	4053
   126  0000                     _RCONbits	set	4048
   127  0000                     _INTCON	set	4082
   128  0000                     _PORTJ	set	3976
   129  0000                     _PORTH	set	3975
   130  0000                     _PORTF	set	3973
   131  0000                     _PORTE	set	3972
   132  0000                     _PORTD	set	3971
   133  0000                     _PORTB	set	3969
   134  0000                     _PORTA	set	3968
   135  0000                     _TRISJ	set	3994
   136  0000                     _TRISH	set	3993
   137  0000                     _TRISG	set	3992
   138  0000                     _TRISF	set	3991
   139  0000                     _TRISE	set	3990
   140  0000                     _TRISD	set	3989
   141  0000                     _TRISB	set	3987
   142  0000                     _TRISA	set	3986
   143  0000                     _INTCONbits	set	4082
   144  0000                     _TMR1L	set	4046
   145  0000                     _TMR1H	set	4047
   146                           
   147                           ; #config settings
   148                           
   149                           	psect	cinit
   150  000C6E                     __pcinit:
   151                           	callstack 0
   152  000C6E                     start_initialization:
   153                           	callstack 0
   154  000C6E                     __initialization:
   155                           	callstack 0
   156                           
   157                           ; Initialize objects allocated to COMRAM (4 bytes)
   158                           ; load TBLPTR registers with __pidataCOMRAM
   159  000C6E  0E88               	movlw	low __pidataCOMRAM
   160  000C70  6EF6               	movwf	tblptrl,c
   161  000C72  0E0D               	movlw	high __pidataCOMRAM
   162  000C74  6EF7               	movwf	tblptrh,c
   163  000C76  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   164  000C78  6EF8               	movwf	tblptru,c
   165  000C7A  EE00  F02D         	lfsr	0,__pdataCOMRAM
   166  000C7E  EE10 F004          	lfsr	1,4
   167  000C82                     copy_data0:
   168  000C82  0009               	tblrd		*+
   169  000C84  CFF5 FFEE          	movff	tablat,postinc0
   170  000C88  50E5               	movf	postdec1,w,c
   171  000C8A  50E1               	movf	fsr1l,w,c
   172  000C8C  E1FA               	bnz	copy_data0
   173                           
   174                           ; Clear objects allocated to COMRAM (13 bytes)
   175  000C8E  EE00  F017         	lfsr	0,__pbssCOMRAM
   176  000C92  0E0D               	movlw	13
   177  000C94                     clear_0:
   178  000C94  6AEE               	clrf	postinc0,c
   179  000C96  06E8               	decf	wreg,f,c
   180  000C98  E1FD               	bnz	clear_0
   181  000C9A                     end_of_initialization:
   182                           	callstack 0
   183  000C9A                     __end_of__initialization:
   184                           	callstack 0
   185  000C9A  9031               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   186  000C9C  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   187  000C9E  0100               	movlb	0
   188  000CA0  EFEA  F005         	goto	_main	;jump to C main() function
   189                           
   190                           	psect	bssCOMRAM
   191  000017                     __pbssCOMRAM:
   192                           	callstack 0
   193  000017                     _tmr_ticks_left:
   194                           	callstack 0
   195  000017                     	ds	1
   196  000018                     _tmr_startreq:
   197                           	callstack 0
   198  000018                     	ds	1
   199  000019                     _tmr_state:
   200                           	callstack 0
   201  000019                     	ds	1
   202  00001A                     _level_subcount:
   203                           	callstack 0
   204  00001A                     	ds	1
   205  00001B                     _game_state:
   206                           	callstack 0
   207  00001B                     	ds	1
   208  00001C                     _htmrval:
   209                           	callstack 0
   210  00001C                     	ds	1
   211  00001D                     _tmr1flag:
   212                           	callstack 0
   213  00001D                     	ds	1
   214  00001E                     _starterDelay:
   215                           	callstack 0
   216  00001E                     	ds	1
   217  00001F                     _isPressed:
   218                           	callstack 0
   219  00001F                     	ds	1
   220  000020                     _isRC0Pressed:
   221                           	callstack 0
   222  000020                     	ds	1
   223  000021                     _isGameFinished:
   224                           	callstack 0
   225  000021                     	ds	1
   226  000022                     _sevenSegCounter:
   227                           	callstack 0
   228  000022                     	ds	1
   229  000023                     _ltmrval:
   230                           	callstack 0
   231  000023                     	ds	1
   232                           
   233                           	psect	dataCOMRAM
   234  00002D                     __pdataCOMRAM:
   235                           	callstack 0
   236  00002D                     _game_level:
   237                           	callstack 0
   238  00002D                     	ds	1
   239  00002E                     _L3:
   240                           	callstack 0
   241  00002E                     	ds	1
   242  00002F                     _L2:
   243                           	callstack 0
   244  00002F                     	ds	1
   245  000030                     _L1:
   246                           	callstack 0
   247  000030                     	ds	1
   248                           
   249                           	psect	cstackCOMRAM
   250  000001                     __pcstackCOMRAM:
   251                           	callstack 0
   252  000001                     ?i2___awmod:
   253                           	callstack 0
   254  000001                     i2___awmod@dividend:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x0
   258  000001                     	ds	2
   259  000003                     i2___awmod@divisor:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x2
   263  000003                     	ds	2
   264  000005                     i2___awmod@counter:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0x4
   268  000005                     	ds	1
   269  000006                     i2___awmod@sign:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x5
   273  000006                     	ds	1
   274  000007                     ??_lowPriorityISR:
   275                           
   276                           ; 1 bytes @ 0x6
   277  000007                     	ds	1
   278  000008                     ?___awmod:
   279                           	callstack 0
   280  000008                     tmr_start@ticks:
   281                           	callstack 0
   282  000008                     sevenSeg@D:
   283                           	callstack 0
   284  000008                     ___awmod@dividend:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x7
   288  000008                     	ds	1
   289  000009                     ??_sevenSeg:
   290                           
   291                           ; 1 bytes @ 0x8
   292  000009                     	ds	1
   293  00000A                     ___awmod@divisor:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x9
   297  00000A                     	ds	1
   298  00000B                     sevenSeg@J:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0xA
   302  00000B                     	ds	1
   303  00000C                     ___awmod@counter:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0xB
   307  00000C                     	ds	1
   308  00000D                     ___awmod@sign:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0xC
   312  00000D                     	ds	1
   313  00000E                     ??_sevenSeg_controller:
   314  00000E                     randomgen@i:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0xD
   318  00000E                     	ds	1
   319  00000F                     randomgen@val:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0xE
   323  00000F                     	ds	1
   324  000010                     randomgen@noteval:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0xF
   328  000010                     	ds	1
   329  000011                     randomgen@num:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x10
   333  000011                     	ds	1
   334  000012                     randomgen@lastbit:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x11
   338  000012                     	ds	1
   339  000013                     randomgen@intermbit:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x12
   343  000013                     	ds	1
   344  000014                     ??_game_task:
   345                           
   346                           ; 1 bytes @ 0x13
   347  000014                     	ds	2
   348  000016                     game_task@count:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x15
   352  000016                     	ds	1
   353  000017                     
   354                           ; 1 bytes @ 0x16
   355 ;;
   356 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   357 ;;
   358 ;; *************** function _main *****************
   359 ;; Defined at:
   360 ;;		line 683 in file "newmain.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, status,2, status,0, cstack
   369 ;; Tracked objects:
   370 ;;		On entry : 0/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   378 ;;Total ram usage:        0 bytes
   379 ;; Hardware stack levels required when called:    6
   380 ;; This function calls:
   381 ;;		_game_task
   382 ;;		_init_irq
   383 ;;		_init_ports
   384 ;;		_init_vars
   385 ;;		_input_task
   386 ;;		_sevenSeg_controller
   387 ;;		_tmr_init
   388 ;; This function is called by:
   389 ;;		Startup code after reset
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           	psect	text0
   394  000BD4                     __ptext0:
   395                           	callstack 0
   396  000BD4                     _main:
   397                           	callstack 25
   398  000BD4                     
   399                           ;newmain.c: 685: 
   400  000BD4  EC52  F006         	call	_init_vars	;wreg free
   401                           
   402                           ;newmain.c: 686: 
   403  000BD8  EC18  F006         	call	_init_ports	;wreg free
   404                           
   405                           ;newmain.c: 687:         input_task();
   406  000BDC  ECA7  F006         	call	_tmr_init	;wreg free
   407                           
   408                           ;newmain.c: 688:         sevenSeg_controller();
   409  000BE0  ECBE  F006         	call	_init_irq	;wreg free
   410  000BE4                     
   411                           ;newmain.c: 689:         if ((isGameStarted == 0) || (isGameFinished == 1))
   412  000BE4  0E00               	movlw	0
   413  000BE6  6E20               	movwf	_isRC0Pressed^0,c
   414  000BE8                     
   415                           ;newmain.c: 690:         {
   416  000BE8  0E01               	movlw	1
   417  000BEA  6E2A               	movwf	_isGameStarted^0,c
   418  000BEC                     
   419                           ;newmain.c: 691:             continue;
   420  000BEC  0E00               	movlw	0
   421  000BEE  6E21               	movwf	_isGameFinished^0,c
   422  000BF0                     
   423                           ;newmain.c: 692:         }
   424  000BF0  0E00               	movlw	0
   425  000BF2  6E94               	movwf	148,c	;volatile
   426  000BF4                     
   427                           ;newmain.c: 693:         game_task();
   428  000BF4  0E00               	movlw	0
   429  000BF6  6E82               	movwf	130,c	;volatile
   430  000BF8                     l2064:
   431  000BF8  EC0D  F003         	call	_input_task	;wreg free
   432  000BFC  ECEB  F001         	call	_sevenSeg_controller	;wreg free
   433  000C00  502A               	movf	_isGameStarted^0,w,c
   434  000C02  B4D8               	btfsc	status,2,c
   435  000C04  EF06  F006         	goto	u1461
   436  000C08  EF08  F006         	goto	u1460
   437  000C0C                     u1461:
   438  000C0C  EFFC  F005         	goto	l2064
   439  000C10                     u1460:
   440  000C10  0421               	decf	_isGameFinished^0,w,c
   441  000C12  A4D8               	btfss	status,2,c
   442  000C14  EF0E  F006         	goto	u1471
   443  000C18  EF10  F006         	goto	u1470
   444  000C1C                     u1471:
   445  000C1C  EF12  F006         	goto	l2072
   446  000C20                     u1470:
   447  000C20  EFFC  F005         	goto	l2064
   448  000C24                     l2072:
   449  000C24  EC15  F000         	call	_game_task	;wreg free
   450  000C28  EFFC  F005         	goto	l2064
   451  000C2C  EF13  F000         	goto	start
   452  000C30                     __end_of_main:
   453                           	callstack 0
   454                           
   455 ;; *************** function _tmr_init *****************
   456 ;; Defined at:
   457 ;;		line 128 in file "newmain.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;		None
   462 ;; Return value:  Size  Location     Type
   463 ;;                  1    wreg      void 
   464 ;; Registers used:
   465 ;;		wreg, status,2
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;Total ram usage:        0 bytes
   476 ;; Hardware stack levels used:    1
   477 ;; Hardware stack levels required when called:    3
   478 ;; This function calls:
   479 ;;		Nothing
   480 ;; This function is called by:
   481 ;;		_main
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           	psect	text1
   486  000D4E                     __ptext1:
   487                           	callstack 0
   488  000D4E                     _tmr_init:
   489                           	callstack 27
   490  000D4E                     
   491                           ;newmain.c: 133:     INTCONbits.T0IF = 0;
   492  000D4E  0E47               	movlw	71
   493  000D50  6ED5               	movwf	213,c	;volatile
   494                           
   495                           ;newmain.c: 134:     T0CON |= 0x80;
   496  000D52  0E00               	movlw	0
   497  000D54  6ED7               	movwf	215,c	;volatile
   498  000D56  0E00               	movlw	0
   499  000D58  6ED6               	movwf	214,c	;volatile
   500                           
   501                           ;newmain.c: 135: }
   502  000D5A  0EC9               	movlw	201
   503  000D5C  6ECD               	movwf	205,c	;volatile
   504  000D5E  0012               	return		;funcret
   505  000D60                     __end_of_tmr_init:
   506                           	callstack 0
   507                           
   508 ;; *************** function _sevenSeg_controller *****************
   509 ;; Defined at:
   510 ;;		line 315 in file "newmain.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, status,2, status,0, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;Total ram usage:        2 bytes
   529 ;; Hardware stack levels used:    1
   530 ;; Hardware stack levels required when called:    4
   531 ;; This function calls:
   532 ;;		___awmod
   533 ;;		_sevenSeg
   534 ;; This function is called by:
   535 ;;		_main
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text2
   540  0003D6                     __ptext2:
   541                           	callstack 0
   542  0003D6                     _sevenSeg_controller:
   543                           	callstack 26
   544  0003D6                     
   545                           ;newmain.c: 317:             sevenSeg(game_level, 3);
   546  0003D6  EFDF  F002         	goto	l1796
   547  0003DA                     l193:
   548                           
   549                           ;newmain.c: 320:         if (sevenSegCounter % 2 == 0)
   550  0003DA  B022               	btfsc	_sevenSegCounter^0,0,c
   551  0003DC  EFF2  F001         	goto	u991
   552  0003E0  EFF4  F001         	goto	u990
   553  0003E4                     u991:
   554  0003E4  EFFB  F001         	goto	l1748
   555  0003E8                     u990:
   556  0003E8                     
   557                           ;newmain.c: 321:             sevenSeg(health, 0);
   558  0003E8  0E00               	movlw	0
   559  0003EA  6E08               	movwf	sevenSeg@D^0,c
   560  0003EC  502C               	movf	_health^0,w,c
   561  0003EE  EC8C  F004         	call	_sevenSeg
   562  0003F2  EF0C  F003         	goto	l224
   563  0003F6                     l1748:
   564                           
   565                           ;newmain.c: 323:             sevenSeg(game_level, 3);
   566  0003F6  0E03               	movlw	3
   567  0003F8  6E08               	movwf	sevenSeg@D^0,c
   568  0003FA  502D               	movf	_game_level^0,w,c
   569  0003FC  EC8C  F004         	call	_sevenSeg
   570  000400  EF0C  F003         	goto	l224
   571  000404                     l197:
   572                           
   573                           ;newmain.c: 326:         if (sevenSegCounter % 2 == 0)
   574  000404  B022               	btfsc	_sevenSegCounter^0,0,c
   575  000406  EF07  F002         	goto	u1001
   576  00040A  EF09  F002         	goto	u1000
   577  00040E                     u1001:
   578  00040E  EF10  F002         	goto	l1752
   579  000412                     u1000:
   580  000412                     
   581                           ;newmain.c: 327:             sevenSeg(health, 0);
   582  000412  0E00               	movlw	0
   583  000414  6E08               	movwf	sevenSeg@D^0,c
   584  000416  502C               	movf	_health^0,w,c
   585  000418  EC8C  F004         	call	_sevenSeg
   586  00041C  EF0C  F003         	goto	l224
   587  000420                     l1752:
   588                           
   589                           ;newmain.c: 329:             sevenSeg(game_level, 3);
   590  000420  0E03               	movlw	3
   591  000422  6E08               	movwf	sevenSeg@D^0,c
   592  000424  502D               	movf	_game_level^0,w,c
   593  000426  EC8C  F004         	call	_sevenSeg
   594  00042A  EF0C  F003         	goto	l224
   595  00042E                     l200:
   596                           
   597                           ;newmain.c: 332:     case LEVEL3_INIT:
   598  00042E  B022               	btfsc	_sevenSegCounter^0,0,c
   599  000430  EF1C  F002         	goto	u1011
   600  000434  EF1E  F002         	goto	u1010
   601  000438                     u1011:
   602  000438  EF25  F002         	goto	l1756
   603  00043C                     u1010:
   604  00043C                     
   605                           ;newmain.c: 333:         if (sevenSegCounter % 2 == 0)
   606  00043C  0E00               	movlw	0
   607  00043E  6E08               	movwf	sevenSeg@D^0,c
   608  000440  502C               	movf	_health^0,w,c
   609  000442  EC8C  F004         	call	_sevenSeg
   610  000446  EF0C  F003         	goto	l224
   611  00044A                     l1756:
   612                           
   613                           ;newmain.c: 335:         else
   614  00044A  0E03               	movlw	3
   615  00044C  6E08               	movwf	sevenSeg@D^0,c
   616  00044E  502D               	movf	_game_level^0,w,c
   617  000450  EC8C  F004         	call	_sevenSeg
   618  000454  EF0C  F003         	goto	l224
   619  000458                     l203:
   620                           
   621                           ;newmain.c: 338:     case LEVEL3:
   622  000458  B022               	btfsc	_sevenSegCounter^0,0,c
   623  00045A  EF31  F002         	goto	u1021
   624  00045E  EF33  F002         	goto	u1020
   625  000462                     u1021:
   626  000462  EF3A  F002         	goto	l1760
   627  000466                     u1020:
   628  000466                     
   629                           ;newmain.c: 339:         if (sevenSegCounter % 2 == 0)
   630  000466  0E00               	movlw	0
   631  000468  6E08               	movwf	sevenSeg@D^0,c
   632  00046A  502C               	movf	_health^0,w,c
   633  00046C  EC8C  F004         	call	_sevenSeg
   634  000470  EF0C  F003         	goto	l224
   635  000474                     l1760:
   636                           
   637                           ;newmain.c: 341:         else
   638  000474  0E03               	movlw	3
   639  000476  6E08               	movwf	sevenSeg@D^0,c
   640  000478  502D               	movf	_game_level^0,w,c
   641  00047A  EC8C  F004         	call	_sevenSeg
   642  00047E  EF0C  F003         	goto	l224
   643  000482                     l206:
   644                           
   645                           ;newmain.c: 345:         if (sevenSegCounter % 3 == 0)
   646  000482  B022               	btfsc	_sevenSegCounter^0,0,c
   647  000484  EF46  F002         	goto	u1031
   648  000488  EF48  F002         	goto	u1030
   649  00048C                     u1031:
   650  00048C  EF4F  F002         	goto	l1764
   651  000490                     u1030:
   652  000490                     
   653                           ;newmain.c: 346:             sevenSeg(11, 0);
   654  000490  0E00               	movlw	0
   655  000492  6E08               	movwf	sevenSeg@D^0,c
   656  000494  502C               	movf	_health^0,w,c
   657  000496  EC8C  F004         	call	_sevenSeg
   658  00049A  EF0C  F003         	goto	l224
   659  00049E                     l1764:
   660                           
   661                           ;newmain.c: 348:             sevenSeg(12, 1);
   662  00049E  0E03               	movlw	3
   663  0004A0  6E08               	movwf	sevenSeg@D^0,c
   664  0004A2  502D               	movf	_game_level^0,w,c
   665  0004A4  EC8C  F004         	call	_sevenSeg
   666  0004A8  EF0C  F003         	goto	l224
   667  0004AC                     l209:
   668                           
   669                           ;newmain.c: 351:         break;
   670  0004AC  B022               	btfsc	_sevenSegCounter^0,0,c
   671  0004AE  EF5B  F002         	goto	u1041
   672  0004B2  EF5D  F002         	goto	u1040
   673  0004B6                     u1041:
   674  0004B6  EF64  F002         	goto	l1768
   675  0004BA                     u1040:
   676  0004BA                     
   677                           ;newmain.c: 352:     case LOSE:
   678  0004BA  0E00               	movlw	0
   679  0004BC  6E08               	movwf	sevenSeg@D^0,c
   680  0004BE  502C               	movf	_health^0,w,c
   681  0004C0  EC8C  F004         	call	_sevenSeg
   682  0004C4  EF0C  F003         	goto	l224
   683  0004C8                     l1768:
   684                           
   685                           ;newmain.c: 354:             sevenSeg(10, 0);
   686  0004C8  0E03               	movlw	3
   687  0004CA  6E08               	movwf	sevenSeg@D^0,c
   688  0004CC  502D               	movf	_game_level^0,w,c
   689  0004CE  EC8C  F004         	call	_sevenSeg
   690  0004D2  EF0C  F003         	goto	l224
   691  0004D6                     l1770:
   692                           
   693                           ;newmain.c: 357:         else if (sevenSegCounter % 4 == 2)
   694  0004D6  C022  F008         	movff	_sevenSegCounter,___awmod@dividend
   695  0004DA  6A09               	clrf	(___awmod@dividend+1)^0,c
   696  0004DC  0E00               	movlw	0
   697  0004DE  6E0B               	movwf	(___awmod@divisor+1)^0,c
   698  0004E0  0E03               	movlw	3
   699  0004E2  6E0A               	movwf	___awmod@divisor^0,c
   700  0004E4  EC3A  F005         	call	___awmod	;wreg free
   701  0004E8  5008               	movf	?___awmod^0,w,c
   702  0004EA  1009               	iorwf	(?___awmod+1)^0,w,c
   703  0004EC  A4D8               	btfss	status,2,c
   704  0004EE  EF7B  F002         	goto	u1051
   705  0004F2  EF7D  F002         	goto	u1050
   706  0004F6                     u1051:
   707  0004F6  EF84  F002         	goto	l1774
   708  0004FA                     u1050:
   709  0004FA                     
   710                           ;newmain.c: 358:             sevenSeg(5, 2);
   711  0004FA  0E00               	movlw	0
   712  0004FC  6E08               	movwf	sevenSeg@D^0,c
   713  0004FE  0E0B               	movlw	11
   714  000500  EC8C  F004         	call	_sevenSeg
   715  000504  EF0C  F003         	goto	l224
   716  000508                     l1774:
   717  000508  C022  F008         	movff	_sevenSegCounter,___awmod@dividend
   718  00050C  6A09               	clrf	(___awmod@dividend+1)^0,c
   719  00050E  0E00               	movlw	0
   720  000510  6E0B               	movwf	(___awmod@divisor+1)^0,c
   721  000512  0E03               	movlw	3
   722  000514  6E0A               	movwf	___awmod@divisor^0,c
   723  000516  EC3A  F005         	call	___awmod	;wreg free
   724  00051A  0408               	decf	?___awmod^0,w,c
   725  00051C  1009               	iorwf	(?___awmod+1)^0,w,c
   726  00051E  A4D8               	btfss	status,2,c
   727  000520  EF94  F002         	goto	u1061
   728  000524  EF96  F002         	goto	u1060
   729  000528                     u1061:
   730  000528  EF9D  F002         	goto	l1778
   731  00052C                     u1060:
   732  00052C                     
   733                           ;newmain.c: 360:             sevenSeg(11, 3);
   734  00052C  0E01               	movlw	1
   735  00052E  6E08               	movwf	sevenSeg@D^0,c
   736  000530  0E0C               	movlw	12
   737  000532  EC8C  F004         	call	_sevenSeg
   738  000536  EF0C  F003         	goto	l224
   739  00053A                     l1778:
   740                           
   741                           ;newmain.c: 362:     }
   742  00053A  0E02               	movlw	2
   743  00053C  6E08               	movwf	sevenSeg@D^0,c
   744  00053E  0E0D               	movlw	13
   745  000540  EC8C  F004         	call	_sevenSeg
   746  000544  EF0C  F003         	goto	l224
   747  000548                     l1780:
   748                           
   749                           ;newmain.c: 365: void sevenSeg(uint8_t J, uint8_t D)
   750  000548  C022  F00E         	movff	_sevenSegCounter,??_sevenSeg_controller
   751  00054C  0E03               	movlw	3
   752  00054E  160E               	andwf	??_sevenSeg_controller^0,f,c
   753  000550  A4D8               	btfss	status,2,c
   754  000552  EFAD  F002         	goto	u1071
   755  000556  EFAF  F002         	goto	u1070
   756  00055A                     u1071:
   757  00055A  EFB6  F002         	goto	l1784
   758  00055E                     u1070:
   759  00055E                     
   760                           ;newmain.c: 366: {
   761  00055E  0E00               	movlw	0
   762  000560  6E08               	movwf	sevenSeg@D^0,c
   763  000562  0E0A               	movlw	10
   764  000564  EC8C  F004         	call	_sevenSeg
   765  000568  EF0C  F003         	goto	l224
   766  00056C                     l1784:
   767  00056C  5022               	movf	_sevenSegCounter^0,w,c
   768  00056E  0B03               	andlw	3
   769  000570  06E8               	decf	wreg,f,c
   770  000572  A4D8               	btfss	status,2,c
   771  000574  EFBE  F002         	goto	u1081
   772  000578  EFC0  F002         	goto	u1080
   773  00057C                     u1081:
   774  00057C  EFC7  F002         	goto	l1788
   775  000580                     u1080:
   776  000580                     
   777                           ;newmain.c: 368:     {
   778  000580  0E01               	movlw	1
   779  000582  6E08               	movwf	sevenSeg@D^0,c
   780  000584  0E00               	movlw	0
   781  000586  EC8C  F004         	call	_sevenSeg
   782  00058A  EF0C  F003         	goto	l224
   783  00058E                     l1788:
   784  00058E  5022               	movf	_sevenSegCounter^0,w,c
   785  000590  0B03               	andlw	3
   786  000592  0A02               	xorlw	2
   787  000594  A4D8               	btfss	status,2,c
   788  000596  EFCF  F002         	goto	u1091
   789  00059A  EFD1  F002         	goto	u1090
   790  00059E                     u1091:
   791  00059E  EFD8  F002         	goto	l1792
   792  0005A2                     u1090:
   793  0005A2                     
   794                           ;newmain.c: 370: 
   795  0005A2  0E02               	movlw	2
   796  0005A4  6E08               	movwf	sevenSeg@D^0,c
   797  0005A6  0E05               	movlw	5
   798  0005A8  EC8C  F004         	call	_sevenSeg
   799  0005AC  EF0C  F003         	goto	l224
   800  0005B0                     l1792:
   801                           
   802                           ;newmain.c: 372:         PORTJ = 0x3f;
   803  0005B0  0E03               	movlw	3
   804  0005B2  6E08               	movwf	sevenSeg@D^0,c
   805  0005B4  0E0B               	movlw	11
   806  0005B6  EC8C  F004         	call	_sevenSeg
   807  0005BA  EF0C  F003         	goto	l224
   808  0005BE                     l1796:
   809  0005BE  501B               	movf	_game_state^0,w,c
   810  0005C0  6E0E               	movwf	??_sevenSeg_controller^0,c
   811  0005C2  6A0F               	clrf	(??_sevenSeg_controller+1)^0,c
   812                           
   813                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   814                           ; Switch size 1, requested type "simple"
   815                           ; Number of cases is 1, Range of values is 0 to 0
   816                           ; switch strategies available:
   817                           ; Name         Instructions Cycles
   818                           ; simple_byte            4     3 (average)
   819                           ;	Chosen strategy is simple_byte
   820  0005C4  500F               	movf	(??_sevenSeg_controller+1)^0,w,c
   821  0005C6  0A00               	xorlw	0	; case 0
   822  0005C8  B4D8               	btfsc	status,2,c
   823  0005CA  EFE9  F002         	goto	l2098
   824  0005CE  EF0C  F003         	goto	l224
   825  0005D2                     l2098:
   826                           
   827                           ; Switch size 1, requested type "simple"
   828                           ; Number of cases is 8, Range of values is 0 to 7
   829                           ; switch strategies available:
   830                           ; Name         Instructions Cycles
   831                           ; simple_byte           25    13 (average)
   832                           ;	Chosen strategy is simple_byte
   833  0005D2  500E               	movf	??_sevenSeg_controller^0,w,c
   834  0005D4  0A00               	xorlw	0	; case 0
   835  0005D6  B4D8               	btfsc	status,2,c
   836  0005D8  EFED  F001         	goto	l193
   837  0005DC  0A01               	xorlw	1	; case 1
   838  0005DE  B4D8               	btfsc	status,2,c
   839  0005E0  EF02  F002         	goto	l197
   840  0005E4  0A03               	xorlw	3	; case 2
   841  0005E6  B4D8               	btfsc	status,2,c
   842  0005E8  EF17  F002         	goto	l200
   843  0005EC  0A01               	xorlw	1	; case 3
   844  0005EE  B4D8               	btfsc	status,2,c
   845  0005F0  EF2C  F002         	goto	l203
   846  0005F4  0A07               	xorlw	7	; case 4
   847  0005F6  B4D8               	btfsc	status,2,c
   848  0005F8  EF41  F002         	goto	l206
   849  0005FC  0A01               	xorlw	1	; case 5
   850  0005FE  B4D8               	btfsc	status,2,c
   851  000600  EF56  F002         	goto	l209
   852  000604  0A03               	xorlw	3	; case 6
   853  000606  B4D8               	btfsc	status,2,c
   854  000608  EF6B  F002         	goto	l1770
   855  00060C  0A01               	xorlw	1	; case 7
   856  00060E  B4D8               	btfsc	status,2,c
   857  000610  EFA4  F002         	goto	l1780
   858  000614  EF0C  F003         	goto	l224
   859  000618                     l224:
   860  000618  0012               	return		;funcret
   861  00061A                     __end_of_sevenSeg_controller:
   862                           	callstack 0
   863                           
   864 ;; *************** function _sevenSeg *****************
   865 ;; Defined at:
   866 ;;		line 377 in file "newmain.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  J               1    wreg     unsigned char 
   869 ;;  D               1    7[COMRAM] unsigned char 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  J               1   10[COMRAM] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   881 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;Total ram usage:        4 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; Hardware stack levels required when called:    3
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		_sevenSeg_controller
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text3
   896  000918                     __ptext3:
   897                           	callstack 0
   898  000918                     _sevenSeg:
   899                           	callstack 26
   900                           
   901                           ;incstack = 0
   902                           ;sevenSeg@J stored from wreg
   903  000918  6E0B               	movwf	sevenSeg@J^0,c
   904  00091A                     
   905                           ;newmain.c: 377:     case 2:;newmain.c: 378:         PORTJ = 0x5b;;newmain.c: 379:      
      +                             break;
   906  00091A  EFC7  F004         	goto	l1722
   907  00091E                     l1692:
   908                           
   909                           ;newmain.c: 384:         PORTJ = 0x66;
   910  00091E  0E3F               	movlw	63
   911  000920  6E88               	movwf	136,c	;volatile
   912                           
   913                           ;newmain.c: 385:         break;
   914  000922  EF1C  F005         	goto	l1734
   915  000926                     l1694:
   916                           
   917                           ;newmain.c: 387:         PORTJ = 0x6d;
   918  000926  0E06               	movlw	6
   919  000928  6E88               	movwf	136,c	;volatile
   920                           
   921                           ;newmain.c: 388:         break;
   922  00092A  EF1C  F005         	goto	l1734
   923  00092E                     l1696:
   924                           
   925                           ;newmain.c: 390:         PORTJ = 0x7d;
   926  00092E  0E5B               	movlw	91
   927  000930  6E88               	movwf	136,c	;volatile
   928                           
   929                           ;newmain.c: 391:         break;
   930  000932  EF1C  F005         	goto	l1734
   931  000936                     l1698:
   932                           
   933                           ;newmain.c: 393:         PORTJ = 0x07;
   934  000936  0E4F               	movlw	79
   935  000938  6E88               	movwf	136,c	;volatile
   936                           
   937                           ;newmain.c: 394:         break;
   938  00093A  EF1C  F005         	goto	l1734
   939  00093E                     l1700:
   940                           
   941                           ;newmain.c: 396:         PORTJ = 0x7f;
   942  00093E  0E66               	movlw	102
   943  000940  6E88               	movwf	136,c	;volatile
   944                           
   945                           ;newmain.c: 397:         break;
   946  000942  EF1C  F005         	goto	l1734
   947  000946                     l1702:
   948                           
   949                           ;newmain.c: 399:         PORTJ = 0x6f;
   950  000946  0E6D               	movlw	109
   951  000948  6E88               	movwf	136,c	;volatile
   952                           
   953                           ;newmain.c: 400:         break;
   954  00094A  EF1C  F005         	goto	l1734
   955  00094E                     l1704:
   956                           
   957                           ;newmain.c: 402:         PORTJ = 0x38;
   958  00094E  0E7D               	movlw	125
   959  000950  6E88               	movwf	136,c	;volatile
   960                           
   961                           ;newmain.c: 403:         break;
   962  000952  EF1C  F005         	goto	l1734
   963  000956                     l1706:
   964                           
   965                           ;newmain.c: 405:         PORTJ = 0x79;
   966  000956  0E07               	movlw	7
   967  000958  6E88               	movwf	136,c	;volatile
   968                           
   969                           ;newmain.c: 406:         break;
   970  00095A  EF1C  F005         	goto	l1734
   971  00095E                     l1708:
   972                           
   973                           ;newmain.c: 408:         PORTJ = 0x54;
   974  00095E  0E7F               	movlw	127
   975  000960  6E88               	movwf	136,c	;volatile
   976                           
   977                           ;newmain.c: 409:         break;
   978  000962  EF1C  F005         	goto	l1734
   979  000966                     l1710:
   980                           
   981                           ;newmain.c: 411:         PORTJ = 0x5e;
   982  000966  0E6F               	movlw	111
   983  000968  6E88               	movwf	136,c	;volatile
   984                           
   985                           ;newmain.c: 412:         break;
   986  00096A  EF1C  F005         	goto	l1734
   987  00096E                     l1712:
   988                           
   989                           ;newmain.c: 414:     switch (D)
   990  00096E  0E38               	movlw	56
   991  000970  6E88               	movwf	136,c	;volatile
   992                           
   993                           ;newmain.c: 415:     {
   994  000972  EF1C  F005         	goto	l1734
   995  000976                     l1714:
   996                           
   997                           ;newmain.c: 417:         PORTH = 0x01;
   998  000976  0E79               	movlw	121
   999  000978  6E88               	movwf	136,c	;volatile
  1000                           
  1001                           ;newmain.c: 418:         break;
  1002  00097A  EF1C  F005         	goto	l1734
  1003  00097E                     l1716:
  1004                           
  1005                           ;newmain.c: 420:         PORTH = 0x02;
  1006  00097E  0E54               	movlw	84
  1007  000980  6E88               	movwf	136,c	;volatile
  1008                           
  1009                           ;newmain.c: 421:         break;
  1010  000982  EF1C  F005         	goto	l1734
  1011  000986                     l1718:
  1012                           
  1013                           ;newmain.c: 423:         PORTH = 0x04;
  1014  000986  0E5E               	movlw	94
  1015  000988  6E88               	movwf	136,c	;volatile
  1016                           
  1017                           ;newmain.c: 424:         break;
  1018  00098A  EF1C  F005         	goto	l1734
  1019  00098E                     l1722:
  1020  00098E  500B               	movf	sevenSeg@J^0,w,c
  1021  000990  6E09               	movwf	??_sevenSeg^0,c
  1022  000992  6A0A               	clrf	(??_sevenSeg+1)^0,c
  1023                           
  1024                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1025                           ; Switch size 1, requested type "simple"
  1026                           ; Number of cases is 1, Range of values is 0 to 0
  1027                           ; switch strategies available:
  1028                           ; Name         Instructions Cycles
  1029                           ; simple_byte            4     3 (average)
  1030                           ;	Chosen strategy is simple_byte
  1031  000994  500A               	movf	(??_sevenSeg+1)^0,w,c
  1032  000996  0A00               	xorlw	0	; case 0
  1033  000998  B4D8               	btfsc	status,2,c
  1034  00099A  EFD1  F004         	goto	l2100
  1035  00099E  EF1C  F005         	goto	l1734
  1036  0009A2                     l2100:
  1037                           
  1038                           ; Switch size 1, requested type "simple"
  1039                           ; Number of cases is 14, Range of values is 0 to 13
  1040                           ; switch strategies available:
  1041                           ; Name         Instructions Cycles
  1042                           ; simple_byte           43    22 (average)
  1043                           ;	Chosen strategy is simple_byte
  1044  0009A2  5009               	movf	??_sevenSeg^0,w,c
  1045  0009A4  0A00               	xorlw	0	; case 0
  1046  0009A6  B4D8               	btfsc	status,2,c
  1047  0009A8  EF8F  F004         	goto	l1692
  1048  0009AC  0A01               	xorlw	1	; case 1
  1049  0009AE  B4D8               	btfsc	status,2,c
  1050  0009B0  EF93  F004         	goto	l1694
  1051  0009B4  0A03               	xorlw	3	; case 2
  1052  0009B6  B4D8               	btfsc	status,2,c
  1053  0009B8  EF97  F004         	goto	l1696
  1054  0009BC  0A01               	xorlw	1	; case 3
  1055  0009BE  B4D8               	btfsc	status,2,c
  1056  0009C0  EF9B  F004         	goto	l1698
  1057  0009C4  0A07               	xorlw	7	; case 4
  1058  0009C6  B4D8               	btfsc	status,2,c
  1059  0009C8  EF9F  F004         	goto	l1700
  1060  0009CC  0A01               	xorlw	1	; case 5
  1061  0009CE  B4D8               	btfsc	status,2,c
  1062  0009D0  EFA3  F004         	goto	l1702
  1063  0009D4  0A03               	xorlw	3	; case 6
  1064  0009D6  B4D8               	btfsc	status,2,c
  1065  0009D8  EFA7  F004         	goto	l1704
  1066  0009DC  0A01               	xorlw	1	; case 7
  1067  0009DE  B4D8               	btfsc	status,2,c
  1068  0009E0  EFAB  F004         	goto	l1706
  1069  0009E4  0A0F               	xorlw	15	; case 8
  1070  0009E6  B4D8               	btfsc	status,2,c
  1071  0009E8  EFAF  F004         	goto	l1708
  1072  0009EC  0A01               	xorlw	1	; case 9
  1073  0009EE  B4D8               	btfsc	status,2,c
  1074  0009F0  EFB3  F004         	goto	l1710
  1075  0009F4  0A03               	xorlw	3	; case 10
  1076  0009F6  B4D8               	btfsc	status,2,c
  1077  0009F8  EFB7  F004         	goto	l1712
  1078  0009FC  0A01               	xorlw	1	; case 11
  1079  0009FE  B4D8               	btfsc	status,2,c
  1080  000A00  EFBB  F004         	goto	l1714
  1081  000A04  0A07               	xorlw	7	; case 12
  1082  000A06  B4D8               	btfsc	status,2,c
  1083  000A08  EFBF  F004         	goto	l1716
  1084  000A0C  0A01               	xorlw	1	; case 13
  1085  000A0E  B4D8               	btfsc	status,2,c
  1086  000A10  EFC3  F004         	goto	l1718
  1087  000A14  EF1C  F005         	goto	l1734
  1088  000A18                     l1724:
  1089                           
  1090                           ;newmain.c: 429: }
  1091  000A18  0E01               	movlw	1
  1092  000A1A  6E87               	movwf	135,c	;volatile
  1093                           
  1094                           ;newmain.c: 430: 
  1095  000A1C  EF39  F005         	goto	l249
  1096  000A20                     l1726:
  1097                           
  1098                           ;newmain.c: 432: 
  1099  000A20  0E02               	movlw	2
  1100  000A22  6E87               	movwf	135,c	;volatile
  1101                           
  1102                           ;newmain.c: 433: 
  1103  000A24  EF39  F005         	goto	l249
  1104  000A28                     l1728:
  1105                           
  1106                           ;newmain.c: 435: void shape_shifter()
  1107  000A28  0E04               	movlw	4
  1108  000A2A  6E87               	movwf	135,c	;volatile
  1109                           
  1110                           ;newmain.c: 436: {
  1111  000A2C  EF39  F005         	goto	l249
  1112  000A30                     l1730:
  1113                           
  1114                           ;newmain.c: 438:     PORTE = PORTD;
  1115  000A30  0E08               	movlw	8
  1116  000A32  6E87               	movwf	135,c	;volatile
  1117                           
  1118                           ;newmain.c: 439:     PORTD = PORTC;
  1119  000A34  EF39  F005         	goto	l249
  1120  000A38                     l1734:
  1121  000A38  5008               	movf	sevenSeg@D^0,w,c
  1122  000A3A  6E09               	movwf	??_sevenSeg^0,c
  1123  000A3C  6A0A               	clrf	(??_sevenSeg+1)^0,c
  1124                           
  1125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1126                           ; Switch size 1, requested type "simple"
  1127                           ; Number of cases is 1, Range of values is 0 to 0
  1128                           ; switch strategies available:
  1129                           ; Name         Instructions Cycles
  1130                           ; simple_byte            4     3 (average)
  1131                           ;	Chosen strategy is simple_byte
  1132  000A3E  500A               	movf	(??_sevenSeg+1)^0,w,c
  1133  000A40  0A00               	xorlw	0	; case 0
  1134  000A42  B4D8               	btfsc	status,2,c
  1135  000A44  EF26  F005         	goto	l2102
  1136  000A48  EF39  F005         	goto	l249
  1137  000A4C                     l2102:
  1138                           
  1139                           ; Switch size 1, requested type "simple"
  1140                           ; Number of cases is 4, Range of values is 0 to 3
  1141                           ; switch strategies available:
  1142                           ; Name         Instructions Cycles
  1143                           ; simple_byte           13     7 (average)
  1144                           ;	Chosen strategy is simple_byte
  1145  000A4C  5009               	movf	??_sevenSeg^0,w,c
  1146  000A4E  0A00               	xorlw	0	; case 0
  1147  000A50  B4D8               	btfsc	status,2,c
  1148  000A52  EF0C  F005         	goto	l1724
  1149  000A56  0A01               	xorlw	1	; case 1
  1150  000A58  B4D8               	btfsc	status,2,c
  1151  000A5A  EF10  F005         	goto	l1726
  1152  000A5E  0A03               	xorlw	3	; case 2
  1153  000A60  B4D8               	btfsc	status,2,c
  1154  000A62  EF14  F005         	goto	l1728
  1155  000A66  0A01               	xorlw	1	; case 3
  1156  000A68  B4D8               	btfsc	status,2,c
  1157  000A6A  EF18  F005         	goto	l1730
  1158  000A6E  EF39  F005         	goto	l249
  1159  000A72                     l249:
  1160  000A72  0012               	return		;funcret
  1161  000A74                     __end_of_sevenSeg:
  1162                           	callstack 0
  1163                           
  1164 ;; *************** function _input_task *****************
  1165 ;; Defined at:
  1166 ;;		line 219 in file "newmain.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;Total ram usage:        0 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    3
  1187 ;; This function calls:
  1188 ;;		Nothing
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text4
  1195  00061A                     __ptext4:
  1196                           	callstack 0
  1197  00061A                     _input_task:
  1198                           	callstack 27
  1199  00061A                     
  1200                           ;newmain.c: 224:         }
  1201  00061A  502A               	movf	_isGameStarted^0,w,c
  1202  00061C  B4D8               	btfsc	status,2,c
  1203  00061E  EF13  F003         	goto	u161
  1204  000622  EF15  F003         	goto	u160
  1205  000626                     u161:
  1206  000626  EF1D  F003         	goto	l1204
  1207  00062A                     u160:
  1208  00062A  5021               	movf	_isGameFinished^0,w,c
  1209  00062C  B4D8               	btfsc	status,2,c
  1210  00062E  EF1B  F003         	goto	u171
  1211  000632  EF1D  F003         	goto	u170
  1212  000636                     u171:
  1213  000636  EF43  F003         	goto	l162
  1214  00063A                     u170:
  1215  00063A                     l1204:
  1216                           
  1217                           ;newmain.c: 225:         else if (PORTCbits.RC0 == 1);newmain.c: 226:         {
  1218  00063A  0420               	decf	_isRC0Pressed^0,w,c
  1219  00063C  A4D8               	btfss	status,2,c
  1220  00063E  EF23  F003         	goto	u181
  1221  000642  EF25  F003         	goto	u180
  1222  000646                     u181:
  1223  000646  EF38  F003         	goto	l165
  1224  00064A                     u180:
  1225  00064A                     
  1226                           ;newmain.c: 227:             isRC0Pressed = 1;;newmain.c: 228:             game_state = 
      +                          G_INIT;
  1227  00064A  B082               	btfsc	130,0,c	;volatile
  1228  00064C  EF2A  F003         	goto	u191
  1229  000650  EF2C  F003         	goto	u190
  1230  000654                     u191:
  1231  000654  EF43  F003         	goto	l162
  1232  000658                     u190:
  1233  000658                     
  1234                           ;newmain.c: 229:         };newmain.c: 230:     }
  1235  000658  0E00               	movlw	0
  1236  00065A  6E20               	movwf	_isRC0Pressed^0,c
  1237                           
  1238                           ;newmain.c: 231: 
  1239  00065C  0E01               	movlw	1
  1240  00065E  6E2A               	movwf	_isGameStarted^0,c
  1241                           
  1242                           ;newmain.c: 232:     if (isRG0Pressed == 0)
  1243  000660  0E00               	movlw	0
  1244  000662  6E21               	movwf	_isGameFinished^0,c
  1245                           
  1246                           ;newmain.c: 233:     {
  1247  000664  0E00               	movlw	0
  1248  000666  6E94               	movwf	148,c	;volatile
  1249                           
  1250                           ;newmain.c: 234:         if (PORTGbits.RG0 == 0)
  1251  000668  0E00               	movlw	0
  1252  00066A  6E82               	movwf	130,c	;volatile
  1253  00066C  EF43  F003         	goto	l162
  1254  000670                     l165:
  1255  000670  A082               	btfss	130,0,c	;volatile
  1256  000672  EF3D  F003         	goto	u201
  1257  000676  EF3F  F003         	goto	u200
  1258  00067A                     u201:
  1259  00067A  EF43  F003         	goto	l162
  1260  00067E                     u200:
  1261  00067E                     
  1262                           ;newmain.c: 238:         };newmain.c: 239:     }
  1263  00067E  0E01               	movlw	1
  1264  000680  6E20               	movwf	_isRC0Pressed^0,c
  1265                           
  1266                           ;newmain.c: 240:     else if (PORTGbits.RG0 == 1)
  1267  000682  0E00               	movlw	0
  1268  000684  6E1B               	movwf	_game_state^0,c
  1269  000686                     l162:
  1270                           
  1271                           ;newmain.c: 244: 
  1272  000686  5029               	movf	_isRG0Pressed^0,w,c
  1273  000688  A4D8               	btfss	status,2,c
  1274  00068A  EF49  F003         	goto	u211
  1275  00068E  EF4B  F003         	goto	u210
  1276  000692                     u211:
  1277  000692  EF58  F003         	goto	l169
  1278  000696                     u210:
  1279  000696                     
  1280                           ;newmain.c: 245:     if (isRG1Pressed == 0);newmain.c: 246:     {
  1281  000696  B086               	btfsc	134,0,c	;volatile
  1282  000698  EF50  F003         	goto	u221
  1283  00069C  EF52  F003         	goto	u220
  1284  0006A0                     u221:
  1285  0006A0  EF61  F003         	goto	l171
  1286  0006A4                     u220:
  1287  0006A4                     
  1288                           ;newmain.c: 247:         if (PORTGbits.RG1 == 0);newmain.c: 248:         {
  1289  0006A4  0E01               	movlw	1
  1290  0006A6  6E29               	movwf	_isRG0Pressed^0,c
  1291                           
  1292                           ;newmain.c: 249:             isRG1Pressed = 1;
  1293  0006A8  0E00               	movlw	0
  1294  0006AA  6E24               	movwf	_whichRG^0,c
  1295  0006AC  EF61  F003         	goto	l171
  1296  0006B0                     l169:
  1297  0006B0  A086               	btfss	134,0,c	;volatile
  1298  0006B2  EF5D  F003         	goto	u231
  1299  0006B6  EF5F  F003         	goto	u230
  1300  0006BA                     u231:
  1301  0006BA  EF61  F003         	goto	l171
  1302  0006BE                     u230:
  1303  0006BE                     
  1304                           ;newmain.c: 253:     else if (PORTGbits.RG1 == 1);newmain.c: 254:     {
  1305  0006BE  0E00               	movlw	0
  1306  0006C0  6E29               	movwf	_isRG0Pressed^0,c
  1307  0006C2                     l171:
  1308                           
  1309                           ;newmain.c: 257: 
  1310  0006C2  5028               	movf	_isRG1Pressed^0,w,c
  1311  0006C4  A4D8               	btfss	status,2,c
  1312  0006C6  EF67  F003         	goto	u241
  1313  0006CA  EF69  F003         	goto	u240
  1314  0006CE                     u241:
  1315  0006CE  EF76  F003         	goto	l173
  1316  0006D2                     u240:
  1317  0006D2                     
  1318                           ;newmain.c: 258:     if (isRG2Pressed == 0);newmain.c: 259:     {
  1319  0006D2  B286               	btfsc	134,1,c	;volatile
  1320  0006D4  EF6E  F003         	goto	u251
  1321  0006D8  EF70  F003         	goto	u250
  1322  0006DC                     u251:
  1323  0006DC  EF7F  F003         	goto	l175
  1324  0006E0                     u250:
  1325  0006E0                     
  1326                           ;newmain.c: 260:         if (PORTGbits.RG2 == 0);newmain.c: 261:         {
  1327  0006E0  0E01               	movlw	1
  1328  0006E2  6E28               	movwf	_isRG1Pressed^0,c
  1329                           
  1330                           ;newmain.c: 262:             isRG2Pressed = 1;
  1331  0006E4  0E01               	movlw	1
  1332  0006E6  6E24               	movwf	_whichRG^0,c
  1333  0006E8  EF7F  F003         	goto	l175
  1334  0006EC                     l173:
  1335  0006EC  A286               	btfss	134,1,c	;volatile
  1336  0006EE  EF7B  F003         	goto	u261
  1337  0006F2  EF7D  F003         	goto	u260
  1338  0006F6                     u261:
  1339  0006F6  EF7F  F003         	goto	l175
  1340  0006FA                     u260:
  1341  0006FA                     
  1342                           ;newmain.c: 266:     else if (PORTGbits.RG2 == 1);newmain.c: 267:     {
  1343  0006FA  0E00               	movlw	0
  1344  0006FC  6E28               	movwf	_isRG1Pressed^0,c
  1345  0006FE                     l175:
  1346                           
  1347                           ;newmain.c: 270: 
  1348  0006FE  5027               	movf	_isRG2Pressed^0,w,c
  1349  000700  A4D8               	btfss	status,2,c
  1350  000702  EF85  F003         	goto	u271
  1351  000706  EF87  F003         	goto	u270
  1352  00070A                     u271:
  1353  00070A  EF94  F003         	goto	l177
  1354  00070E                     u270:
  1355  00070E                     
  1356                           ;newmain.c: 271:     if (isRG3Pressed == 0);newmain.c: 272:     {
  1357  00070E  B486               	btfsc	134,2,c	;volatile
  1358  000710  EF8C  F003         	goto	u281
  1359  000714  EF8E  F003         	goto	u280
  1360  000718                     u281:
  1361  000718  EF9D  F003         	goto	l179
  1362  00071C                     u280:
  1363  00071C                     
  1364                           ;newmain.c: 273:         if (PORTGbits.RG3 == 0);newmain.c: 274:         {
  1365  00071C  0E01               	movlw	1
  1366  00071E  6E27               	movwf	_isRG2Pressed^0,c
  1367                           
  1368                           ;newmain.c: 275:             isRG3Pressed = 1;
  1369  000720  0E02               	movlw	2
  1370  000722  6E24               	movwf	_whichRG^0,c
  1371  000724  EF9D  F003         	goto	l179
  1372  000728                     l177:
  1373  000728  A486               	btfss	134,2,c	;volatile
  1374  00072A  EF99  F003         	goto	u291
  1375  00072E  EF9B  F003         	goto	u290
  1376  000732                     u291:
  1377  000732  EF9D  F003         	goto	l179
  1378  000736                     u290:
  1379  000736                     
  1380                           ;newmain.c: 279:     else if (PORTGbits.RG3 == 1);newmain.c: 280:     {
  1381  000736  0E00               	movlw	0
  1382  000738  6E27               	movwf	_isRG2Pressed^0,c
  1383  00073A                     l179:
  1384                           
  1385                           ;newmain.c: 283: 
  1386  00073A  5026               	movf	_isRG3Pressed^0,w,c
  1387  00073C  A4D8               	btfss	status,2,c
  1388  00073E  EFA3  F003         	goto	u301
  1389  000742  EFA5  F003         	goto	u300
  1390  000746                     u301:
  1391  000746  EFB2  F003         	goto	l181
  1392  00074A                     u300:
  1393  00074A                     
  1394                           ;newmain.c: 284:     if (isRG4Pressed == 0);newmain.c: 285:     {
  1395  00074A  B686               	btfsc	134,3,c	;volatile
  1396  00074C  EFAA  F003         	goto	u311
  1397  000750  EFAC  F003         	goto	u310
  1398  000754                     u311:
  1399  000754  EFBB  F003         	goto	l183
  1400  000758                     u310:
  1401  000758                     
  1402                           ;newmain.c: 286:         if (PORTGbits.RG4 == 0);newmain.c: 287:         {
  1403  000758  0E01               	movlw	1
  1404  00075A  6E26               	movwf	_isRG3Pressed^0,c
  1405                           
  1406                           ;newmain.c: 288:             isRG4Pressed = 1;
  1407  00075C  0E03               	movlw	3
  1408  00075E  6E24               	movwf	_whichRG^0,c
  1409  000760  EFBB  F003         	goto	l183
  1410  000764                     l181:
  1411  000764  A686               	btfss	134,3,c	;volatile
  1412  000766  EFB7  F003         	goto	u321
  1413  00076A  EFB9  F003         	goto	u320
  1414  00076E                     u321:
  1415  00076E  EFBB  F003         	goto	l183
  1416  000772                     u320:
  1417  000772                     
  1418                           ;newmain.c: 292:     else if (PORTGbits.RG4 == 1);newmain.c: 293:     {
  1419  000772  0E00               	movlw	0
  1420  000774  6E26               	movwf	_isRG3Pressed^0,c
  1421  000776                     l183:
  1422                           
  1423                           ;newmain.c: 296: }
  1424  000776  5025               	movf	_isRG4Pressed^0,w,c
  1425  000778  A4D8               	btfss	status,2,c
  1426  00077A  EFC1  F003         	goto	u331
  1427  00077E  EFC3  F003         	goto	u330
  1428  000782                     u331:
  1429  000782  EFD0  F003         	goto	l185
  1430  000786                     u330:
  1431  000786                     
  1432                           ;newmain.c: 297: ;newmain.c: 298: 
  1433  000786  B886               	btfsc	134,4,c	;volatile
  1434  000788  EFC8  F003         	goto	u341
  1435  00078C  EFCA  F003         	goto	u340
  1436  000790                     u341:
  1437  000790  EFD9  F003         	goto	l189
  1438  000794                     u340:
  1439  000794                     
  1440                           ;newmain.c: 299: ;newmain.c: 300: 
  1441  000794  0E01               	movlw	1
  1442  000796  6E25               	movwf	_isRG4Pressed^0,c
  1443                           
  1444                           ;newmain.c: 301: 
  1445  000798  0E04               	movlw	4
  1446  00079A  6E24               	movwf	_whichRG^0,c
  1447  00079C  EFD9  F003         	goto	l189
  1448  0007A0                     l185:
  1449  0007A0  A886               	btfss	134,4,c	;volatile
  1450  0007A2  EFD5  F003         	goto	u351
  1451  0007A6  EFD7  F003         	goto	u350
  1452  0007AA                     u351:
  1453  0007AA  EFD9  F003         	goto	l189
  1454  0007AE                     u350:
  1455  0007AE                     
  1456                           ;newmain.c: 305:     switch (game_state);newmain.c: 306:     {
  1457  0007AE  0E00               	movlw	0
  1458  0007B0  6E25               	movwf	_isRG4Pressed^0,c
  1459  0007B2                     l189:
  1460  0007B2  0012               	return		;funcret
  1461  0007B4                     __end_of_input_task:
  1462                           	callstack 0
  1463                           
  1464 ;; *************** function _init_vars *****************
  1465 ;; Defined at:
  1466 ;;		line 61 in file "newmain.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;Total ram usage:        0 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    3
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text5
  1495  000CA4                     __ptext5:
  1496                           	callstack 0
  1497  000CA4                     _init_vars:
  1498                           	callstack 27
  1499  000CA4                     
  1500                           ;newmain.c: 63:     isPressed = 0;
  1501  000CA4  0E09               	movlw	9
  1502  000CA6  6E2C               	movwf	_health^0,c
  1503                           
  1504                           ;newmain.c: 64:     starterDelay = 0;
  1505  000CA8  0E01               	movlw	1
  1506  000CAA  6E2B               	movwf	_level^0,c
  1507                           
  1508                           ;newmain.c: 65: }
  1509  000CAC  0E00               	movlw	0
  1510  000CAE  6E2A               	movwf	_isGameStarted^0,c
  1511                           
  1512                           ;newmain.c: 66: void init_ports()
  1513  000CB0  0E00               	movlw	0
  1514  000CB2  6E21               	movwf	_isGameFinished^0,c
  1515                           
  1516                           ;newmain.c: 67: {
  1517  000CB4  0E00               	movlw	0
  1518  000CB6  6E20               	movwf	_isRC0Pressed^0,c
  1519  000CB8                     
  1520                           ;newmain.c: 68: 
  1521  000CB8  6829               	setf	_isRG0Pressed^0,c
  1522  000CBA                     
  1523                           ;newmain.c: 69:     TRISA = 0x00;
  1524  000CBA  6828               	setf	_isRG1Pressed^0,c
  1525  000CBC                     
  1526                           ;newmain.c: 70:     TRISB = 0x00;
  1527  000CBC  6827               	setf	_isRG2Pressed^0,c
  1528  000CBE                     
  1529                           ;newmain.c: 71: 
  1530  000CBE  6826               	setf	_isRG3Pressed^0,c
  1531  000CC0                     
  1532                           ;newmain.c: 72:     TRISD = 0x00;
  1533  000CC0  6825               	setf	_isRG4Pressed^0,c
  1534                           
  1535                           ;newmain.c: 73:     TRISE = 0x00;
  1536  000CC2  0E00               	movlw	0
  1537  000CC4  6E22               	movwf	_sevenSegCounter^0,c
  1538                           
  1539                           ;newmain.c: 74:     TRISF = 0x00;
  1540  000CC6  0E05               	movlw	5
  1541  000CC8  6E24               	movwf	_whichRG^0,c
  1542                           
  1543                           ;newmain.c: 75:     TRISG = 0x1f;
  1544  000CCA  0E00               	movlw	0
  1545  000CCC  6E1F               	movwf	_isPressed^0,c
  1546                           
  1547                           ;newmain.c: 76:     TRISH = 0x00;
  1548  000CCE  0E00               	movlw	0
  1549  000CD0  6E1E               	movwf	_starterDelay^0,c
  1550  000CD2  0012               	return		;funcret
  1551  000CD4                     __end_of_init_vars:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function _init_ports *****************
  1555 ;; Defined at:
  1556 ;;		line 78 in file "newmain.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;Total ram usage:        0 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    3
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text6
  1585  000C30                     __ptext6:
  1586                           	callstack 0
  1587  000C30                     _init_ports:
  1588                           	callstack 27
  1589  000C30                     
  1590                           ;newmain.c: 81:     PORTD = 0x00;
  1591  000C30  0E00               	movlw	0
  1592  000C32  6E92               	movwf	146,c	;volatile
  1593                           
  1594                           ;newmain.c: 82:     PORTE = 0x00;
  1595  000C34  0E00               	movlw	0
  1596  000C36  6E93               	movwf	147,c	;volatile
  1597                           
  1598                           ;newmain.c: 84:     PORTH = 0x00;
  1599  000C38  0E00               	movlw	0
  1600  000C3A  6E95               	movwf	149,c	;volatile
  1601                           
  1602                           ;newmain.c: 85:     PORTJ = 0x00;
  1603  000C3C  0E00               	movlw	0
  1604  000C3E  6E96               	movwf	150,c	;volatile
  1605                           
  1606                           ;newmain.c: 86: }
  1607  000C40  0E00               	movlw	0
  1608  000C42  6E97               	movwf	151,c	;volatile
  1609                           
  1610                           ;newmain.c: 87: 
  1611  000C44  0E1F               	movlw	31
  1612  000C46  6E98               	movwf	152,c	;volatile
  1613                           
  1614                           ;newmain.c: 88: void init_irq()
  1615  000C48  0E00               	movlw	0
  1616  000C4A  6E99               	movwf	153,c	;volatile
  1617                           
  1618                           ;newmain.c: 89: {
  1619  000C4C  0E00               	movlw	0
  1620  000C4E  6E9A               	movwf	154,c	;volatile
  1621                           
  1622                           ;newmain.c: 91:     INTCONbits.TMR0IE = 1;
  1623  000C50  0E00               	movlw	0
  1624  000C52  6E80               	movwf	128,c	;volatile
  1625                           
  1626                           ;newmain.c: 92:     INTCONbits.GIE = 1;
  1627  000C54  0E00               	movlw	0
  1628  000C56  6E81               	movwf	129,c	;volatile
  1629                           
  1630                           ;newmain.c: 93:     RCONbits.IPEN = 0;
  1631  000C58  0E00               	movlw	0
  1632  000C5A  6E83               	movwf	131,c	;volatile
  1633                           
  1634                           ;newmain.c: 94: }
  1635  000C5C  0E00               	movlw	0
  1636  000C5E  6E84               	movwf	132,c	;volatile
  1637                           
  1638                           ;newmain.c: 95: 
  1639  000C60  0E00               	movlw	0
  1640  000C62  6E85               	movwf	133,c	;volatile
  1641                           
  1642                           ;newmain.c: 96: 
  1643  000C64  0E00               	movlw	0
  1644  000C66  6E87               	movwf	135,c	;volatile
  1645                           
  1646                           ;newmain.c: 97: 
  1647  000C68  0E00               	movlw	0
  1648  000C6A  6E88               	movwf	136,c	;volatile
  1649  000C6C  0012               	return		;funcret
  1650  000C6E                     __end_of_init_ports:
  1651                           	callstack 0
  1652                           
  1653 ;; *************** function _init_irq *****************
  1654 ;; Defined at:
  1655 ;;		line 100 in file "newmain.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    3
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text7
  1684  000D7C                     __ptext7:
  1685                           	callstack 0
  1686  000D7C                     _init_irq:
  1687                           	callstack 27
  1688  000D7C                     
  1689                           ;newmain.c: 102: {
  1690  000D7C  0E10               	movlw	16
  1691  000D7E  6EF2               	movwf	242,c	;volatile
  1692  000D80                     
  1693                           ;newmain.c: 103:     TMR_RUN,
  1694  000D80  8AF2               	bsf	242,5,c	;volatile
  1695  000D82                     
  1696                           ;newmain.c: 104:     TMR_DONE
  1697  000D82  8EF2               	bsf	242,7,c	;volatile
  1698  000D84                     
  1699                           ;newmain.c: 105: } tmr_state_t;
  1700  000D84  9ED0               	bcf	208,7,c	;volatile
  1701  000D86  0012               	return		;funcret
  1702  000D88                     __end_of_init_irq:
  1703                           	callstack 0
  1704                           
  1705 ;; *************** function _game_task *****************
  1706 ;; Defined at:
  1707 ;;		line 473 in file "newmain.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  count           1   21[COMRAM] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1723 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;Total ram usage:        3 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    5
  1728 ;; This function calls:
  1729 ;;		_health_decreaser
  1730 ;;		_randomgen
  1731 ;;		_reset_task
  1732 ;;		_shape_shifter
  1733 ;;		_tmr_start
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text8
  1740  00002A                     __ptext8:
  1741                           	callstack 0
  1742  00002A                     _game_task:
  1743                           	callstack 25
  1744  00002A                     
  1745                           ;newmain.c: 480:     {
  1746  00002A  0E00               	movlw	0
  1747  00002C  6E16               	movwf	game_task@count^0,c
  1748  00002E                     
  1749                           ;newmain.c: 481:         count++;
  1750  00002E  0429               	decf	_isRG0Pressed^0,w,c
  1751  000030  A4D8               	btfss	status,2,c
  1752  000032  EF1D  F000         	goto	u1101
  1753  000036  EF1F  F000         	goto	u1100
  1754  00003A                     u1101:
  1755  00003A  EF21  F000         	goto	l1810
  1756  00003E                     u1100:
  1757  00003E                     
  1758                           ;newmain.c: 482:         isRG2Pressed = -1;;newmain.c: 483:     }
  1759  00003E  2A16               	incf	game_task@count^0,f,c
  1760  000040                     
  1761                           ;newmain.c: 484:     if (isRG3Pressed == 1)
  1762  000040  6829               	setf	_isRG0Pressed^0,c
  1763  000042                     l1810:
  1764                           
  1765                           ;newmain.c: 486:         count++;
  1766  000042  0428               	decf	_isRG1Pressed^0,w,c
  1767  000044  A4D8               	btfss	status,2,c
  1768  000046  EF27  F000         	goto	u1111
  1769  00004A  EF29  F000         	goto	u1110
  1770  00004E                     u1111:
  1771  00004E  EF2B  F000         	goto	l1816
  1772  000052                     u1110:
  1773  000052                     
  1774                           ;newmain.c: 487:         isRG3Pressed = -1;;newmain.c: 488:     }
  1775  000052  2A16               	incf	game_task@count^0,f,c
  1776  000054                     
  1777                           ;newmain.c: 489:     if (isRG4Pressed == 1)
  1778  000054  6828               	setf	_isRG1Pressed^0,c
  1779  000056                     l1816:
  1780                           
  1781                           ;newmain.c: 491:         count++;
  1782  000056  0427               	decf	_isRG2Pressed^0,w,c
  1783  000058  A4D8               	btfss	status,2,c
  1784  00005A  EF31  F000         	goto	u1121
  1785  00005E  EF33  F000         	goto	u1120
  1786  000062                     u1121:
  1787  000062  EF35  F000         	goto	l1822
  1788  000066                     u1120:
  1789  000066                     
  1790                           ;newmain.c: 492:         isRG4Pressed = -1;;newmain.c: 493:     }
  1791  000066  2A16               	incf	game_task@count^0,f,c
  1792  000068                     
  1793                           ;newmain.c: 494: 
  1794  000068  6827               	setf	_isRG2Pressed^0,c
  1795  00006A                     l1822:
  1796                           
  1797                           ;newmain.c: 496:     {
  1798  00006A  0426               	decf	_isRG3Pressed^0,w,c
  1799  00006C  A4D8               	btfss	status,2,c
  1800  00006E  EF3B  F000         	goto	u1131
  1801  000072  EF3D  F000         	goto	u1130
  1802  000076                     u1131:
  1803  000076  EF3F  F000         	goto	l1828
  1804  00007A                     u1130:
  1805  00007A                     
  1806                           ;newmain.c: 497:         whichRG = -1;;newmain.c: 498:         isPressed = 1;
  1807  00007A  2A16               	incf	game_task@count^0,f,c
  1808  00007C                     
  1809                           ;newmain.c: 499:     }
  1810  00007C  6826               	setf	_isRG3Pressed^0,c
  1811  00007E                     l1828:
  1812                           
  1813                           ;newmain.c: 501: 
  1814  00007E  0425               	decf	_isRG4Pressed^0,w,c
  1815  000080  A4D8               	btfss	status,2,c
  1816  000082  EF45  F000         	goto	u1141
  1817  000086  EF47  F000         	goto	u1140
  1818  00008A                     u1141:
  1819  00008A  EF49  F000         	goto	l1834
  1820  00008E                     u1140:
  1821  00008E                     
  1822                           ;newmain.c: 502: ;newmain.c: 503:     switch (whichRG)
  1823  00008E  2A16               	incf	game_task@count^0,f,c
  1824  000090                     
  1825                           ;newmain.c: 504:     {
  1826  000090  6825               	setf	_isRG4Pressed^0,c
  1827  000092                     l1834:
  1828                           
  1829                           ;newmain.c: 507:         break;
  1830  000092  0E01               	movlw	1
  1831  000094  6416               	cpfsgt	game_task@count^0,c
  1832  000096  EF4F  F000         	goto	u1151
  1833  00009A  EF51  F000         	goto	u1150
  1834  00009E                     u1151:
  1835  00009E  EF89  F000         	goto	l1864
  1836  0000A2                     u1150:
  1837  0000A2                     
  1838                           ;newmain.c: 508:     case 0:;newmain.c: 509:         if (PORTFbits.RF0 == 1)
  1839  0000A2  6824               	setf	_whichRG^0,c
  1840  0000A4                     
  1841                           ;newmain.c: 510:             tmr_state = TMR_DONE;
  1842  0000A4  0E01               	movlw	1
  1843  0000A6  6E1F               	movwf	_isPressed^0,c
  1844  0000A8  EF89  F000         	goto	l1864
  1845  0000AC                     l1840:
  1846                           
  1847                           ;newmain.c: 518:             health_decreaser();
  1848  0000AC  EC9B  F006         	call	_health_decreaser	;wreg free
  1849                           
  1850                           ;newmain.c: 519:         break;
  1851  0000B0  EFB5  F000         	goto	l1866
  1852  0000B4                     l271:
  1853                           
  1854                           ;newmain.c: 521:         if (PORTFbits.RF2 == 1)
  1855  0000B4  A085               	btfss	133,0,c	;volatile
  1856  0000B6  EF5F  F000         	goto	u1161
  1857  0000BA  EF61  F000         	goto	u1160
  1858  0000BE                     u1161:
  1859  0000BE  EF56  F000         	goto	l1840
  1860  0000C2                     u1160:
  1861  0000C2                     l1842:
  1862                           
  1863                           ;newmain.c: 522:             tmr_state = TMR_DONE;
  1864  0000C2  0E01               	movlw	1
  1865  0000C4  6E19               	movwf	_tmr_state^0,c
  1866  0000C6  EFB5  F000         	goto	l1866
  1867  0000CA                     l274:
  1868                           
  1869                           ;newmain.c: 527:         if (PORTFbits.RF3 == 1)
  1870  0000CA  A285               	btfss	133,1,c	;volatile
  1871  0000CC  EF6A  F000         	goto	u1171
  1872  0000D0  EF6C  F000         	goto	u1170
  1873  0000D4                     u1171:
  1874  0000D4  EF56  F000         	goto	l1840
  1875  0000D8                     u1170:
  1876  0000D8  EF61  F000         	goto	l1842
  1877  0000DC                     l277:
  1878                           
  1879                           ;newmain.c: 533:         if (PORTFbits.RF4 == 1)
  1880  0000DC  A485               	btfss	133,2,c	;volatile
  1881  0000DE  EF73  F000         	goto	u1181
  1882  0000E2  EF75  F000         	goto	u1180
  1883  0000E6                     u1181:
  1884  0000E6  EF56  F000         	goto	l1840
  1885  0000EA                     u1180:
  1886  0000EA  EF61  F000         	goto	l1842
  1887  0000EE                     l280:
  1888                           
  1889                           ;newmain.c: 539:         break;
  1890  0000EE  A685               	btfss	133,3,c	;volatile
  1891  0000F0  EF7C  F000         	goto	u1191
  1892  0000F4  EF7E  F000         	goto	u1190
  1893  0000F8                     u1191:
  1894  0000F8  EF56  F000         	goto	l1840
  1895  0000FC                     u1190:
  1896  0000FC  EF61  F000         	goto	l1842
  1897  000100                     l283:
  1898                           
  1899                           ;newmain.c: 545:         tmr_start(77);
  1900  000100  A885               	btfss	133,4,c	;volatile
  1901  000102  EF85  F000         	goto	u1201
  1902  000106  EF87  F000         	goto	u1200
  1903  00010A                     u1201:
  1904  00010A  EF56  F000         	goto	l1840
  1905  00010E                     u1200:
  1906  00010E  EF61  F000         	goto	l1842
  1907  000112                     l1864:
  1908  000112  5024               	movf	_whichRG^0,w,c
  1909  000114  6E14               	movwf	??_game_task^0,c
  1910  000116  6A15               	clrf	(??_game_task+1)^0,c
  1911                           
  1912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1913                           ; Switch size 1, requested type "simple"
  1914                           ; Number of cases is 2, Range of values is 0 to 255
  1915                           ; switch strategies available:
  1916                           ; Name         Instructions Cycles
  1917                           ; simple_byte            7     4 (average)
  1918                           ;	Chosen strategy is simple_byte
  1919  000118  5015               	movf	(??_game_task+1)^0,w,c
  1920  00011A  0A00               	xorlw	0	; case 0
  1921  00011C  B4D8               	btfsc	status,2,c
  1922  00011E  EF97  F000         	goto	l2104
  1923  000122  0AFF               	xorlw	255	; case 255
  1924  000124  B4D8               	btfsc	status,2,c
  1925  000126  EFAE  F000         	goto	l2106
  1926  00012A  EFB5  F000         	goto	l1866
  1927  00012E                     l2104:
  1928                           
  1929                           ; Switch size 1, requested type "simple"
  1930                           ; Number of cases is 5, Range of values is 0 to 4
  1931                           ; switch strategies available:
  1932                           ; Name         Instructions Cycles
  1933                           ; simple_byte           16     9 (average)
  1934                           ;	Chosen strategy is simple_byte
  1935  00012E  5014               	movf	??_game_task^0,w,c
  1936  000130  0A00               	xorlw	0	; case 0
  1937  000132  B4D8               	btfsc	status,2,c
  1938  000134  EF5A  F000         	goto	l271
  1939  000138  0A01               	xorlw	1	; case 1
  1940  00013A  B4D8               	btfsc	status,2,c
  1941  00013C  EF65  F000         	goto	l274
  1942  000140  0A03               	xorlw	3	; case 2
  1943  000142  B4D8               	btfsc	status,2,c
  1944  000144  EF6E  F000         	goto	l277
  1945  000148  0A01               	xorlw	1	; case 3
  1946  00014A  B4D8               	btfsc	status,2,c
  1947  00014C  EF77  F000         	goto	l280
  1948  000150  0A07               	xorlw	7	; case 4
  1949  000152  B4D8               	btfsc	status,2,c
  1950  000154  EF80  F000         	goto	l283
  1951  000158  EFB5  F000         	goto	l1866
  1952  00015C                     l2106:
  1953                           
  1954                           ; Switch size 1, requested type "simple"
  1955                           ; Number of cases is 1, Range of values is 255 to 255
  1956                           ; switch strategies available:
  1957                           ; Name         Instructions Cycles
  1958                           ; simple_byte            4     3 (average)
  1959                           ;	Chosen strategy is simple_byte
  1960  00015C  5014               	movf	??_game_task^0,w,c
  1961  00015E  0AFF               	xorlw	255	; case 255
  1962  000160  B4D8               	btfsc	status,2,c
  1963  000162  EF56  F000         	goto	l1840
  1964  000166  EFB5  F000         	goto	l1866
  1965  00016A                     l1866:
  1966                           
  1967                           ;newmain.c: 553: 
  1968  00016A  0E05               	movlw	5
  1969  00016C  6E24               	movwf	_whichRG^0,c
  1970                           
  1971                           ;newmain.c: 554: 
  1972  00016E  EFBD  F001         	goto	l1994
  1973  000172                     l1868:
  1974                           
  1975                           ;newmain.c: 557:             starterDelay++;
  1976  000172  0E4D               	movlw	77
  1977  000174  EC8F  F006         	call	_tmr_start
  1978  000178                     
  1979                           ;newmain.c: 558:             if (isPressed == 0 && starterDelay >= 6)
  1980  000178  0E01               	movlw	1
  1981  00017A  6E1B               	movwf	_game_state^0,c
  1982  00017C                     
  1983                           ;newmain.c: 560:                 health_decreaser();
  1984  00017C  ECDA  F003         	call	_randomgen	;wreg free
  1985  000180                     
  1986                           ;newmain.c: 561:             }
  1987  000180  2A1A               	incf	_level_subcount^0,f,c
  1988  000182                     
  1989                           ;newmain.c: 562:             else
  1990  000182  0E01               	movlw	1
  1991  000184  6E2D               	movwf	_game_level^0,c
  1992                           
  1993                           ;newmain.c: 563:             {
  1994  000186  EFEA  F001         	goto	l315
  1995  00018A                     l1878:
  1996                           
  1997                           ;newmain.c: 567:             {
  1998  00018A  0419               	decf	_tmr_state^0,w,c
  1999  00018C  A4D8               	btfss	status,2,c
  2000  00018E  EFCB  F000         	goto	u1211
  2001  000192  EFCD  F000         	goto	u1210
  2002  000196                     u1211:
  2003  000196  EFEA  F001         	goto	l315
  2004  00019A                     u1210:
  2005  00019A                     
  2006                           ;newmain.c: 568:                 shape_shifter();;newmain.c: 569:                 random
      +                          gen();
  2007  00019A  2A1E               	incf	_starterDelay^0,f,c
  2008  00019C                     
  2009                           ;newmain.c: 570:             }
  2010  00019C  501F               	movf	_isPressed^0,w,c
  2011  00019E  A4D8               	btfss	status,2,c
  2012  0001A0  EFD4  F000         	goto	u1221
  2013  0001A4  EFD6  F000         	goto	u1220
  2014  0001A8                     u1221:
  2015  0001A8  EFE4  F000         	goto	l1888
  2016  0001AC                     u1220:
  2017  0001AC  501E               	movf	_starterDelay^0,w,c
  2018  0001AE  0A80               	xorlw	128
  2019  0001B0  0F7A               	addlw	-134
  2020  0001B2  A0D8               	btfss	status,0,c
  2021  0001B4  EFDE  F000         	goto	u1231
  2022  0001B8  EFE0  F000         	goto	u1230
  2023  0001BC                     u1231:
  2024  0001BC  EFE4  F000         	goto	l1888
  2025  0001C0                     u1230:
  2026  0001C0                     
  2027                           ;newmain.c: 571:             if (level_subcount >= L1);newmain.c: 572:             {
  2028  0001C0  EC9B  F006         	call	_health_decreaser	;wreg free
  2029                           
  2030                           ;newmain.c: 573:                 shape_shifter();
  2031  0001C4  EFE6  F000         	goto	l1890
  2032  0001C8                     l1888:
  2033                           
  2034                           ;newmain.c: 575:             };newmain.c: 576:             ++level_subcount;
  2035  0001C8  0E00               	movlw	0
  2036  0001CA  6E1F               	movwf	_isPressed^0,c
  2037  0001CC                     l1890:
  2038                           
  2039                           ;newmain.c: 578:             {
  2040  0001CC  0E05               	movlw	5
  2041  0001CE  601A               	cpfslt	_level_subcount^0,c
  2042  0001D0  EFEC  F000         	goto	u1241
  2043  0001D4  EFEE  F000         	goto	u1240
  2044  0001D8                     u1241:
  2045  0001D8  EFF2  F000         	goto	l1896
  2046  0001DC                     u1240:
  2047  0001DC                     
  2048                           ;newmain.c: 579:                 game_state = LEVEL2_INIT;;newmain.c: 580:             }
  2049  0001DC  EC82  F006         	call	_shape_shifter	;wreg free
  2050  0001E0                     
  2051                           ;newmain.c: 581:             tmr_start(77);
  2052  0001E0  ECDA  F003         	call	_randomgen	;wreg free
  2053  0001E4                     l1896:
  2054                           
  2055                           ;newmain.c: 583:         break;
  2056  0001E4  0E04               	movlw	4
  2057  0001E6  641A               	cpfsgt	_level_subcount^0,c
  2058  0001E8  EFF8  F000         	goto	u1251
  2059  0001EC  EFFA  F000         	goto	u1250
  2060  0001F0                     u1251:
  2061  0001F0  EFFC  F000         	goto	l1900
  2062  0001F4                     u1250:
  2063  0001F4                     
  2064                           ;newmain.c: 584:     case LEVEL2_INIT:;newmain.c: 585:         level_subcount = 0;
  2065  0001F4  EC82  F006         	call	_shape_shifter	;wreg free
  2066  0001F8                     l1900:
  2067                           
  2068                           ;newmain.c: 588: 
  2069  0001F8  2A1A               	incf	_level_subcount^0,f,c
  2070  0001FA                     
  2071                           ;newmain.c: 589:         randomgen();
  2072  0001FA  0E0B               	movlw	11
  2073  0001FC  181A               	xorwf	_level_subcount^0,w,c
  2074  0001FE  A4D8               	btfss	status,2,c
  2075  000200  EF04  F001         	goto	u1261
  2076  000204  EF06  F001         	goto	u1260
  2077  000208                     u1261:
  2078  000208  EF08  F001         	goto	l1906
  2079  00020C                     u1260:
  2080  00020C                     
  2081                           ;newmain.c: 590:         ++level_subcount;;newmain.c: 591:         game_level = 2;
  2082  00020C  0E02               	movlw	2
  2083  00020E  6E1B               	movwf	_game_state^0,c
  2084  000210                     l1906:
  2085                           
  2086                           ;newmain.c: 593:     case LEVEL2:
  2087  000210  0E4D               	movlw	77
  2088  000212  EC8F  F006         	call	_tmr_start
  2089  000216  EFEA  F001         	goto	l315
  2090  00021A                     l1908:
  2091                           
  2092                           ;newmain.c: 597:             if (isPressed == 0 && starterDelay >= 6)
  2093  00021A  0E00               	movlw	0
  2094  00021C  6E1A               	movwf	_level_subcount^0,c
  2095  00021E                     
  2096                           ;newmain.c: 598:             {
  2097  00021E  0E3D               	movlw	61
  2098  000220  EC8F  F006         	call	_tmr_start
  2099  000224                     
  2100                           ;newmain.c: 599:                 health_decreaser();
  2101  000224  0E03               	movlw	3
  2102  000226  6E1B               	movwf	_game_state^0,c
  2103                           
  2104                           ;newmain.c: 601:             else
  2105  000228  ECDA  F003         	call	_randomgen	;wreg free
  2106  00022C                     
  2107                           ;newmain.c: 602:             {
  2108  00022C  2A1A               	incf	_level_subcount^0,f,c
  2109  00022E                     
  2110                           ;newmain.c: 603:                 isPressed = 0;
  2111  00022E  0E02               	movlw	2
  2112  000230  6E2D               	movwf	_game_level^0,c
  2113                           
  2114                           ;newmain.c: 604:             }
  2115  000232  EFEA  F001         	goto	l315
  2116  000236                     l1918:
  2117                           
  2118                           ;newmain.c: 606:             {
  2119  000236  0419               	decf	_tmr_state^0,w,c
  2120  000238  A4D8               	btfss	status,2,c
  2121  00023A  EF21  F001         	goto	u1271
  2122  00023E  EF23  F001         	goto	u1270
  2123  000242                     u1271:
  2124  000242  EFEA  F001         	goto	l315
  2125  000246                     u1270:
  2126  000246                     
  2127                           ;newmain.c: 607:                 shape_shifter();;newmain.c: 608:                 random
      +                          gen();
  2128  000246  2A1E               	incf	_starterDelay^0,f,c
  2129  000248                     
  2130                           ;newmain.c: 609:             }
  2131  000248  501F               	movf	_isPressed^0,w,c
  2132  00024A  A4D8               	btfss	status,2,c
  2133  00024C  EF2A  F001         	goto	u1281
  2134  000250  EF2C  F001         	goto	u1280
  2135  000254                     u1281:
  2136  000254  EF3A  F001         	goto	l1928
  2137  000258                     u1280:
  2138  000258  501E               	movf	_starterDelay^0,w,c
  2139  00025A  0A80               	xorlw	128
  2140  00025C  0F7A               	addlw	-134
  2141  00025E  A0D8               	btfss	status,0,c
  2142  000260  EF34  F001         	goto	u1291
  2143  000264  EF36  F001         	goto	u1290
  2144  000268                     u1291:
  2145  000268  EF3A  F001         	goto	l1928
  2146  00026C                     u1290:
  2147  00026C                     
  2148                           ;newmain.c: 610:             if (level_subcount >= L2);newmain.c: 611:             {
  2149  00026C  EC9B  F006         	call	_health_decreaser	;wreg free
  2150                           
  2151                           ;newmain.c: 612:                 shape_shifter();
  2152  000270  EF3C  F001         	goto	l1930
  2153  000274                     l1928:
  2154                           
  2155                           ;newmain.c: 614:             };newmain.c: 615:             ++level_subcount;
  2156  000274  0E00               	movlw	0
  2157  000276  6E1F               	movwf	_isPressed^0,c
  2158  000278                     l1930:
  2159                           
  2160                           ;newmain.c: 617:             {
  2161  000278  0E0A               	movlw	10
  2162  00027A  601A               	cpfslt	_level_subcount^0,c
  2163  00027C  EF42  F001         	goto	u1301
  2164  000280  EF44  F001         	goto	u1300
  2165  000284                     u1301:
  2166  000284  EF48  F001         	goto	l1936
  2167  000288                     u1300:
  2168  000288                     
  2169                           ;newmain.c: 618:                 game_state = LEVEL3_INIT;;newmain.c: 619:             }
  2170  000288  EC82  F006         	call	_shape_shifter	;wreg free
  2171  00028C                     
  2172                           ;newmain.c: 620:             tmr_start(61);
  2173  00028C  ECDA  F003         	call	_randomgen	;wreg free
  2174  000290                     l1936:
  2175                           
  2176                           ;newmain.c: 622:         break;
  2177  000290  0E09               	movlw	9
  2178  000292  641A               	cpfsgt	_level_subcount^0,c
  2179  000294  EF4E  F001         	goto	u1311
  2180  000298  EF50  F001         	goto	u1310
  2181  00029C                     u1311:
  2182  00029C  EF52  F001         	goto	l1940
  2183  0002A0                     u1310:
  2184  0002A0                     
  2185                           ;newmain.c: 623:     case LEVEL3_INIT:;newmain.c: 624:         level_subcount = 0;
  2186  0002A0  EC82  F006         	call	_shape_shifter	;wreg free
  2187  0002A4                     l1940:
  2188                           
  2189                           ;newmain.c: 627: 
  2190  0002A4  2A1A               	incf	_level_subcount^0,f,c
  2191  0002A6                     
  2192                           ;newmain.c: 628:         randomgen();
  2193  0002A6  0E10               	movlw	16
  2194  0002A8  181A               	xorwf	_level_subcount^0,w,c
  2195  0002AA  A4D8               	btfss	status,2,c
  2196  0002AC  EF5A  F001         	goto	u1321
  2197  0002B0  EF5C  F001         	goto	u1320
  2198  0002B4                     u1321:
  2199  0002B4  EF5E  F001         	goto	l1946
  2200  0002B8                     u1320:
  2201  0002B8                     
  2202                           ;newmain.c: 629:         ++level_subcount;;newmain.c: 630:         game_level = 3;
  2203  0002B8  0E04               	movlw	4
  2204  0002BA  6E1B               	movwf	_game_state^0,c
  2205  0002BC                     l1946:
  2206                           
  2207                           ;newmain.c: 632:     case LEVEL3:
  2208  0002BC  0E3D               	movlw	61
  2209  0002BE  EC8F  F006         	call	_tmr_start
  2210  0002C2  EFEA  F001         	goto	l315
  2211  0002C6                     l1948:
  2212                           
  2213                           ;newmain.c: 636:             if (isPressed == 0 && starterDelay >= 6)
  2214  0002C6  0E00               	movlw	0
  2215  0002C8  6E1A               	movwf	_level_subcount^0,c
  2216  0002CA                     
  2217                           ;newmain.c: 637:             {
  2218  0002CA  0E2E               	movlw	46
  2219  0002CC  EC8F  F006         	call	_tmr_start
  2220  0002D0                     
  2221                           ;newmain.c: 638:                 health_decreaser();
  2222  0002D0  0E05               	movlw	5
  2223  0002D2  6E1B               	movwf	_game_state^0,c
  2224                           
  2225                           ;newmain.c: 640:             else
  2226  0002D4  ECDA  F003         	call	_randomgen	;wreg free
  2227  0002D8                     
  2228                           ;newmain.c: 641:             {
  2229  0002D8  2A1A               	incf	_level_subcount^0,f,c
  2230  0002DA                     
  2231                           ;newmain.c: 642:                 isPressed = 0;
  2232  0002DA  0E03               	movlw	3
  2233  0002DC  6E2D               	movwf	_game_level^0,c
  2234                           
  2235                           ;newmain.c: 643:             }
  2236  0002DE  EFEA  F001         	goto	l315
  2237  0002E2                     l1958:
  2238                           
  2239                           ;newmain.c: 645:             {
  2240  0002E2  0419               	decf	_tmr_state^0,w,c
  2241  0002E4  A4D8               	btfss	status,2,c
  2242  0002E6  EF77  F001         	goto	u1331
  2243  0002EA  EF79  F001         	goto	u1330
  2244  0002EE                     u1331:
  2245  0002EE  EFEA  F001         	goto	l315
  2246  0002F2                     u1330:
  2247  0002F2                     
  2248                           ;newmain.c: 646:                 shape_shifter();;newmain.c: 647:                 random
      +                          gen();
  2249  0002F2  2A1E               	incf	_starterDelay^0,f,c
  2250  0002F4                     
  2251                           ;newmain.c: 648:             }
  2252  0002F4  501F               	movf	_isPressed^0,w,c
  2253  0002F6  A4D8               	btfss	status,2,c
  2254  0002F8  EF80  F001         	goto	u1341
  2255  0002FC  EF82  F001         	goto	u1340
  2256  000300                     u1341:
  2257  000300  EF90  F001         	goto	l1968
  2258  000304                     u1340:
  2259  000304  501E               	movf	_starterDelay^0,w,c
  2260  000306  0A80               	xorlw	128
  2261  000308  0F7A               	addlw	-134
  2262  00030A  A0D8               	btfss	status,0,c
  2263  00030C  EF8A  F001         	goto	u1351
  2264  000310  EF8C  F001         	goto	u1350
  2265  000314                     u1351:
  2266  000314  EF90  F001         	goto	l1968
  2267  000318                     u1350:
  2268  000318                     
  2269                           ;newmain.c: 649:             if (level_subcount >= L3);newmain.c: 650:             {
  2270  000318  EC9B  F006         	call	_health_decreaser	;wreg free
  2271                           
  2272                           ;newmain.c: 651:                 shape_shifter();
  2273  00031C  EF92  F001         	goto	l1970
  2274  000320                     l1968:
  2275                           
  2276                           ;newmain.c: 653:             };newmain.c: 654:             ++level_subcount;
  2277  000320  0E00               	movlw	0
  2278  000322  6E1F               	movwf	_isPressed^0,c
  2279  000324                     l1970:
  2280                           
  2281                           ;newmain.c: 656:             {
  2282  000324  0E0F               	movlw	15
  2283  000326  601A               	cpfslt	_level_subcount^0,c
  2284  000328  EF98  F001         	goto	u1361
  2285  00032C  EF9A  F001         	goto	u1360
  2286  000330                     u1361:
  2287  000330  EF9E  F001         	goto	l1976
  2288  000334                     u1360:
  2289  000334                     
  2290                           ;newmain.c: 657:                 game_state = END;;newmain.c: 658:             }
  2291  000334  EC82  F006         	call	_shape_shifter	;wreg free
  2292  000338                     
  2293                           ;newmain.c: 659:             tmr_start(46);
  2294  000338  ECDA  F003         	call	_randomgen	;wreg free
  2295  00033C                     l1976:
  2296                           
  2297                           ;newmain.c: 661:         break;
  2298  00033C  0E0E               	movlw	14
  2299  00033E  641A               	cpfsgt	_level_subcount^0,c
  2300  000340  EFA4  F001         	goto	u1371
  2301  000344  EFA6  F001         	goto	u1370
  2302  000348                     u1371:
  2303  000348  EFA8  F001         	goto	l1980
  2304  00034C                     u1370:
  2305  00034C                     
  2306                           ;newmain.c: 662:     case LOSE:;newmain.c: 663:         reset_task();
  2307  00034C  EC82  F006         	call	_shape_shifter	;wreg free
  2308  000350                     l1980:
  2309                           
  2310                           ;newmain.c: 666:         reset_task();
  2311  000350  2A1A               	incf	_level_subcount^0,f,c
  2312  000352                     
  2313                           ;newmain.c: 667:         break;
  2314  000352  0E15               	movlw	21
  2315  000354  181A               	xorwf	_level_subcount^0,w,c
  2316  000356  A4D8               	btfss	status,2,c
  2317  000358  EFB0  F001         	goto	u1381
  2318  00035C  EFB2  F001         	goto	u1380
  2319  000360                     u1381:
  2320  000360  EFB4  F001         	goto	l1986
  2321  000364                     u1380:
  2322  000364                     
  2323                           ;newmain.c: 668:     };newmain.c: 669: }
  2324  000364  0E06               	movlw	6
  2325  000366  6E1B               	movwf	_game_state^0,c
  2326  000368                     l1986:
  2327                           
  2328                           ;newmain.c: 671: void main(void)
  2329  000368  0E2E               	movlw	46
  2330  00036A  EC8F  F006         	call	_tmr_start
  2331  00036E  EFEA  F001         	goto	l315
  2332  000372                     l1988:
  2333                           
  2334                           ;newmain.c: 675:     tmr_init();
  2335  000372  ECB0  F006         	call	_reset_task	;wreg free
  2336                           
  2337                           ;newmain.c: 676:     init_irq();
  2338  000376  EFEA  F001         	goto	l315
  2339  00037A                     l1994:
  2340  00037A  501B               	movf	_game_state^0,w,c
  2341  00037C  6E14               	movwf	??_game_task^0,c
  2342  00037E  6A15               	clrf	(??_game_task+1)^0,c
  2343                           
  2344                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2345                           ; Switch size 1, requested type "simple"
  2346                           ; Number of cases is 1, Range of values is 0 to 0
  2347                           ; switch strategies available:
  2348                           ; Name         Instructions Cycles
  2349                           ; simple_byte            4     3 (average)
  2350                           ;	Chosen strategy is simple_byte
  2351  000380  5015               	movf	(??_game_task+1)^0,w,c
  2352  000382  0A00               	xorlw	0	; case 0
  2353  000384  B4D8               	btfsc	status,2,c
  2354  000386  EFC7  F001         	goto	l2108
  2355  00038A  EFEA  F001         	goto	l315
  2356  00038E                     l2108:
  2357                           
  2358                           ; Switch size 1, requested type "simple"
  2359                           ; Number of cases is 8, Range of values is 0 to 7
  2360                           ; switch strategies available:
  2361                           ; Name         Instructions Cycles
  2362                           ; simple_byte           25    13 (average)
  2363                           ;	Chosen strategy is simple_byte
  2364  00038E  5014               	movf	??_game_task^0,w,c
  2365  000390  0A00               	xorlw	0	; case 0
  2366  000392  B4D8               	btfsc	status,2,c
  2367  000394  EFB9  F000         	goto	l1868
  2368  000398  0A01               	xorlw	1	; case 1
  2369  00039A  B4D8               	btfsc	status,2,c
  2370  00039C  EFC5  F000         	goto	l1878
  2371  0003A0  0A03               	xorlw	3	; case 2
  2372  0003A2  B4D8               	btfsc	status,2,c
  2373  0003A4  EF0D  F001         	goto	l1908
  2374  0003A8  0A01               	xorlw	1	; case 3
  2375  0003AA  B4D8               	btfsc	status,2,c
  2376  0003AC  EF1B  F001         	goto	l1918
  2377  0003B0  0A07               	xorlw	7	; case 4
  2378  0003B2  B4D8               	btfsc	status,2,c
  2379  0003B4  EF63  F001         	goto	l1948
  2380  0003B8  0A01               	xorlw	1	; case 5
  2381  0003BA  B4D8               	btfsc	status,2,c
  2382  0003BC  EF71  F001         	goto	l1958
  2383  0003C0  0A03               	xorlw	3	; case 6
  2384  0003C2  B4D8               	btfsc	status,2,c
  2385  0003C4  EFB9  F001         	goto	l1988
  2386  0003C8  0A01               	xorlw	1	; case 7
  2387  0003CA  B4D8               	btfsc	status,2,c
  2388  0003CC  EFB9  F001         	goto	l1988
  2389  0003D0  EFEA  F001         	goto	l315
  2390  0003D4                     l315:
  2391  0003D4  0012               	return		;funcret
  2392  0003D6                     __end_of_game_task:
  2393                           	callstack 0
  2394                           
  2395 ;; *************** function _tmr_start *****************
  2396 ;; Defined at:
  2397 ;;		line 140 in file "newmain.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  ticks           1    wreg     unsigned char 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  ticks           1    7[COMRAM] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;Total ram usage:        1 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    3
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_game_task
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text9
  2426  000D1E                     __ptext9:
  2427                           	callstack 0
  2428  000D1E                     _tmr_start:
  2429                           	callstack 26
  2430                           
  2431                           ;incstack = 0
  2432                           ;tmr_start@ticks stored from wreg
  2433  000D1E  6E08               	movwf	tmr_start@ticks^0,c
  2434  000D20                     
  2435                           ;newmain.c: 140:     PORTA = 0x00;;newmain.c: 141: ;newmain.c: 142:     if (tmr1flag == 
      +                          0)
  2436  000D20  C008  F017         	movff	tmr_start@ticks,_tmr_ticks_left
  2437  000D24                     
  2438                           ;newmain.c: 143:     {
  2439  000D24  0E00               	movlw	0
  2440  000D26  6E19               	movwf	_tmr_state^0,c
  2441  000D28                     
  2442                           ;newmain.c: 144:         htmrval = TMR1H;
  2443  000D28  0E00               	movlw	0
  2444  000D2A  6ED7               	movwf	215,c	;volatile
  2445  000D2C  0E00               	movlw	0
  2446  000D2E  6ED6               	movwf	214,c	;volatile
  2447  000D30                     
  2448                           ;newmain.c: 145:         ltmrval = TMR1L;
  2449  000D30  94F2               	bcf	242,2,c	;volatile
  2450  000D32                     
  2451                           ;newmain.c: 146:         noteval = 0x07 & ltmrval;
  2452  000D32  8ED5               	bsf	213,7,c	;volatile
  2453  000D34  0012               	return		;funcret
  2454  000D36                     __end_of_tmr_start:
  2455                           	callstack 0
  2456                           
  2457 ;; *************** function _shape_shifter *****************
  2458 ;; Defined at:
  2459 ;;		line 447 in file "newmain.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;Total ram usage:        0 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    3
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_game_task
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text10
  2488  000D04                     __ptext10:
  2489                           	callstack 0
  2490  000D04                     _shape_shifter:
  2491                           	callstack 26
  2492  000D04                     
  2493                           ;newmain.c: 449:     tmr1flag = 0;
  2494  000D04  CF84 FF85          	movff	3972,3973	;volatile
  2495                           
  2496                           ;newmain.c: 450: }
  2497  000D08  CF83 FF84          	movff	3971,3972	;volatile
  2498                           
  2499                           ;newmain.c: 451: 
  2500  000D0C  CF82 FF83          	movff	3970,3971	;volatile
  2501                           
  2502                           ;newmain.c: 452: void health_decreaser()
  2503  000D10  CF81 FF82          	movff	3969,3970	;volatile
  2504                           
  2505                           ;newmain.c: 453: {
  2506  000D14  CF80 FF81          	movff	3968,3969	;volatile
  2507  000D18                     
  2508                           ;newmain.c: 454:     health--;
  2509  000D18  0E00               	movlw	0
  2510  000D1A  6E80               	movwf	128,c	;volatile
  2511  000D1C  0012               	return		;funcret
  2512  000D1E                     __end_of_shape_shifter:
  2513                           	callstack 0
  2514                           
  2515 ;; *************** function _reset_task *****************
  2516 ;; Defined at:
  2517 ;;		line 457 in file "newmain.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;		None
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      void 
  2524 ;; Registers used:
  2525 ;;		wreg, status,2
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;Total ram usage:        0 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    3
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_game_task
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text11
  2546  000D60                     __ptext11:
  2547                           	callstack 0
  2548  000D60                     _reset_task:
  2549                           	callstack 26
  2550  000D60                     
  2551                           ;newmain.c: 459: }
  2552  000D60  0E01               	movlw	1
  2553  000D62  6E21               	movwf	_isGameFinished^0,c
  2554                           
  2555                           ;newmain.c: 460: 
  2556  000D64  0E00               	movlw	0
  2557  000D66  6E2A               	movwf	_isGameStarted^0,c
  2558                           
  2559                           ;newmain.c: 461: void game_task()
  2560  000D68  0E00               	movlw	0
  2561  000D6A  6E1D               	movwf	_tmr1flag^0,c
  2562  000D6C  0012               	return		;funcret
  2563  000D6E                     __end_of_reset_task:
  2564                           	callstack 0
  2565                           
  2566 ;; *************** function _randomgen *****************
  2567 ;; Defined at:
  2568 ;;		line 149 in file "newmain.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  intermbit       1   18[COMRAM] unsigned char 
  2573 ;;  lastbit         1   17[COMRAM] unsigned char 
  2574 ;;  num             1   16[COMRAM] unsigned char 
  2575 ;;  noteval         1   15[COMRAM] unsigned char 
  2576 ;;  val             1   14[COMRAM] unsigned char 
  2577 ;;  i               1   13[COMRAM] unsigned char 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		wreg, status,2, status,0, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;Total ram usage:        6 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    4
  2594 ;; This function calls:
  2595 ;;		___awmod
  2596 ;; This function is called by:
  2597 ;;		_game_task
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text12
  2602  0007B4                     __ptext12:
  2603                           	callstack 0
  2604  0007B4                     _randomgen:
  2605                           	callstack 25
  2606  0007B4                     
  2607                           ;newmain.c: 151:         noteval = 0x07 & ltmrval;;newmain.c: 152:         noteval = not
      +                          eval % 5;
  2608  0007B4  0E00               	movlw	0
  2609  0007B6  6E80               	movwf	128,c	;volatile
  2610                           
  2611                           ;newmain.c: 154:         for (i = 0; i < noteval; i++)
  2612  0007B8  501D               	movf	_tmr1flag^0,w,c
  2613  0007BA  A4D8               	btfss	status,2,c
  2614  0007BC  EFE2  F003         	goto	u911
  2615  0007C0  EFE4  F003         	goto	u910
  2616  0007C4                     u911:
  2617  0007C4  EFEA  F003         	goto	l1640
  2618  0007C8                     u910:
  2619  0007C8                     
  2620                           ;newmain.c: 155:         {;newmain.c: 156:             val = val << 1;
  2621  0007C8  CFCF F01C          	movff	4047,_htmrval	;volatile
  2622                           
  2623                           ;newmain.c: 157:         }
  2624  0007CC  CFCE F023          	movff	4046,_ltmrval	;volatile
  2625  0007D0                     
  2626                           ;newmain.c: 159:         if (level == 1)
  2627  0007D0  0E01               	movlw	1
  2628  0007D2  6E1D               	movwf	_tmr1flag^0,c
  2629  0007D4                     l1640:
  2630                           
  2631                           ;newmain.c: 161:             lastbit = 0x01 & TMR1L;
  2632  0007D4  041D               	decf	_tmr1flag^0,w,c
  2633  0007D6  A4D8               	btfss	status,2,c
  2634  0007D8  EFF0  F003         	goto	u921
  2635  0007DC  EFF2  F003         	goto	u920
  2636  0007E0                     u921:
  2637  0007E0  EF8B  F004         	goto	l159
  2638  0007E4                     u920:
  2639  0007E4                     
  2640                           ;newmain.c: 162:             intermbit = 0x01 & TMR1H;;newmain.c: 163:             htmrv
      +                          al = htmrval >> 8;
  2641  0007E4  5023               	movf	_ltmrval^0,w,c
  2642  0007E6  0B07               	andlw	7
  2643  0007E8  6E10               	movwf	randomgen@noteval^0,c
  2644  0007EA                     
  2645                           ;newmain.c: 164:             ltmrval = ltmrval >> 8;
  2646  0007EA  C010  F008         	movff	randomgen@noteval,___awmod@dividend
  2647  0007EE  6A09               	clrf	(___awmod@dividend+1)^0,c
  2648  0007F0  0E00               	movlw	0
  2649  0007F2  6E0B               	movwf	(___awmod@divisor+1)^0,c
  2650  0007F4  0E05               	movlw	5
  2651  0007F6  6E0A               	movwf	___awmod@divisor^0,c
  2652  0007F8  EC3A  F005         	call	___awmod	;wreg free
  2653  0007FC  5008               	movf	?___awmod^0,w,c
  2654  0007FE  6E10               	movwf	randomgen@noteval^0,c
  2655  000800                     
  2656                           ;newmain.c: 165:             lastbit = lastbit << 7;
  2657  000800  0E01               	movlw	1
  2658  000802  6E0F               	movwf	randomgen@val^0,c
  2659  000804                     
  2660                           ;newmain.c: 166:             intermbit = intermbit << 7;
  2661  000804  0E00               	movlw	0
  2662  000806  6E0E               	movwf	randomgen@i^0,c
  2663  000808  EF0A  F004         	goto	l1654
  2664  00080C                     l1650:
  2665                           
  2666                           ;newmain.c: 167:             ltmrval = ltmrval | lastbit;;newmain.c: 168:             ht
      +                          mrval = htmrval | intermbit;
  2667  00080C  500F               	movf	randomgen@val^0,w,c
  2668  00080E  240F               	addwf	randomgen@val^0,w,c
  2669  000810  6E0F               	movwf	randomgen@val^0,c
  2670  000812                     
  2671                           ;newmain.c: 169:         }
  2672  000812  2A0E               	incf	randomgen@i^0,f,c
  2673  000814                     l1654:
  2674  000814  5010               	movf	randomgen@noteval^0,w,c
  2675  000816  5C0E               	subwf	randomgen@i^0,w,c
  2676  000818  A0D8               	btfss	status,0,c
  2677  00081A  EF11  F004         	goto	u931
  2678  00081E  EF13  F004         	goto	u930
  2679  000822                     u931:
  2680  000822  EF06  F004         	goto	l1650
  2681  000826                     u930:
  2682  000826                     
  2683                           ;newmain.c: 170:         if (level == 2)
  2684  000826  C00F  FF80         	movff	randomgen@val,3968	;volatile
  2685  00082A                     
  2686                           ;newmain.c: 171:         {
  2687  00082A  042B               	decf	_level^0,w,c
  2688  00082C  A4D8               	btfss	status,2,c
  2689  00082E  EF1B  F004         	goto	u941
  2690  000832  EF1D  F004         	goto	u940
  2691  000836                     u941:
  2692  000836  EF33  F004         	goto	l150
  2693  00083A                     u940:
  2694  00083A                     
  2695                           ;newmain.c: 172:             num = 3;;newmain.c: 173:             while (num > 0)
  2696  00083A  50CE               	movf	206,w,c	;volatile
  2697  00083C  0B01               	andlw	1
  2698  00083E  6E12               	movwf	randomgen@lastbit^0,c
  2699                           
  2700                           ;newmain.c: 174:             {
  2701  000840  50CF               	movf	207,w,c	;volatile
  2702  000842  0B01               	andlw	1
  2703  000844  6E13               	movwf	randomgen@intermbit^0,c
  2704  000846                     
  2705                           ;newmain.c: 175:                 lastbit = 0x01 & TMR1L;
  2706  000846  0E00               	movlw	0
  2707  000848  6E1C               	movwf	_htmrval^0,c
  2708  00084A                     
  2709                           ;newmain.c: 176:                 intermbit = 0x01 & TMR1H;
  2710  00084A  0E00               	movlw	0
  2711  00084C  6E23               	movwf	_ltmrval^0,c
  2712                           
  2713                           ;newmain.c: 177:                 htmrval = htmrval >> 8;
  2714  00084E  4012               	rrncf	randomgen@lastbit^0,w,c
  2715  000850  0B80               	andlw	128
  2716  000852  6E12               	movwf	randomgen@lastbit^0,c
  2717                           
  2718                           ;newmain.c: 178:                 ltmrval = ltmrval >> 8;
  2719  000854  4013               	rrncf	randomgen@intermbit^0,w,c
  2720  000856  0B80               	andlw	128
  2721  000858  6E13               	movwf	randomgen@intermbit^0,c
  2722                           
  2723                           ;newmain.c: 179:                 lastbit = lastbit << 7;
  2724  00085A  5023               	movf	_ltmrval^0,w,c
  2725  00085C  1012               	iorwf	randomgen@lastbit^0,w,c
  2726  00085E  6E23               	movwf	_ltmrval^0,c
  2727                           
  2728                           ;newmain.c: 180:                 intermbit = intermbit << 7;
  2729  000860  501C               	movf	_htmrval^0,w,c
  2730  000862  1013               	iorwf	randomgen@intermbit^0,w,c
  2731  000864  6E1C               	movwf	_htmrval^0,c
  2732  000866                     l150:
  2733                           
  2734                           ;newmain.c: 182:                 htmrval = htmrval | intermbit;
  2735  000866  0E02               	movlw	2
  2736  000868  182B               	xorwf	_level^0,w,c
  2737  00086A  A4D8               	btfss	status,2,c
  2738  00086C  EF3A  F004         	goto	u951
  2739  000870  EF3C  F004         	goto	u950
  2740  000874                     u951:
  2741  000874  EF5F  F004         	goto	l1676
  2742  000878                     u950:
  2743  000878                     
  2744                           ;newmain.c: 183:                 num--;;newmain.c: 184:             }
  2745  000878  0E03               	movlw	3
  2746  00087A  6E11               	movwf	randomgen@num^0,c
  2747                           
  2748                           ;newmain.c: 185:         }
  2749  00087C  EF57  F004         	goto	l1674
  2750  000880                     l1666:
  2751                           
  2752                           ;newmain.c: 186:         if (level == 3);newmain.c: 187:         {
  2753  000880  50CE               	movf	206,w,c	;volatile
  2754  000882  0B01               	andlw	1
  2755  000884  6E12               	movwf	randomgen@lastbit^0,c
  2756                           
  2757                           ;newmain.c: 188:             num = 5;
  2758  000886  50CF               	movf	207,w,c	;volatile
  2759  000888  0B01               	andlw	1
  2760  00088A  6E13               	movwf	randomgen@intermbit^0,c
  2761  00088C                     
  2762                           ;newmain.c: 189:             while (num > 0)
  2763  00088C  0E00               	movlw	0
  2764  00088E  6E1C               	movwf	_htmrval^0,c
  2765  000890                     
  2766                           ;newmain.c: 190:             {
  2767  000890  0E00               	movlw	0
  2768  000892  6E23               	movwf	_ltmrval^0,c
  2769                           
  2770                           ;newmain.c: 191:                 lastbit = 0x01 & TMR1L;
  2771  000894  4012               	rrncf	randomgen@lastbit^0,w,c
  2772  000896  0B80               	andlw	128
  2773  000898  6E12               	movwf	randomgen@lastbit^0,c
  2774                           
  2775                           ;newmain.c: 192:                 intermbit = 0x01 & TMR1H;
  2776  00089A  4013               	rrncf	randomgen@intermbit^0,w,c
  2777  00089C  0B80               	andlw	128
  2778  00089E  6E13               	movwf	randomgen@intermbit^0,c
  2779                           
  2780                           ;newmain.c: 193:                 htmrval = htmrval >> 8;
  2781  0008A0  5023               	movf	_ltmrval^0,w,c
  2782  0008A2  1012               	iorwf	randomgen@lastbit^0,w,c
  2783  0008A4  6E23               	movwf	_ltmrval^0,c
  2784                           
  2785                           ;newmain.c: 194:                 ltmrval = ltmrval >> 8;
  2786  0008A6  501C               	movf	_htmrval^0,w,c
  2787  0008A8  1013               	iorwf	randomgen@intermbit^0,w,c
  2788  0008AA  6E1C               	movwf	_htmrval^0,c
  2789  0008AC                     
  2790                           ;newmain.c: 195:                 lastbit = lastbit << 7;
  2791  0008AC  0611               	decf	randomgen@num^0,f,c
  2792  0008AE                     l1674:
  2793                           
  2794                           ;newmain.c: 185:         }
  2795  0008AE  5011               	movf	randomgen@num^0,w,c
  2796  0008B0  A4D8               	btfss	status,2,c
  2797  0008B2  EF5D  F004         	goto	u961
  2798  0008B6  EF5F  F004         	goto	u960
  2799  0008BA                     u961:
  2800  0008BA  EF40  F004         	goto	l1666
  2801  0008BE                     u960:
  2802  0008BE                     l1676:
  2803                           
  2804                           ;newmain.c: 198:                 htmrval = htmrval | intermbit;
  2805  0008BE  0E03               	movlw	3
  2806  0008C0  182B               	xorwf	_level^0,w,c
  2807  0008C2  A4D8               	btfss	status,2,c
  2808  0008C4  EF66  F004         	goto	u971
  2809  0008C8  EF68  F004         	goto	u970
  2810  0008CC                     u971:
  2811  0008CC  EF8B  F004         	goto	l159
  2812  0008D0                     u970:
  2813  0008D0                     
  2814                           ;newmain.c: 199:                 num--;;newmain.c: 200:             }
  2815  0008D0  0E05               	movlw	5
  2816  0008D2  6E11               	movwf	randomgen@num^0,c
  2817                           
  2818                           ;newmain.c: 201:         }
  2819  0008D4  EF83  F004         	goto	l1688
  2820  0008D8                     l1680:
  2821                           
  2822                           ;newmain.c: 202:     };newmain.c: 203: }
  2823  0008D8  50CE               	movf	206,w,c	;volatile
  2824  0008DA  0B01               	andlw	1
  2825  0008DC  6E12               	movwf	randomgen@lastbit^0,c
  2826                           
  2827                           ;newmain.c: 204: 
  2828  0008DE  50CF               	movf	207,w,c	;volatile
  2829  0008E0  0B01               	andlw	1
  2830  0008E2  6E13               	movwf	randomgen@intermbit^0,c
  2831  0008E4                     
  2832                           ;newmain.c: 205: 
  2833  0008E4  0E00               	movlw	0
  2834  0008E6  6E1C               	movwf	_htmrval^0,c
  2835  0008E8                     
  2836                           ;newmain.c: 206: 
  2837  0008E8  0E00               	movlw	0
  2838  0008EA  6E23               	movwf	_ltmrval^0,c
  2839                           
  2840                           ;newmain.c: 207: void input_task()
  2841  0008EC  4012               	rrncf	randomgen@lastbit^0,w,c
  2842  0008EE  0B80               	andlw	128
  2843  0008F0  6E12               	movwf	randomgen@lastbit^0,c
  2844                           
  2845                           ;newmain.c: 208: {
  2846  0008F2  4013               	rrncf	randomgen@intermbit^0,w,c
  2847  0008F4  0B80               	andlw	128
  2848  0008F6  6E13               	movwf	randomgen@intermbit^0,c
  2849                           
  2850                           ;newmain.c: 209: 
  2851  0008F8  5023               	movf	_ltmrval^0,w,c
  2852  0008FA  1012               	iorwf	randomgen@lastbit^0,w,c
  2853  0008FC  6E23               	movwf	_ltmrval^0,c
  2854                           
  2855                           ;newmain.c: 210: 
  2856  0008FE  501C               	movf	_htmrval^0,w,c
  2857  000900  1013               	iorwf	randomgen@intermbit^0,w,c
  2858  000902  6E1C               	movwf	_htmrval^0,c
  2859  000904                     
  2860                           ;newmain.c: 211: 
  2861  000904  0611               	decf	randomgen@num^0,f,c
  2862  000906                     l1688:
  2863                           
  2864                           ;newmain.c: 201:         }
  2865  000906  5011               	movf	randomgen@num^0,w,c
  2866  000908  A4D8               	btfss	status,2,c
  2867  00090A  EF89  F004         	goto	u981
  2868  00090E  EF8B  F004         	goto	u980
  2869  000912                     u981:
  2870  000912  EF6C  F004         	goto	l1680
  2871  000916                     u980:
  2872  000916                     l159:
  2873  000916  0012               	return		;funcret
  2874  000918                     __end_of_randomgen:
  2875                           	callstack 0
  2876                           
  2877 ;; *************** function ___awmod *****************
  2878 ;; Defined at:
  2879 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/awmod.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  dividend        2    7[COMRAM] int 
  2882 ;;  divisor         2    9[COMRAM] int 
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;  sign            1   12[COMRAM] unsigned char 
  2885 ;;  counter         1   11[COMRAM] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  2    7[COMRAM] int 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;Total ram usage:        6 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    3
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_randomgen
  2906 ;;		_sevenSeg_controller
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text13
  2911  000A74                     __ptext13:
  2912                           	callstack 0
  2913  000A74                     ___awmod:
  2914                           	callstack 26
  2915  000A74  0E00               	movlw	0
  2916  000A76  6E0D               	movwf	___awmod@sign^0,c
  2917  000A78  BE09               	btfsc	(___awmod@dividend+1)^0,7,c
  2918  000A7A  EF43  F005         	goto	u850
  2919  000A7E  EF41  F005         	goto	u851
  2920  000A82                     u851:
  2921  000A82  EF49  F005         	goto	l1604
  2922  000A86                     u850:
  2923  000A86  6C08               	negf	___awmod@dividend^0,c
  2924  000A88  1E09               	comf	(___awmod@dividend+1)^0,f,c
  2925  000A8A  B0D8               	btfsc	status,0,c
  2926  000A8C  2A09               	incf	(___awmod@dividend+1)^0,f,c
  2927  000A8E  0E01               	movlw	1
  2928  000A90  6E0D               	movwf	___awmod@sign^0,c
  2929  000A92                     l1604:
  2930  000A92  BE0B               	btfsc	(___awmod@divisor+1)^0,7,c
  2931  000A94  EF50  F005         	goto	u860
  2932  000A98  EF4E  F005         	goto	u861
  2933  000A9C                     u861:
  2934  000A9C  EF54  F005         	goto	l1608
  2935  000AA0                     u860:
  2936  000AA0  6C0A               	negf	___awmod@divisor^0,c
  2937  000AA2  1E0B               	comf	(___awmod@divisor+1)^0,f,c
  2938  000AA4  B0D8               	btfsc	status,0,c
  2939  000AA6  2A0B               	incf	(___awmod@divisor+1)^0,f,c
  2940  000AA8                     l1608:
  2941  000AA8  500A               	movf	___awmod@divisor^0,w,c
  2942  000AAA  100B               	iorwf	(___awmod@divisor+1)^0,w,c
  2943  000AAC  B4D8               	btfsc	status,2,c
  2944  000AAE  EF5B  F005         	goto	u871
  2945  000AB2  EF5D  F005         	goto	u870
  2946  000AB6                     u871:
  2947  000AB6  EF81  F005         	goto	l1624
  2948  000ABA                     u870:
  2949  000ABA  0E01               	movlw	1
  2950  000ABC  6E0C               	movwf	___awmod@counter^0,c
  2951  000ABE  EF65  F005         	goto	l1614
  2952  000AC2                     l1612:
  2953  000AC2  90D8               	bcf	status,0,c
  2954  000AC4  360A               	rlcf	___awmod@divisor^0,f,c
  2955  000AC6  360B               	rlcf	(___awmod@divisor+1)^0,f,c
  2956  000AC8  2A0C               	incf	___awmod@counter^0,f,c
  2957  000ACA                     l1614:
  2958  000ACA  AE0B               	btfss	(___awmod@divisor+1)^0,7,c
  2959  000ACC  EF6A  F005         	goto	u881
  2960  000AD0  EF6C  F005         	goto	u880
  2961  000AD4                     u881:
  2962  000AD4  EF61  F005         	goto	l1612
  2963  000AD8                     u880:
  2964  000AD8                     l1616:
  2965  000AD8  500A               	movf	___awmod@divisor^0,w,c
  2966  000ADA  5C08               	subwf	___awmod@dividend^0,w,c
  2967  000ADC  500B               	movf	(___awmod@divisor+1)^0,w,c
  2968  000ADE  5809               	subwfb	(___awmod@dividend+1)^0,w,c
  2969  000AE0  A0D8               	btfss	status,0,c
  2970  000AE2  EF75  F005         	goto	u891
  2971  000AE6  EF77  F005         	goto	u890
  2972  000AEA                     u891:
  2973  000AEA  EF7B  F005         	goto	l1620
  2974  000AEE                     u890:
  2975  000AEE  500A               	movf	___awmod@divisor^0,w,c
  2976  000AF0  5E08               	subwf	___awmod@dividend^0,f,c
  2977  000AF2  500B               	movf	(___awmod@divisor+1)^0,w,c
  2978  000AF4  5A09               	subwfb	(___awmod@dividend+1)^0,f,c
  2979  000AF6                     l1620:
  2980  000AF6  90D8               	bcf	status,0,c
  2981  000AF8  320B               	rrcf	(___awmod@divisor+1)^0,f,c
  2982  000AFA  320A               	rrcf	___awmod@divisor^0,f,c
  2983  000AFC  2E0C               	decfsz	___awmod@counter^0,f,c
  2984  000AFE  EF6C  F005         	goto	l1616
  2985  000B02                     l1624:
  2986  000B02  500D               	movf	___awmod@sign^0,w,c
  2987  000B04  B4D8               	btfsc	status,2,c
  2988  000B06  EF87  F005         	goto	u901
  2989  000B0A  EF89  F005         	goto	u900
  2990  000B0E                     u901:
  2991  000B0E  EF8D  F005         	goto	l1628
  2992  000B12                     u900:
  2993  000B12  6C08               	negf	___awmod@dividend^0,c
  2994  000B14  1E09               	comf	(___awmod@dividend+1)^0,f,c
  2995  000B16  B0D8               	btfsc	status,0,c
  2996  000B18  2A09               	incf	(___awmod@dividend+1)^0,f,c
  2997  000B1A                     l1628:
  2998  000B1A  C008  F008         	movff	___awmod@dividend,?___awmod
  2999  000B1E  C009  F009         	movff	___awmod@dividend+1,?___awmod+1
  3000  000B22  0012               	return		;funcret
  3001  000B24                     __end_of___awmod:
  3002                           	callstack 0
  3003                           
  3004 ;; *************** function _health_decreaser *****************
  3005 ;; Defined at:
  3006 ;;		line 464 in file "newmain.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;		None
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;Total ram usage:        0 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    3
  3027 ;; This function calls:
  3028 ;;		Nothing
  3029 ;; This function is called by:
  3030 ;;		_game_task
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text14
  3035  000D36                     __ptext14:
  3036                           	callstack 0
  3037  000D36                     _health_decreaser:
  3038                           	callstack 26
  3039  000D36                     
  3040                           ;newmain.c: 466: 
  3041  000D36  062C               	decf	_health^0,f,c
  3042  000D38                     
  3043                           ;newmain.c: 467: 
  3044  000D38  502C               	movf	_health^0,w,c
  3045  000D3A  A4D8               	btfss	status,2,c
  3046  000D3C  EFA2  F006         	goto	u151
  3047  000D40  EFA4  F006         	goto	u150
  3048  000D44                     u151:
  3049  000D44  EFA6  F006         	goto	l259
  3050  000D48                     u150:
  3051  000D48                     
  3052                           ;newmain.c: 468:     uint8_t count = 0;;newmain.c: 469:     if (isRG0Pressed == 1)
  3053  000D48  0E07               	movlw	7
  3054  000D4A  6E1B               	movwf	_game_state^0,c
  3055  000D4C                     l259:
  3056  000D4C  0012               	return		;funcret
  3057  000D4E                     __end_of_health_decreaser:
  3058                           	callstack 0
  3059                           
  3060 ;; *************** function _lowPriorityISR *****************
  3061 ;; Defined at:
  3062 ;;		line 21 in file "newmain.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		None
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3080 ;;Total ram usage:        1 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    2
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		Interrupt level 1
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	intcodelo
  3091  000018                     __pintcodelo:
  3092                           	callstack 0
  3093  000018                     _lowPriorityISR:
  3094                           	callstack 25
  3095                           
  3096                           ;incstack = 0
  3097  000018  8031               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3098  00001A  CFE0 F007          	movff	bsr,??_lowPriorityISR
  3099  00001E  C007  FFE0         	movff	??_lowPriorityISR,bsr
  3100  000022  9031               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3101  000024  0010               	retfie	
  3102  000026                     __end_of_lowPriorityISR:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function _highPriorityISR *****************
  3106 ;; Defined at:
  3107 ;;		line 14 in file "newmain.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, status,0, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:    1
  3128 ;; This function calls:
  3129 ;;		_tmr_isr
  3130 ;;		i2___awmod
  3131 ;; This function is called by:
  3132 ;;		Interrupt level 2
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	intcode
  3137  000008                     __pintcode:
  3138                           	callstack 0
  3139  000008                     _highPriorityISR:
  3140                           	callstack 25
  3141                           
  3142                           ;incstack = 0
  3143  000008  8231               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3144  00000A  ED6A  F006         	call	int_func,f	;refresh shadow registers
  3145                           
  3146                           	psect	intcode_body
  3147  000CD4                     __pintcode_body:
  3148                           	callstack 25
  3149  000CD4                     int_func:
  3150                           	callstack 25
  3151  000CD4  0006               	pop		; remove dummy address from shadow register refresh
  3152  000CD6                     
  3153                           ;newmain.c: 16: int8_t isRC0Pressed;
  3154  000CD6  A4F2               	btfss	242,2,c	;volatile
  3155  000CD8  EF70  F006         	goto	i2u145_41
  3156  000CDC  EF72  F006         	goto	i2u145_40
  3157  000CE0                     i2u145_41:
  3158  000CE0  EF74  F006         	goto	i2l2048
  3159  000CE4                     i2u145_40:
  3160  000CE4                     
  3161                           ;newmain.c: 17: int8_t isRG0Pressed;
  3162  000CE4  ECB7  F006         	call	_tmr_isr	;wreg free
  3163  000CE8                     i2l2048:
  3164                           
  3165                           ;newmain.c: 18: int8_t isRG1Pressed;
  3166  000CE8  2A22               	incf	_sevenSegCounter^0,f,c
  3167  000CEA                     
  3168                           ;newmain.c: 19: int8_t isRG2Pressed;
  3169  000CEA  C022  F001         	movff	_sevenSegCounter,i2___awmod@dividend
  3170  000CEE  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  3171  000CF0  0E00               	movlw	0
  3172  000CF2  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  3173  000CF4  0E0C               	movlw	12
  3174  000CF6  6E03               	movwf	i2___awmod@divisor^0,c
  3175  000CF8  EC92  F005         	call	i2___awmod	;wreg free
  3176  000CFC  5001               	movf	?i2___awmod^0,w,c
  3177  000CFE  6E22               	movwf	_sevenSegCounter^0,c
  3178  000D00  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3179  000D02  0011               	retfie		f
  3180  000D04                     __end_of_highPriorityISR:
  3181                           	callstack 0
  3182                           
  3183 ;; *************** function i2___awmod *****************
  3184 ;; Defined at:
  3185 ;;		line 7 in file "/opt/microchip/xc8/v2.30/pic/sources/c99/common/awmod.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  dividend        2    0[COMRAM] int 
  3188 ;;  divisor         2    2[COMRAM] int 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  sign            1    5[COMRAM] unsigned char 
  3191 ;;  counter         1    4[COMRAM] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  2    0[COMRAM] int 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;Total ram usage:        6 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_highPriorityISR
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text17
  3215  000B24                     __ptext17:
  3216                           	callstack 0
  3217  000B24                     i2___awmod:
  3218                           	callstack 25
  3219  000B24  0E00               	movlw	0
  3220  000B26  6E06               	movwf	i2___awmod@sign^0,c
  3221  000B28  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  3222  000B2A  EF9B  F005         	goto	i2u139_40
  3223  000B2E  EF99  F005         	goto	i2u139_41
  3224  000B32                     i2u139_41:
  3225  000B32  EFA1  F005         	goto	i2l2016
  3226  000B36                     i2u139_40:
  3227  000B36  6C01               	negf	i2___awmod@dividend^0,c
  3228  000B38  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  3229  000B3A  B0D8               	btfsc	status,0,c
  3230  000B3C  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  3231  000B3E  0E01               	movlw	1
  3232  000B40  6E06               	movwf	i2___awmod@sign^0,c
  3233  000B42                     i2l2016:
  3234  000B42  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  3235  000B44  EFA8  F005         	goto	i2u140_40
  3236  000B48  EFA6  F005         	goto	i2u140_41
  3237  000B4C                     i2u140_41:
  3238  000B4C  EFAC  F005         	goto	i2l2020
  3239  000B50                     i2u140_40:
  3240  000B50  6C03               	negf	i2___awmod@divisor^0,c
  3241  000B52  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  3242  000B54  B0D8               	btfsc	status,0,c
  3243  000B56  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  3244  000B58                     i2l2020:
  3245  000B58  5003               	movf	i2___awmod@divisor^0,w,c
  3246  000B5A  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  3247  000B5C  B4D8               	btfsc	status,2,c
  3248  000B5E  EFB3  F005         	goto	i2u141_41
  3249  000B62  EFB5  F005         	goto	i2u141_40
  3250  000B66                     i2u141_41:
  3251  000B66  EFD9  F005         	goto	i2l2036
  3252  000B6A                     i2u141_40:
  3253  000B6A  0E01               	movlw	1
  3254  000B6C  6E05               	movwf	i2___awmod@counter^0,c
  3255  000B6E  EFBD  F005         	goto	i2l2026
  3256  000B72                     i2l2024:
  3257  000B72  90D8               	bcf	status,0,c
  3258  000B74  3603               	rlcf	i2___awmod@divisor^0,f,c
  3259  000B76  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  3260  000B78  2A05               	incf	i2___awmod@counter^0,f,c
  3261  000B7A                     i2l2026:
  3262  000B7A  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  3263  000B7C  EFC2  F005         	goto	i2u142_41
  3264  000B80  EFC4  F005         	goto	i2u142_40
  3265  000B84                     i2u142_41:
  3266  000B84  EFB9  F005         	goto	i2l2024
  3267  000B88                     i2u142_40:
  3268  000B88                     i2l2028:
  3269  000B88  5003               	movf	i2___awmod@divisor^0,w,c
  3270  000B8A  5C01               	subwf	i2___awmod@dividend^0,w,c
  3271  000B8C  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  3272  000B8E  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  3273  000B90  A0D8               	btfss	status,0,c
  3274  000B92  EFCD  F005         	goto	i2u143_41
  3275  000B96  EFCF  F005         	goto	i2u143_40
  3276  000B9A                     i2u143_41:
  3277  000B9A  EFD3  F005         	goto	i2l2032
  3278  000B9E                     i2u143_40:
  3279  000B9E  5003               	movf	i2___awmod@divisor^0,w,c
  3280  000BA0  5E01               	subwf	i2___awmod@dividend^0,f,c
  3281  000BA2  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  3282  000BA4  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  3283  000BA6                     i2l2032:
  3284  000BA6  90D8               	bcf	status,0,c
  3285  000BA8  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  3286  000BAA  3203               	rrcf	i2___awmod@divisor^0,f,c
  3287  000BAC  2E05               	decfsz	i2___awmod@counter^0,f,c
  3288  000BAE  EFC4  F005         	goto	i2l2028
  3289  000BB2                     i2l2036:
  3290  000BB2  5006               	movf	i2___awmod@sign^0,w,c
  3291  000BB4  B4D8               	btfsc	status,2,c
  3292  000BB6  EFDF  F005         	goto	i2u144_41
  3293  000BBA  EFE1  F005         	goto	i2u144_40
  3294  000BBE                     i2u144_41:
  3295  000BBE  EFE5  F005         	goto	i2l2040
  3296  000BC2                     i2u144_40:
  3297  000BC2  6C01               	negf	i2___awmod@dividend^0,c
  3298  000BC4  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  3299  000BC6  B0D8               	btfsc	status,0,c
  3300  000BC8  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  3301  000BCA                     i2l2040:
  3302  000BCA  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  3303  000BCE  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3304  000BD2  0012               	return		;funcret
  3305  000BD4                     __end_ofi2___awmod:
  3306                           	callstack 0
  3307                           
  3308 ;; *************** function _tmr_isr *****************
  3309 ;; Defined at:
  3310 ;;		line 122 in file "newmain.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_highPriorityISR
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text18
  3338  000D6E                     __ptext18:
  3339                           	callstack 0
  3340  000D6E                     _tmr_isr:
  3341                           	callstack 25
  3342  000D6E                     
  3343                           ;newmain.c: 124: }
  3344  000D6E  94F2               	bcf	242,2,c	;volatile
  3345                           
  3346                           ;newmain.c: 125: 
  3347  000D70  2E17               	decfsz	_tmr_ticks_left^0,f,c
  3348  000D72  EFBD  F006         	goto	i2l136
  3349  000D76                     
  3350                           ;newmain.c: 126: 
  3351  000D76  0E01               	movlw	1
  3352  000D78  6E19               	movwf	_tmr_state^0,c
  3353  000D7A                     i2l136:
  3354  000D7A  0012               	return		;funcret
  3355  000D7C                     __end_of_tmr_isr:
  3356                           	callstack 0
  3357  0000                     
  3358                           	psect	rparam
  3359  0000                     
  3360                           	psect	temp
  3361  000031                     btemp:
  3362                           	callstack 0
  3363  000031                     	ds	1
  3364  0000                     int$flags	set	btemp
  3365  0000                     wtemp8	set	btemp+1
  3366  0000                     ttemp5	set	btemp+1
  3367  0000                     ttemp6	set	btemp+4
  3368  0000                     ttemp7	set	btemp+8
  3369                           
  3370                           	psect	idloc
  3371                           
  3372                           ;Config register IDLOC0 @ 0x200000
  3373                           ;	unspecified, using default values
  3374  200000                     	org	2097152
  3375  200000  FF                 	db	255
  3376                           
  3377                           ;Config register IDLOC1 @ 0x200001
  3378                           ;	unspecified, using default values
  3379  200001                     	org	2097153
  3380  200001  FF                 	db	255
  3381                           
  3382                           ;Config register IDLOC2 @ 0x200002
  3383                           ;	unspecified, using default values
  3384  200002                     	org	2097154
  3385  200002  FF                 	db	255
  3386                           
  3387                           ;Config register IDLOC3 @ 0x200003
  3388                           ;	unspecified, using default values
  3389  200003                     	org	2097155
  3390  200003  FF                 	db	255
  3391                           
  3392                           ;Config register IDLOC4 @ 0x200004
  3393                           ;	unspecified, using default values
  3394  200004                     	org	2097156
  3395  200004  FF                 	db	255
  3396                           
  3397                           ;Config register IDLOC5 @ 0x200005
  3398                           ;	unspecified, using default values
  3399  200005                     	org	2097157
  3400  200005  FF                 	db	255
  3401                           
  3402                           ;Config register IDLOC6 @ 0x200006
  3403                           ;	unspecified, using default values
  3404  200006                     	org	2097158
  3405  200006  FF                 	db	255
  3406                           
  3407                           ;Config register IDLOC7 @ 0x200007
  3408                           ;	unspecified, using default values
  3409  200007                     	org	2097159
  3410  200007  FF                 	db	255
  3411                           
  3412                           	psect	config
  3413                           
  3414                           ; Padding undefined space
  3415  300000                     	org	3145728
  3416  300000  FF                 	db	255
  3417                           
  3418                           ;Config register CONFIG1H @ 0x300001
  3419                           ;	Oscillator Selection bits
  3420                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  3421                           ;	Fail-Safe Clock Monitor Enable bit
  3422                           ;	FCMEN = 0x0, unprogrammed default
  3423                           ;	Internal/External Oscillator Switchover bit
  3424                           ;	IESO = 0x0, unprogrammed default
  3425  300001                     	org	3145729
  3426  300001  06                 	db	6
  3427                           
  3428                           ;Config register CONFIG2L @ 0x300002
  3429                           ;	unspecified, using default values
  3430                           ;	Power-up Timer Enable bit
  3431                           ;	PWRT = 0x1, unprogrammed default
  3432                           ;	Brown-out Reset Enable bits
  3433                           ;	BOREN = 0x3, unprogrammed default
  3434                           ;	Brown-out Voltage bits
  3435                           ;	BORV = 0x3, unprogrammed default
  3436  300002                     	org	3145730
  3437  300002  1F                 	db	31
  3438                           
  3439                           ;Config register CONFIG2H @ 0x300003
  3440                           ;	Watchdog Timer
  3441                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3442                           ;	Watchdog Timer Postscale Select bits
  3443                           ;	WDTPS = 0xF, unprogrammed default
  3444  300003                     	org	3145731
  3445  300003  1E                 	db	30
  3446                           
  3447                           ;Config register CONFIG3L @ 0x300004
  3448                           ;	unspecified, using default values
  3449                           ;	Processor Data Memory Mode Select bits
  3450                           ;	MODE = 0x3, unprogrammed default
  3451                           ;	Address Bus Width Select bits
  3452                           ;	ADDRBW = 0x3, unprogrammed default
  3453                           ;	Data Bus Width Select bit
  3454                           ;	DATABW = 0x1, unprogrammed default
  3455                           ;	External Bus Data Wait Enable bit
  3456                           ;	WAIT = 0x1, unprogrammed default
  3457  300004                     	org	3145732
  3458  300004  F3                 	db	243
  3459                           
  3460                           ;Config register CONFIG3H @ 0x300005
  3461                           ;	unspecified, using default values
  3462                           ;	CCP2 MUX bit
  3463                           ;	CCP2MX = 0x1, unprogrammed default
  3464                           ;	ECCP MUX bit
  3465                           ;	ECCPMX = 0x1, unprogrammed default
  3466                           ;	Low-Power Timer1 Oscillator Enable bit
  3467                           ;	LPT1OSC = 0x0, unprogrammed default
  3468                           ;	MCLR Pin Enable bit
  3469                           ;	MCLRE = 0x1, unprogrammed default
  3470  300005                     	org	3145733
  3471  300005  83                 	db	131
  3472                           
  3473                           ;Config register CONFIG4L @ 0x300006
  3474                           ;	unspecified, using default values
  3475                           ;	Stack Full/Underflow Reset Enable bit
  3476                           ;	STVREN = 0x1, unprogrammed default
  3477                           ;	Single-Supply ICSP Enable bit
  3478                           ;	LVP = 0x1, unprogrammed default
  3479                           ;	Boot Block Size Select bits
  3480                           ;	BBSIZ = 0x0, unprogrammed default
  3481                           ;	Extended Instruction Set Enable bit
  3482                           ;	XINST = 0x0, unprogrammed default
  3483                           ;	Background Debugger Enable bit
  3484                           ;	DEBUG = 0x1, unprogrammed default
  3485  300006                     	org	3145734
  3486  300006  85                 	db	133
  3487                           
  3488                           ; Padding undefined space
  3489  300007                     	org	3145735
  3490  300007  FF                 	db	255
  3491                           
  3492                           ;Config register CONFIG5L @ 0x300008
  3493                           ;	unspecified, using default values
  3494                           ;	Code Protection bit Block 0
  3495                           ;	CP0 = 0x1, unprogrammed default
  3496                           ;	Code Protection bit Block 1
  3497                           ;	CP1 = 0x1, unprogrammed default
  3498                           ;	Code Protection bit Block 2
  3499                           ;	CP2 = 0x1, unprogrammed default
  3500                           ;	Code Protection bit Block 3
  3501                           ;	CP3 = 0x1, unprogrammed default
  3502                           ;	Code Protection bit Block 4
  3503                           ;	CP4 = 0x1, unprogrammed default
  3504                           ;	Code Protection bit Block 5
  3505                           ;	CP5 = 0x1, unprogrammed default
  3506                           ;	Code Protection bit Block 6
  3507                           ;	CP6 = 0x1, unprogrammed default
  3508                           ;	Code Protection bit Block 7
  3509                           ;	CP7 = 0x1, unprogrammed default
  3510  300008                     	org	3145736
  3511  300008  FF                 	db	255
  3512                           
  3513                           ;Config register CONFIG5H @ 0x300009
  3514                           ;	unspecified, using default values
  3515                           ;	Boot Block Code Protection bit
  3516                           ;	CPB = 0x1, unprogrammed default
  3517                           ;	Data EEPROM Code Protection bit
  3518                           ;	CPD = 0x1, unprogrammed default
  3519  300009                     	org	3145737
  3520  300009  C0                 	db	192
  3521                           
  3522                           ;Config register CONFIG6L @ 0x30000A
  3523                           ;	unspecified, using default values
  3524                           ;	Write Protection bit Block 0
  3525                           ;	WRT0 = 0x1, unprogrammed default
  3526                           ;	Write Protection bit Block 1
  3527                           ;	WRT1 = 0x1, unprogrammed default
  3528                           ;	Write Protection bit Block 2
  3529                           ;	WRT2 = 0x1, unprogrammed default
  3530                           ;	Write Protection bit Block 3
  3531                           ;	WRT3 = 0x1, unprogrammed default
  3532                           ;	Write Protection bit Block 4
  3533                           ;	WRT4 = 0x1, unprogrammed default
  3534                           ;	Write Protection bit Block 5
  3535                           ;	WRT5 = 0x1, unprogrammed default
  3536                           ;	Write Protection bit Block 6
  3537                           ;	WRT6 = 0x1, unprogrammed default
  3538                           ;	Write Protection bit Block 7
  3539                           ;	WRT7 = 0x1, unprogrammed default
  3540  30000A                     	org	3145738
  3541  30000A  FF                 	db	255
  3542                           
  3543                           ;Config register CONFIG6H @ 0x30000B
  3544                           ;	unspecified, using default values
  3545                           ;	Configuration Register Write Protection bit
  3546                           ;	WRTC = 0x1, unprogrammed default
  3547                           ;	Boot Block Write Protection bit
  3548                           ;	WRTB = 0x1, unprogrammed default
  3549                           ;	Data EEPROM Write Protection bit
  3550                           ;	WRTD = 0x1, unprogrammed default
  3551  30000B                     	org	3145739
  3552  30000B  E0                 	db	224
  3553                           
  3554                           ;Config register CONFIG7L @ 0x30000C
  3555                           ;	unspecified, using default values
  3556                           ;	Table Read Protection bit Block 0
  3557                           ;	EBTR0 = 0x1, unprogrammed default
  3558                           ;	Table Read Protection bit Block 1
  3559                           ;	EBTR1 = 0x1, unprogrammed default
  3560                           ;	Table Read Protection bit Block 2
  3561                           ;	EBTR2 = 0x1, unprogrammed default
  3562                           ;	Table Read Protection bit Block 3
  3563                           ;	EBTR3 = 0x1, unprogrammed default
  3564                           ;	Table Read Protection bit Block 4
  3565                           ;	EBTR4 = 0x1, unprogrammed default
  3566                           ;	Table Read Protection bit Block 5
  3567                           ;	EBTR5 = 0x1, unprogrammed default
  3568                           ;	Table Read Protection bit Block 6
  3569                           ;	EBTR6 = 0x1, unprogrammed default
  3570                           ;	Table Read Protection bit Block 7
  3571                           ;	EBTR7 = 0x1, unprogrammed default
  3572  30000C                     	org	3145740
  3573  30000C  FF                 	db	255
  3574                           
  3575                           ;Config register CONFIG7H @ 0x30000D
  3576                           ;	unspecified, using default values
  3577                           ;	Boot Block Table Read Protection bit
  3578                           ;	EBTRB = 0x1, unprogrammed default
  3579  30000D                     	org	3145741
  3580  30000D  40                 	db	64
  3581                           tosu	equ	0xFFF
  3582                           tosh	equ	0xFFE
  3583                           tosl	equ	0xFFD
  3584                           stkptr	equ	0xFFC
  3585                           pclatu	equ	0xFFB
  3586                           pclath	equ	0xFFA
  3587                           pcl	equ	0xFF9
  3588                           tblptru	equ	0xFF8
  3589                           tblptrh	equ	0xFF7
  3590                           tblptrl	equ	0xFF6
  3591                           tablat	equ	0xFF5
  3592                           prodh	equ	0xFF4
  3593                           prodl	equ	0xFF3
  3594                           indf0	equ	0xFEF
  3595                           postinc0	equ	0xFEE
  3596                           postdec0	equ	0xFED
  3597                           preinc0	equ	0xFEC
  3598                           plusw0	equ	0xFEB
  3599                           fsr0h	equ	0xFEA
  3600                           fsr0l	equ	0xFE9
  3601                           wreg	equ	0xFE8
  3602                           indf1	equ	0xFE7
  3603                           postinc1	equ	0xFE6
  3604                           postdec1	equ	0xFE5
  3605                           preinc1	equ	0xFE4
  3606                           plusw1	equ	0xFE3
  3607                           fsr1h	equ	0xFE2
  3608                           fsr1l	equ	0xFE1
  3609                           bsr	equ	0xFE0
  3610                           indf2	equ	0xFDF
  3611                           postinc2	equ	0xFDE
  3612                           postdec2	equ	0xFDD
  3613                           preinc2	equ	0xFDC
  3614                           plusw2	equ	0xFDB
  3615                           fsr2h	equ	0xFDA
  3616                           fsr2l	equ	0xFD9
  3617                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         13
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_game_task
    _sevenSeg_controller->___awmod
    _game_task->_randomgen
    _randomgen->___awmod

Critical Paths under _lowPriorityISR in COMRAM

    None.

Critical Paths under _highPriorityISR in COMRAM

    _highPriorityISR->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _lowPriorityISR in BANK0

    None.

Critical Paths under _highPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lowPriorityISR in BANK1

    None.

Critical Paths under _highPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lowPriorityISR in BANK2

    None.

Critical Paths under _highPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lowPriorityISR in BANK3

    None.

Critical Paths under _highPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lowPriorityISR in BANK4

    None.

Critical Paths under _highPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lowPriorityISR in BANK5

    None.

Critical Paths under _highPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lowPriorityISR in BANK6

    None.

Critical Paths under _highPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lowPriorityISR in BANK7

    None.

Critical Paths under _highPriorityISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lowPriorityISR in BANK8

    None.

Critical Paths under _highPriorityISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lowPriorityISR in BANK9

    None.

Critical Paths under _highPriorityISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lowPriorityISR in BANK10

    None.

Critical Paths under _highPriorityISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lowPriorityISR in BANK11

    None.

Critical Paths under _highPriorityISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lowPriorityISR in BANK12

    None.

Critical Paths under _highPriorityISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lowPriorityISR in BANK13

    None.

Critical Paths under _highPriorityISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lowPriorityISR in BANK14

    None.

Critical Paths under _highPriorityISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lowPriorityISR in BANK15

    None.

Critical Paths under _highPriorityISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3676
                          _game_task
                           _init_irq
                         _init_ports
                          _init_vars
                         _input_task
                _sevenSeg_controller
                           _tmr_init
 ---------------------------------------------------------------------------------
 (1) _tmr_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sevenSeg_controller                                  2     2      0    2340
                                             13 COMRAM     2     2      0
                            ___awmod
                           _sevenSeg
 ---------------------------------------------------------------------------------
 (2) _sevenSeg                                             4     3      1    1488
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _input_task                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_vars                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_irq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _game_task                                            3     3      0    1336
                                             19 COMRAM     3     3      0
                   _health_decreaser
                          _randomgen
                         _reset_task
                      _shape_shifter
                          _tmr_start
 ---------------------------------------------------------------------------------
 (2) _tmr_start                                            1     1      0      15
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _shape_shifter                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _reset_task                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _randomgen                                            6     6      0    1293
                                             13 COMRAM     6     6      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     852
                                              7 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _health_decreaser                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _lowPriorityISR                                       1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _highPriorityISR                                      0     0      0     348
                            _tmr_isr
                          i2___awmod
 ---------------------------------------------------------------------------------
 (6) i2___awmod                                            6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _tmr_isr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _game_task
     _health_decreaser
     _randomgen
       ___awmod
     _reset_task
     _shape_shifter
     _tmr_start
   _init_irq
   _init_ports
   _init_vars
   _input_task
   _sevenSeg_controller
     ___awmod
     _sevenSeg
   _tmr_init

 _lowPriorityISR (ROOT)

 _highPriorityISR (ROOT)
   _tmr_isr
   i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      30       1       51.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30      32        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed May 11 16:22:00 2022

                          _L1 0030                            _L2 002F                            _L3 002E  
            randomgen@lastbit 0012                            bsr 000FE0              randomgen@noteval 0010  
                         l120 0CD2                           l200 042E                           l123 0C6C  
                         l203 0458                           l150 0866                           l142 0D34  
                         l126 0D86                           l206 0482                           l224 0618  
                         l209 04AC                           l162 0686                           l315 03D4  
                         l171 06C2                           l139 0D5E                           l252 0D1C  
                         l149 0826                           l181 0764                           l173 06EC  
                         l165 0670                           l159 0916                           l255 0D6C  
                         l271 00B4                           l183 0776                           l175 06FE  
                         l280 00EE                           l185 07A0                           l177 0728  
                         l169 06B0                           l249 0A72                           l193 03DA  
                         l274 00CA                           l259 0D4C                           l283 0100  
                         l179 073A                           l277 00DC                           l189 07B2  
                         l197 0404                           l573 0B22                           u200 067E  
                         u201 067A                           u210 0696                           u211 0692  
                         u300 074A                           u220 06A4                           u301 0746  
                         u221 06A0                           u150 0D48                           u310 0758  
                         u230 06BE                           u151 0D44                           u311 0754  
                         u231 06BA                           u320 0772                           u240 06D2  
                         u160 062A                           u321 076E                           u241 06CE  
                         u161 0626                           u330 0786                           u250 06E0  
                         u170 063A                           u331 0782                           u251 06DC  
                         u171 0636                           u340 0794                           u260 06FA  
                         u180 064A                           u341 0790                           u261 06F6  
                         u181 0646                           u350 07AE                           u270 070E  
                         u190 0658                           u351 07AA                           u271 070A  
                         u191 0654                           u280 071C                           u281 0718  
                         u290 0736                           u291 0732                           u900 0B12  
                         u901 0B0E                           u910 07C8                           u911 07C4  
                         u920 07E4                           u921 07E0                           u850 0A86  
                         u930 0826                           u851 0A82                           u931 0822  
                         u860 0AA0                           u940 083A                           u861 0A9C  
                         u941 0836                           u870 0ABA                           u950 0878  
                         u871 0AB6                           u951 0874                           u880 0AD8  
                         u960 08BE                           u881 0AD4                           u961 08BA  
                         u890 0AEE                           u970 08D0                           u891 0AEA  
                         u971 08CC                           u980 0916                           u981 0912  
                         u990 03E8                           u991 03E4                  ___awmod@sign 000D  
                         wreg 000FE8                          l1040 0D24                          l1200 061A  
                        l1042 0D28                          l1210 067E                          l1202 062A  
                        l1044 0D30                          l1220 06E0                          l1212 0696  
                        l1204 063A                          l2100 09A2                          l1046 0D32  
                        l1038 0D20                          l1230 074A                          l1222 06FA  
                        l1214 06A4                          l1206 064A                          l2102 0A4C  
                        l1160 0D04                          l2104 012E                          l1240 07AE  
                        l1232 0758                          l1224 070E                          l1216 06BE  
                        l1208 0658                          l1170 0D48                          l1162 0D18  
                        l2106 015C                          l1234 0772                          l1226 071C  
                        l1218 06D2                          l1164 0D60                          l2108 038E  
                        l1180 0CBA                          l1236 0786                          l1228 0736  
                        l2060 0BF0                          l2052 0BD4                          l1166 0D36  
                        l1190 0D7C                          l1182 0CBC                          l1238 0794  
                        l2070 0C10                          l2062 0BF4                          l2054 0BE4  
                        l1168 0D38                          l1600 0A86                          l1192 0D80  
                        l1184 0CBE                          l1176 0CA4                          l2072 0C24  
                        l2064 0BF8                          l2056 0BE8                          l1610 0ABA  
                        l1602 0A8E                          l1194 0D82                          l1186 0CC0  
                        l1178 0CB8                          l2066 0BFC                          l2058 0BEC  
                        l1620 0AF6                          l1612 0AC2                          l1604 0A92  
                        l1196 0D84                          l1188 0C30                          l1700 093E  
                        l2068 0C00                          l1622 0AFC                          l1614 0ACA  
                        l1606 0AA0                          l1710 0966                          l1702 0946  
                        l1198 0D4E                          l1616 0AD8                          l1624 0B02  
                        l1608 0AA8                          l1640 07D4                          l1632 07B4  
                        l1712 096E                          l1704 094E                          l1626 0B12  
                        l1618 0AEE                          l1650 080C                          l1642 07E4  
                        l1634 07C8                          l1810 0042                          l1802 002A  
                        l1730 0A30                          l1714 0976                          l1706 0956  
                        l1722 098E                          l2098 05D2                          l1628 0B1A  
                        l1660 0846                          l1652 0812                          l1644 07EA  
                        l1636 07D0                          l1900 01F8                          l1820 0068  
                        l1812 0052                          l1804 002E                          l1724 0A18  
                        l1716 097E                          l1708 095E                          l1670 0890  
                        l1662 084A                          l1654 0814                          l1646 0800  
                        l1638 07D0                          l1910 021E                          l1902 01FA  
                        l1830 008E                          l1822 006A                          l1814 0054  
                        l1806 003E                          l1726 0A20                          l1718 0986  
                        l1734 0A38                          l1750 0412                          l1680 08D8  
                        l1672 08AC                          l1664 0878                          l1656 082A  
                        l1648 0804                          l1920 0246                          l1912 0224  
                        l1904 020C                          l1840 00AC                          l1832 0090  
                        l1824 007A                          l1816 0056                          l1808 0040  
                        l1728 0A28                          l1760 0474                          l1752 0420  
                        l1744 03D6                          l1682 08E4                          l1666 0880  
                        l1674 08AE                          l1658 083A                          l1930 0278  
                        l1922 0248                          l1914 022C                          l1906 0210  
                        l1842 00C2                          l1834 0092                          l1826 007C  
                        l1818 0066                          l1690 091A                          l1770 04D6  
                        l1762 0490                          l1754 043C                          l1746 03E8  
                        l1596 0A74                          l1684 08E8                          l1668 088C  
                        l1676 08BE                          l1940 02A4                          l1932 0288  
                        l1924 0258                          l1916 022E                          l1908 021A  
                        l1836 00A2                          l1828 007E                          l1692 091E  
                        l1780 0548                          l1772 04FA                          l1764 049E  
                        l1756 044A                          l1748 03F6                          l1598 0A78  
                        l1686 0904                          l1678 08D0                          l1950 02CA  
                        l1942 02A6                          l1934 028C                          l1926 026C  
                        l1918 0236                          l1870 0178                          l1838 00A4  
                        l1694 0926                          l1790 05A2                          l1782 055E  
                        l1774 0508                          l1766 04BA                          l1758 0466  
                        l1688 0906                          l1960 02F2                          l1952 02D0  
                        l1944 02B8                          l1936 0290                          l1928 0274  
                        l1880 019A                          l1872 017C                          l1864 0112  
                        l1696 092E                          l1792 05B0                          l1784 056C  
                        l1776 052C                          l1768 04C8                          l1970 0324  
                        l1962 02F4                          l1954 02D8                          l1946 02BC  
                        l1938 02A0                          l1890 01CC                          l1882 019C  
                        l1874 0180                          l1866 016A                          l1698 0936  
                        l1786 0580                          l1778 053A                          l1980 0350  
                        l1972 0334                          l1964 0304                          l1956 02DA  
                        l1948 02C6                          l1892 01DC                          l1884 01AC  
                        l1876 0182                          l1868 0172                          l1788 058E  
                        l1796 05BE                          l1982 0352                          l1974 0338  
                        l1966 0318                          l1958 02E2                          l1894 01E0  
                        l1886 01C0                          l1878 018A                          l1984 0364  
                        l1976 033C                          l1968 0320                          l1896 01E4  
                        l1888 01C8                          l1986 0368                          l1978 034C  
                        l1898 01F4                          l1994 037A                          l1988 0372  
                        u1000 0412                          u1001 040E                          u1010 043C  
                        u1011 0438                          u1100 003E                          u1020 0466  
                        u1101 003A                          u1021 0462                          u1110 0052  
                        u1030 0490                          u1111 004E                          u1031 048C  
                        u1200 010E                          u1120 0066                          u1040 04BA  
                        u1201 010A                          u1121 0062                          u1041 04B6  
                        u1210 019A                          u1130 007A                          u1050 04FA  
                        u1211 0196                          u1131 0076                          u1051 04F6  
                        u1300 0288                          u1220 01AC                          u1140 008E  
                        u1060 052C                          u1301 0284                          u1221 01A8  
                        u1141 008A                          u1061 0528                          u1310 02A0  
                        u1230 01C0                          u1150 00A2                          u1070 055E  
                        u1311 029C                          u1231 01BC                          u1151 009E  
                        u1071 055A                          u1320 02B8                          u1240 01DC  
                        u1160 00C2                          u1080 0580                          u1321 02B4  
                        u1241 01D8                          u1161 00BE                          u1081 057C  
                        u1330 02F2                          u1250 01F4                          u1170 00D8  
                        u1090 05A2                          u1331 02EE                          u1251 01F0  
                        u1171 00D4                          u1091 059E                          u1340 0304  
                        u1260 020C                          u1180 00EA                          u1341 0300  
                        u1261 0208                          u1181 00E6                          u1350 0318  
                        u1270 0246                          u1190 00FC                          u1351 0314  
                        u1271 0242                          u1191 00F8                          u1360 0334  
                        u1280 0258                          u1361 0330                          u1281 0254  
                        u1370 034C                          u1290 026C                          u1371 0348  
                        u1291 0268                          u1380 0364                          u1460 0C10  
                        u1381 0360                          u1461 0C0C                          u1470 0C20  
                        u1471 0C1C                          i1l73 001E                          i2l68 0D00  
                        _TMR0 000FD6                  _tmr_startreq 0018                  _starterDelay 001E  
                        _main 0BD4                          fsr1l 000FE1                          btemp 0031  
          randomgen@intermbit 0013                          start 0026                  ___param_bank 000000  
                       ?_main 0001               __end_of___awmod 0B24                         _T0CON 000FD5  
                       _T1CON 000FCD                         i2l136 0D7A                         i2l573 0BD2  
                       _TMR1H 000FCF                         _TMR1L 000FCE                         _PORTA 000F80  
             _sevenSegCounter 0022                         _PORTB 000F81                         _PORTC 000F82  
                       _PORTD 000F83                         _PORTE 000F84                         _PORTF 000F85  
                       _PORTH 000F87                         _PORTJ 000F88                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
                       _TRISE 000F96                         _TRISF 000F97                         _TRISG 000F98  
                       _TRISH 000F99                         _TRISJ 000F9A                         _level 002B  
                       tablat 000FF5               __end_of_tmr_isr 0D7C                         ttemp5 0032  
                       ttemp6 0035                         ttemp7 0039                         status 000FD8  
                       wtemp8 0032            __size_ofi2___awmod 00B0                _lowPriorityISR 0018  
             __initialization 0C6E                  __end_of_main 0C30                _tmr_ticks_left 0017  
       __end_of_shape_shifter 0D1E                        ??_main 0017                 __activetblptr 000003  
    __size_of_highPriorityISR 0CFC                        i2l2010 0B28                        i2l2020 0B58  
                      i2l2012 0B36                        i2l2030 0B9E                        i2l2022 0B6A  
                      i2l2014 0B3E                        i2l2040 0BCA                        i2l2032 0BA6  
                      i2l2024 0B72                        i2l2016 0B42                        i2l2008 0B24  
                      i2l2034 0BAC                        i2l2026 0B7A                        i2l2018 0B50  
                      i2l2050 0CEA                        i2l1172 0D6E                        i2l2028 0B88  
                      i2l2036 0BB2                        i2l2044 0CD6                        i2l1174 0D76  
                      i2l2038 0BC2                        i2l2046 0CE4                        i2l2048 0CE8  
                      _INTCON 000FF2        __end_of_lowPriorityISR 0026     __size_of_health_decreaser 0018  
                   ??___awmod 000C                        _health 002C              __end_of_init_irq 0D88  
                _isRC0Pressed 0020                        clear_0 0C94               ___awmod@divisor 000A  
             ___awmod@counter 000C                  __pdataCOMRAM 002D             __end_ofi2___awmod 0BD4  
            __end_of_sevenSeg 0A74                  _isRG0Pressed 0029                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                  _isRG1Pressed 0028  
                _isRG2Pressed 0027              __end_of_tmr_init 0D60                  _isRG3Pressed 0026  
              i2___awmod@sign 0006                     ??_tmr_isr 0001                  _isRG4Pressed 0025  
                  __accesstop 0060       __end_of__initialization 0C9A   __end_of_sevenSeg_controller 061A  
             ?_lowPriorityISR 0001                 ___rparam_used 000001                __pcstackCOMRAM 0001  
              game_task@count 0016            __size_of_game_task 03AC                    __pnvCOMRAM 0024  
          __size_of_init_vars 0030             ??_highPriorityISR 0007                    _game_level 002D  
          __size_of_randomgen 0164                    _game_state 001B            __size_of_tmr_start 0018  
                   ?_init_irq 0001             __end_of_game_task 03D6                       __Hparam 0000  
                     __Lparam 0000                     ?_sevenSeg 0008              _health_decreaser 0D36  
                     ___awmod 0A74                     ?_tmr_init 0001                       __pcinit 0C6E  
                  _init_ports 0C30                       __ramtop 1000                       __ptext0 0BD4  
                     __ptext1 0D4E                       __ptext2 03D6                       __ptext3 0918  
                     __ptext4 061A                       __ptext5 0CA4                       __ptext6 0C30  
                     __ptext7 0D7C                       __ptext8 002A                       __ptext9 0D1E  
           __end_of_init_vars 0CD4              ___awmod@dividend 0008                       _htmrval 001C  
                     _ltmrval 0023                       _whichRG 0024                       _tmr_isr 0D6E  
                  _input_task 061A             __end_of_randomgen 0918                __pintcode_body 0CD4  
        end_of_initialization 0C9A                       int_func 0CD4                    ??_init_irq 0008  
                  _reset_task 0D60                    ??_sevenSeg 0009                       postdec1 000FE5  
                     postinc0 000FEE                    ??_tmr_init 0008             __end_of_tmr_start 0D36  
                   _PORTCbits 000F82                     _PORTFbits 000F85                     _PORTGbits 000F86  
              _isGameFinished 0021                     i2___awmod 0B24              ??_lowPriorityISR 0007  
      __size_of_shape_shifter 001A                 __pidataCOMRAM 0D88                   ?_init_ports 0001  
         start_initialization 0C6E                   ?_input_task 0001               _highPriorityISR 0008  
                  ?i2___awmod 0001                   ?_reset_task 0001  __size_of_sevenSeg_controller 0244  
               _shape_shifter 0D04                  randomgen@val 000F                  randomgen@num 0011  
                 __pbssCOMRAM 0017      __end_of_health_decreaser 0D4E           __size_of_init_ports 003E  
                  randomgen@i 000E             __size_of_init_irq 000C                     _game_task 002A  
                   __pintcode 0008                      ?___awmod 0008           __size_of_input_task 019A  
           __size_of_sevenSeg 015C                   __pintcodelo 0018             __size_of_tmr_init 0012  
              ?_shape_shifter 0001                _level_subcount 001A       __end_of_highPriorityISR 0D04  
                   _isPressed 001F           __size_of_reset_task 000E                      ?_tmr_isr 0001  
                 ??i2___awmod 0005                     _init_vars 0CA4                     _randomgen 07B4  
                    i2u140_40 0B50                      i2u140_41 0B4C                      i2u141_40 0B6A  
                    i2u141_41 0B66                      i2u142_40 0B88                      i2u142_41 0B84  
                    i2u143_40 0B9E                      i2u143_41 0B9A                      i2u144_40 0BC2  
                    i2u144_41 0BBE                      i2u145_40 0CE4                      i2u145_41 0CE0  
                    i2u139_40 0B36                      i2u139_41 0B32                    ?_game_task 0001  
                    _RCONbits 000FD0                     _tmr_state 0019                     _tmr_start 0D1E  
               _isGameStarted 002A                    ?_init_vars 0001                     copy_data0 0C82  
          i2___awmod@dividend 0001                    ?_randomgen 0001                      __Hrparam 0000  
                    __Lrparam 0000              __size_of___awmod 00B0               ??_shape_shifter 0008  
                ??_init_ports 0008                    ?_tmr_start 0001              ?_highPriorityISR 0001  
                ??_input_task 0008                      __ptext10 0D04                      __ptext11 0D60  
                    __ptext12 07B4                      __ptext13 0A74                      __ptext14 0D36  
                    __ptext17 0B24                      __ptext18 0D6E           _sevenSeg_controller 03D6  
            __size_of_tmr_isr 000E                 __size_of_main 005C                      _init_irq 0D7C  
          __end_of_init_ports 0C6E                     sevenSeg@D 0008                     sevenSeg@J 000B  
                    _tmr1flag 001D                  ??_reset_task 0008                   ??_game_task 0014  
                    _sevenSeg 0918          ?_sevenSeg_controller 0001                      int$flags 0031  
                    _tmr_init 0D4E            __end_of_input_task 07B4             i2___awmod@divisor 0003  
           i2___awmod@counter 0005                    _INTCONbits 000FF2            __end_of_reset_task 0D6E  
                 ??_init_vars 0008                tmr_start@ticks 0008             ?_health_decreaser 0001  
                    intlevel1 0000                      intlevel2 0000                   ??_randomgen 000E  
          ??_health_decreaser 0008       __size_of_lowPriorityISR 000E         ??_sevenSeg_controller 000E  
                 ??_tmr_start 0008  
