

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed May 11 22:39:22 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F8722 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  000CCC                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _L3
    75  000CCC  0F                 	db	15
    76                           
    77                           ;initializer for _L2
    78  000CCD  0A                 	db	10
    79                           
    80                           ;initializer for _L1
    81  000CCE  05                 	db	5
    82                           
    83                           	psect	nvCOMRAM
    84  00001E                     __pnvCOMRAM:
    85                           	callstack 0
    86  00001E                     _game_level:
    87                           	callstack 0
    88  00001E                     	ds	1
    89  00001F                     _whichRG:
    90                           	callstack 0
    91  00001F                     	ds	1
    92  000020                     _isRG4Pressed:
    93                           	callstack 0
    94  000020                     	ds	1
    95  000021                     _isRG3Pressed:
    96                           	callstack 0
    97  000021                     	ds	1
    98  000022                     _isRG2Pressed:
    99                           	callstack 0
   100  000022                     	ds	1
   101  000023                     _isRG1Pressed:
   102                           	callstack 0
   103  000023                     	ds	1
   104  000024                     _isRG0Pressed:
   105                           	callstack 0
   106  000024                     	ds	1
   107  000025                     _level:
   108                           	callstack 0
   109  000025                     	ds	1
   110  000026                     _health:
   111                           	callstack 0
   112  000026                     	ds	1
   113  0000                     _TMR0	set	4054
   114  0000                     _PORTFbits	set	3973
   115  0000                     _LATC	set	3979
   116  0000                     _PORTGbits	set	3974
   117  0000                     _PORTC	set	3970
   118  0000                     _PORTCbits	set	3970
   119  0000                     _TMR1H	set	4047
   120  0000                     _TMR1L	set	4046
   121  0000                     _T0CON	set	4053
   122  0000                     _INTCON	set	4082
   123  0000                     _T1CON	set	4045
   124  0000                     _PORTJ	set	3976
   125  0000                     _PORTH	set	3975
   126  0000                     _PORTF	set	3973
   127  0000                     _PORTE	set	3972
   128  0000                     _PORTD	set	3971
   129  0000                     _PORTB	set	3969
   130  0000                     _PORTA	set	3968
   131  0000                     _TRISJ	set	3994
   132  0000                     _TRISH	set	3993
   133  0000                     _TRISG	set	3992
   134  0000                     _TRISF	set	3991
   135  0000                     _TRISE	set	3990
   136  0000                     _TRISD	set	3989
   137  0000                     _TRISC	set	3988
   138  0000                     _TRISB	set	3987
   139  0000                     _TRISA	set	3986
   140  0000                     _ADCON1	set	4033
   141  0000                     _INTCONbits	set	4082
   142                           
   143                           ; #config settings
   144                           
   145                           	psect	cinit
   146  000C2C                     __pcinit:
   147                           	callstack 0
   148  000C2C                     start_initialization:
   149                           	callstack 0
   150  000C2C                     __initialization:
   151                           	callstack 0
   152                           
   153                           ; Initialize objects allocated to COMRAM (3 bytes)
   154                           ; load TBLPTR registers with __pidataCOMRAM
   155  000C2C  0ECC               	movlw	low __pidataCOMRAM
   156  000C2E  6EF6               	movwf	tblptrl,c
   157  000C30  0E0C               	movlw	high __pidataCOMRAM
   158  000C32  6EF7               	movwf	tblptrh,c
   159  000C34  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   160  000C36  6EF8               	movwf	tblptru,c
   161  000C38  0009               	tblrd		*+	;fetch initializer
   162  000C3A  CFF5 F027          	movff	tablat,__pdataCOMRAM
   163  000C3E  0009               	tblrd		*+	;fetch initializer
   164  000C40  CFF5 F028          	movff	tablat,__pdataCOMRAM+1
   165  000C44  0009               	tblrd		*+	;fetch initializer
   166  000C46  CFF5 F029          	movff	tablat,__pdataCOMRAM+2
   167                           
   168                           ; Clear objects allocated to COMRAM (18 bytes)
   169  000C4A  EE00  F001         	lfsr	0,__pbssCOMRAM
   170  000C4E  0E12               	movlw	18
   171  000C50                     clear_0:
   172  000C50  6AEE               	clrf	postinc0,c
   173  000C52  06E8               	decf	wreg,f,c
   174  000C54  E1FD               	bnz	clear_0
   175  000C56                     end_of_initialization:
   176                           	callstack 0
   177  000C56                     __end_of__initialization:
   178                           	callstack 0
   179  000C56  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   180  000C58  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   181  000C5A  0100               	movlb	0
   182  000C5C  EFF2  F005         	goto	_main	;jump to C main() function
   183                           
   184                           	psect	bssCOMRAM
   185  000001                     __pbssCOMRAM:
   186                           	callstack 0
   187  000001                     _tmr_ticks_left:
   188                           	callstack 0
   189  000001                     	ds	1
   190  000002                     _tmr_startreq:
   191                           	callstack 0
   192  000002                     	ds	1
   193  000003                     _tmr_state:
   194                           	callstack 0
   195  000003                     	ds	1
   196  000004                     _level_subcount:
   197                           	callstack 0
   198  000004                     	ds	1
   199  000005                     _game_state:
   200                           	callstack 0
   201  000005                     	ds	1
   202  000006                     _tmr1flag:
   203                           	callstack 0
   204  000006                     	ds	1
   205  000007                     _starterDelay:
   206                           	callstack 0
   207  000007                     	ds	1
   208  000008                     _isPressed:
   209                           	callstack 0
   210  000008                     	ds	1
   211  000009                     _isRC0Pressed:
   212                           	callstack 0
   213  000009                     	ds	1
   214  00000A                     _isGameFinished:
   215                           	callstack 0
   216  00000A                     	ds	1
   217  00000B                     _isGameStarted:
   218                           	callstack 0
   219  00000B                     	ds	1
   220  00000C                     _temp_shift:
   221                           	callstack 0
   222  00000C                     	ds	1
   223  00000D                     _sevenSeg4WayCounter:
   224                           	callstack 0
   225  00000D                     	ds	1
   226  00000E                     _sevenSeg3WayCounter:
   227                           	callstack 0
   228  00000E                     	ds	1
   229  00000F                     _sevenSeg2WayCounter:
   230                           	callstack 0
   231  00000F                     	ds	1
   232  000010                     _sevenSegCounter:
   233                           	callstack 0
   234  000010                     	ds	1
   235  000011                     _htmrval:
   236                           	callstack 0
   237  000011                     	ds	1
   238  000012                     _ltmrval:
   239                           	callstack 0
   240  000012                     	ds	1
   241                           
   242                           	psect	dataCOMRAM
   243  000027                     __pdataCOMRAM:
   244                           	callstack 0
   245  000027                     _L3:
   246                           	callstack 0
   247  000027                     	ds	1
   248  000028                     _L2:
   249                           	callstack 0
   250  000028                     	ds	1
   251  000029                     _L1:
   252                           	callstack 0
   253  000029                     	ds	1
   254                           
   255                           	psect	cstackCOMRAM
   256  000013                     __pcstackCOMRAM:
   257                           	callstack 0
   258  000013                     ??_lowPriorityISR:
   259  000013                     
   260                           ; 1 bytes @ 0x0
   261  000013                     	ds	1
   262  000014                     ??_randomgen:
   263  000014                     tmr_start@ticks:
   264                           	callstack 0
   265  000014                     sevenSeg@D:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0x1
   269  000014                     	ds	1
   270  000015                     ??_sevenSeg:
   271                           
   272                           ; 1 bytes @ 0x2
   273  000015                     	ds	1
   274  000016                     randomgen@val:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x3
   278  000016                     	ds	1
   279  000017                     randomgen@num:
   280                           	callstack 0
   281  000017                     sevenSeg@J:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x4
   285  000017                     	ds	1
   286  000018                     ??_sevenSeg_controller:
   287  000018                     randomgen@noteval:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x5
   291  000018                     	ds	1
   292  000019                     randomgen@lastbit:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x6
   296  000019                     	ds	1
   297  00001A                     randomgen@intermbit:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x7
   301  00001A                     	ds	1
   302  00001B                     ??_game_task:
   303                           
   304                           ; 1 bytes @ 0x8
   305  00001B                     	ds	2
   306  00001D                     game_task@count:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0xA
   310  00001D                     	ds	1
   311  00001E                     
   312                           ; 1 bytes @ 0xB
   313 ;;
   314 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   315 ;;
   316 ;; *************** function _main *****************
   317 ;; Defined at:
   318 ;;		line 756 in file "newmain.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, status,2, status,0, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   336 ;;Total ram usage:        0 bytes
   337 ;; Hardware stack levels required when called:    6
   338 ;; This function calls:
   339 ;;		_game_task
   340 ;;		_init_irq
   341 ;;		_init_ports
   342 ;;		_init_vars
   343 ;;		_input_task
   344 ;;		_sevenSeg_controller
   345 ;;		_tmr_init
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text0
   352  000BE4                     __ptext0:
   353                           	callstack 0
   354  000BE4                     _main:
   355                           	callstack 25
   356  000BE4                     
   357                           ;newmain.c: 758:     init_vars();
   358  000BE4  ECA5  F005         	call	_init_vars	;wreg free
   359                           
   360                           ;newmain.c: 759:     init_ports();
   361  000BE8  ECCD  F005         	call	_init_ports	;wreg free
   362                           
   363                           ;newmain.c: 760:     tmr_init();
   364  000BEC  EC53  F006         	call	_tmr_init	;wreg free
   365                           
   366                           ;newmain.c: 761:     init_irq();
   367  000BF0  EC63  F006         	call	_init_irq	;wreg free
   368  000BF4                     l1701:
   369                           
   370                           ;newmain.c: 763:     {;newmain.c: 766:         input_task();
   371  000BF4  ECCE  F003         	call	_input_task	;wreg free
   372  000BF8                     
   373                           ;newmain.c: 767:         sevenSeg_controller();
   374  000BF8  ECEF  F001         	call	_sevenSeg_controller	;wreg free
   375  000BFC                     
   376                           ;newmain.c: 769:         if ((isGameStarted == 0) || (isGameFinished == 1))
   377  000BFC  500B               	movf	_isGameStarted^0,w,c
   378  000BFE  B4D8               	btfsc	status,2,c
   379  000C00  EF04  F006         	goto	u871
   380  000C04  EF06  F006         	goto	u870
   381  000C08                     u871:
   382  000C08  EFFA  F005         	goto	l1701
   383  000C0C                     u870:
   384  000C0C  040A               	decf	_isGameFinished^0,w,c
   385  000C0E  A4D8               	btfss	status,2,c
   386  000C10  EF0C  F006         	goto	u881
   387  000C14  EF0E  F006         	goto	u880
   388  000C18                     u881:
   389  000C18  EF10  F006         	goto	l1709
   390  000C1C                     u880:
   391  000C1C  EFFA  F005         	goto	l1701
   392  000C20                     l1709:
   393                           
   394                           ;newmain.c: 773:         game_task();
   395  000C20  EC15  F000         	call	_game_task	;wreg free
   396  000C24  EFFA  F005         	goto	l1701
   397  000C28  EF13  F000         	goto	start
   398  000C2C                     __end_of_main:
   399                           	callstack 0
   400                           
   401 ;; *************** function _tmr_init *****************
   402 ;; Defined at:
   403 ;;		line 155 in file "newmain.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, status,2
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels used:    1
   423 ;; Hardware stack levels required when called:    3
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text1
   432  000CA6                     __ptext1:
   433                           	callstack 0
   434  000CA6                     _tmr_init:
   435                           	callstack 27
   436  000CA6                     
   437                           ;newmain.c: 160:     INTCONbits.TMR0IF = 0;
   438  000CA6  0E47               	movlw	71
   439  000CA8  6ED5               	movwf	213,c	;volatile
   440                           
   441                           ;newmain.c: 161: 
   442  000CAA  0E00               	movlw	0
   443  000CAC  6ED7               	movwf	215,c	;volatile
   444  000CAE  0E00               	movlw	0
   445  000CB0  6ED6               	movwf	214,c	;volatile
   446                           
   447                           ;newmain.c: 162: }
   448  000CB2  0EC1               	movlw	193
   449  000CB4  6ECD               	movwf	205,c	;volatile
   450  000CB6  0012               	return		;funcret
   451  000CB8                     __end_of_tmr_init:
   452                           	callstack 0
   453                           
   454 ;; *************** function _sevenSeg_controller *****************
   455 ;; Defined at:
   456 ;;		line 371 in file "newmain.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, status,2, status,0, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;Total ram usage:        2 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; Hardware stack levels required when called:    4
   477 ;; This function calls:
   478 ;;		_sevenSeg
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text2
   485  0003DE                     __ptext2:
   486                           	callstack 0
   487  0003DE                     _sevenSeg_controller:
   488                           	callstack 26
   489  0003DE                     
   490                           ;newmain.c: 373:     switch (game_state)
   491  0003DE  EFCF  F002         	goto	l1693
   492  0003E2                     l1631:
   493                           
   494                           ;newmain.c: 376:         if (sevenSeg2WayCounter == 0)
   495  0003E2  500F               	movf	_sevenSeg2WayCounter^0,w,c
   496  0003E4  A4D8               	btfss	status,2,c
   497  0003E6  EFF7  F001         	goto	u761
   498  0003EA  EFF9  F001         	goto	u760
   499  0003EE                     u761:
   500  0003EE  EF00  F002         	goto	l1635
   501  0003F2                     u760:
   502  0003F2                     
   503                           ;newmain.c: 377:             sevenSeg(health, 0);
   504  0003F2  0E00               	movlw	0
   505  0003F4  6E14               	movwf	sevenSeg@D^0,c
   506  0003F6  5026               	movf	_health^0,w,c
   507  0003F8  EC9D  F004         	call	_sevenSeg
   508  0003FC  EFFC  F002         	goto	l242
   509  000400                     l1635:
   510                           
   511                           ;newmain.c: 379:             sevenSeg(game_level, 3);
   512  000400  0E03               	movlw	3
   513  000402  6E14               	movwf	sevenSeg@D^0,c
   514  000404  501E               	movf	_game_level^0,w,c
   515  000406  EC9D  F004         	call	_sevenSeg
   516  00040A  EFFC  F002         	goto	l242
   517  00040E                     l1637:
   518                           
   519                           ;newmain.c: 382:         if (sevenSeg2WayCounter == 0)
   520  00040E  500F               	movf	_sevenSeg2WayCounter^0,w,c
   521  000410  A4D8               	btfss	status,2,c
   522  000412  EF0D  F002         	goto	u771
   523  000416  EF0F  F002         	goto	u770
   524  00041A                     u771:
   525  00041A  EF16  F002         	goto	l1641
   526  00041E                     u770:
   527  00041E                     
   528                           ;newmain.c: 383:             sevenSeg(health, 0);
   529  00041E  0E00               	movlw	0
   530  000420  6E14               	movwf	sevenSeg@D^0,c
   531  000422  5026               	movf	_health^0,w,c
   532  000424  EC9D  F004         	call	_sevenSeg
   533  000428  EFFC  F002         	goto	l242
   534  00042C                     l1641:
   535                           
   536                           ;newmain.c: 385:             sevenSeg(game_level, 3);
   537  00042C  0E03               	movlw	3
   538  00042E  6E14               	movwf	sevenSeg@D^0,c
   539  000430  501E               	movf	_game_level^0,w,c
   540  000432  EC9D  F004         	call	_sevenSeg
   541  000436  EFFC  F002         	goto	l242
   542  00043A                     l1643:
   543                           
   544                           ;newmain.c: 388:         if (sevenSeg2WayCounter == 0)
   545  00043A  500F               	movf	_sevenSeg2WayCounter^0,w,c
   546  00043C  A4D8               	btfss	status,2,c
   547  00043E  EF23  F002         	goto	u781
   548  000442  EF25  F002         	goto	u780
   549  000446                     u781:
   550  000446  EF2C  F002         	goto	l1647
   551  00044A                     u780:
   552  00044A                     
   553                           ;newmain.c: 389:             sevenSeg(health, 0);
   554  00044A  0E00               	movlw	0
   555  00044C  6E14               	movwf	sevenSeg@D^0,c
   556  00044E  5026               	movf	_health^0,w,c
   557  000450  EC9D  F004         	call	_sevenSeg
   558  000454  EFFC  F002         	goto	l242
   559  000458                     l1647:
   560                           
   561                           ;newmain.c: 391:             sevenSeg(game_level, 3);
   562  000458  0E03               	movlw	3
   563  00045A  6E14               	movwf	sevenSeg@D^0,c
   564  00045C  501E               	movf	_game_level^0,w,c
   565  00045E  EC9D  F004         	call	_sevenSeg
   566  000462  EFFC  F002         	goto	l242
   567  000466                     l1649:
   568                           
   569                           ;newmain.c: 394:         if (sevenSeg2WayCounter == 0)
   570  000466  500F               	movf	_sevenSeg2WayCounter^0,w,c
   571  000468  A4D8               	btfss	status,2,c
   572  00046A  EF39  F002         	goto	u791
   573  00046E  EF3B  F002         	goto	u790
   574  000472                     u791:
   575  000472  EF42  F002         	goto	l1653
   576  000476                     u790:
   577  000476                     
   578                           ;newmain.c: 395:             sevenSeg(health, 0);
   579  000476  0E00               	movlw	0
   580  000478  6E14               	movwf	sevenSeg@D^0,c
   581  00047A  5026               	movf	_health^0,w,c
   582  00047C  EC9D  F004         	call	_sevenSeg
   583  000480  EFFC  F002         	goto	l242
   584  000484                     l1653:
   585                           
   586                           ;newmain.c: 397:             sevenSeg(game_level, 3);
   587  000484  0E03               	movlw	3
   588  000486  6E14               	movwf	sevenSeg@D^0,c
   589  000488  501E               	movf	_game_level^0,w,c
   590  00048A  EC9D  F004         	call	_sevenSeg
   591  00048E  EFFC  F002         	goto	l242
   592  000492                     l1655:
   593                           
   594                           ;newmain.c: 401:         if (sevenSeg2WayCounter == 0)
   595  000492  500F               	movf	_sevenSeg2WayCounter^0,w,c
   596  000494  A4D8               	btfss	status,2,c
   597  000496  EF4F  F002         	goto	u801
   598  00049A  EF51  F002         	goto	u800
   599  00049E                     u801:
   600  00049E  EF58  F002         	goto	l1659
   601  0004A2                     u800:
   602  0004A2                     
   603                           ;newmain.c: 402:             sevenSeg(health, 0);
   604  0004A2  0E00               	movlw	0
   605  0004A4  6E14               	movwf	sevenSeg@D^0,c
   606  0004A6  5026               	movf	_health^0,w,c
   607  0004A8  EC9D  F004         	call	_sevenSeg
   608  0004AC  EFFC  F002         	goto	l242
   609  0004B0                     l1659:
   610                           
   611                           ;newmain.c: 404:             sevenSeg(game_level, 3);
   612  0004B0  0E03               	movlw	3
   613  0004B2  6E14               	movwf	sevenSeg@D^0,c
   614  0004B4  501E               	movf	_game_level^0,w,c
   615  0004B6  EC9D  F004         	call	_sevenSeg
   616  0004BA  EFFC  F002         	goto	l242
   617  0004BE                     l1661:
   618                           
   619                           ;newmain.c: 407:         if (sevenSeg2WayCounter == 0)
   620  0004BE  500F               	movf	_sevenSeg2WayCounter^0,w,c
   621  0004C0  A4D8               	btfss	status,2,c
   622  0004C2  EF65  F002         	goto	u811
   623  0004C6  EF67  F002         	goto	u810
   624  0004CA                     u811:
   625  0004CA  EF6E  F002         	goto	l1665
   626  0004CE                     u810:
   627  0004CE                     
   628                           ;newmain.c: 408:             sevenSeg(health, 0);
   629  0004CE  0E00               	movlw	0
   630  0004D0  6E14               	movwf	sevenSeg@D^0,c
   631  0004D2  5026               	movf	_health^0,w,c
   632  0004D4  EC9D  F004         	call	_sevenSeg
   633  0004D8  EFFC  F002         	goto	l242
   634  0004DC                     l1665:
   635                           
   636                           ;newmain.c: 410:             sevenSeg(game_level, 3);
   637  0004DC  0E03               	movlw	3
   638  0004DE  6E14               	movwf	sevenSeg@D^0,c
   639  0004E0  501E               	movf	_game_level^0,w,c
   640  0004E2  EC9D  F004         	call	_sevenSeg
   641  0004E6  EFFC  F002         	goto	l242
   642  0004EA                     l1667:
   643                           
   644                           ;newmain.c: 413:         if (sevenSeg3WayCounter == 0)
   645  0004EA  500E               	movf	_sevenSeg3WayCounter^0,w,c
   646  0004EC  A4D8               	btfss	status,2,c
   647  0004EE  EF7B  F002         	goto	u821
   648  0004F2  EF7D  F002         	goto	u820
   649  0004F6                     u821:
   650  0004F6  EF84  F002         	goto	l1671
   651  0004FA                     u820:
   652  0004FA                     
   653                           ;newmain.c: 414:             sevenSeg(11, 0);
   654  0004FA  0E00               	movlw	0
   655  0004FC  6E14               	movwf	sevenSeg@D^0,c
   656  0004FE  0E0B               	movlw	11
   657  000500  EC9D  F004         	call	_sevenSeg
   658  000504  EFFC  F002         	goto	l242
   659  000508                     l1671:
   660  000508  040E               	decf	_sevenSeg3WayCounter^0,w,c
   661  00050A  A4D8               	btfss	status,2,c
   662  00050C  EF8A  F002         	goto	u831
   663  000510  EF8C  F002         	goto	u830
   664  000514                     u831:
   665  000514  EF93  F002         	goto	l1675
   666  000518                     u830:
   667  000518                     
   668                           ;newmain.c: 416:             sevenSeg(12, 1);
   669  000518  0E01               	movlw	1
   670  00051A  6E14               	movwf	sevenSeg@D^0,c
   671  00051C  0E0C               	movlw	12
   672  00051E  EC9D  F004         	call	_sevenSeg
   673  000522  EFFC  F002         	goto	l242
   674  000526                     l1675:
   675                           
   676                           ;newmain.c: 418:             sevenSeg(13, 2);
   677  000526  0E02               	movlw	2
   678  000528  6E14               	movwf	sevenSeg@D^0,c
   679  00052A  0E0D               	movlw	13
   680  00052C  EC9D  F004         	call	_sevenSeg
   681  000530  EFFC  F002         	goto	l242
   682  000534                     l1677:
   683                           
   684                           ;newmain.c: 421:         if (sevenSeg4WayCounter == 0)
   685  000534  500D               	movf	_sevenSeg4WayCounter^0,w,c
   686  000536  A4D8               	btfss	status,2,c
   687  000538  EFA0  F002         	goto	u841
   688  00053C  EFA2  F002         	goto	u840
   689  000540                     u841:
   690  000540  EFA9  F002         	goto	l1681
   691  000544                     u840:
   692  000544                     
   693                           ;newmain.c: 422:             sevenSeg(10, 0);
   694  000544  0E00               	movlw	0
   695  000546  6E14               	movwf	sevenSeg@D^0,c
   696  000548  0E0A               	movlw	10
   697  00054A  EC9D  F004         	call	_sevenSeg
   698  00054E  EFFC  F002         	goto	l242
   699  000552                     l1681:
   700  000552  040D               	decf	_sevenSeg4WayCounter^0,w,c
   701  000554  A4D8               	btfss	status,2,c
   702  000556  EFAF  F002         	goto	u851
   703  00055A  EFB1  F002         	goto	u850
   704  00055E                     u851:
   705  00055E  EFB8  F002         	goto	l1685
   706  000562                     u850:
   707  000562                     
   708                           ;newmain.c: 424:             sevenSeg(0, 1);
   709  000562  0E01               	movlw	1
   710  000564  6E14               	movwf	sevenSeg@D^0,c
   711  000566  0E00               	movlw	0
   712  000568  EC9D  F004         	call	_sevenSeg
   713  00056C  EFFC  F002         	goto	l242
   714  000570                     l1685:
   715  000570  0E02               	movlw	2
   716  000572  180D               	xorwf	_sevenSeg4WayCounter^0,w,c
   717  000574  A4D8               	btfss	status,2,c
   718  000576  EFBF  F002         	goto	u861
   719  00057A  EFC1  F002         	goto	u860
   720  00057E                     u861:
   721  00057E  EFC8  F002         	goto	l1689
   722  000582                     u860:
   723  000582                     
   724                           ;newmain.c: 426:             sevenSeg(5, 2);
   725  000582  0E02               	movlw	2
   726  000584  6E14               	movwf	sevenSeg@D^0,c
   727  000586  0E05               	movlw	5
   728  000588  EC9D  F004         	call	_sevenSeg
   729  00058C  EFFC  F002         	goto	l242
   730  000590                     l1689:
   731                           
   732                           ;newmain.c: 428:             sevenSeg(11, 3);
   733  000590  0E03               	movlw	3
   734  000592  6E14               	movwf	sevenSeg@D^0,c
   735  000594  0E0B               	movlw	11
   736  000596  EC9D  F004         	call	_sevenSeg
   737  00059A  EFFC  F002         	goto	l242
   738  00059E                     l1693:
   739  00059E  5005               	movf	_game_state^0,w,c
   740  0005A0  6E18               	movwf	??_sevenSeg_controller^0,c
   741  0005A2  6A19               	clrf	(??_sevenSeg_controller+1)^0,c
   742                           
   743                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   744                           ; Switch size 1, requested type "simple"
   745                           ; Number of cases is 1, Range of values is 0 to 0
   746                           ; switch strategies available:
   747                           ; Name         Instructions Cycles
   748                           ; simple_byte            4     3 (average)
   749                           ;	Chosen strategy is simple_byte
   750  0005A4  5019               	movf	(??_sevenSeg_controller+1)^0,w,c
   751  0005A6  0A00               	xorlw	0	; case 0
   752  0005A8  B4D8               	btfsc	status,2,c
   753  0005AA  EFD9  F002         	goto	l1739
   754  0005AE  EFFC  F002         	goto	l242
   755  0005B2                     l1739:
   756                           
   757                           ; Switch size 1, requested type "simple"
   758                           ; Number of cases is 8, Range of values is 0 to 7
   759                           ; switch strategies available:
   760                           ; Name         Instructions Cycles
   761                           ; simple_byte           25    13 (average)
   762                           ;	Chosen strategy is simple_byte
   763  0005B2  5018               	movf	??_sevenSeg_controller^0,w,c
   764  0005B4  0A00               	xorlw	0	; case 0
   765  0005B6  B4D8               	btfsc	status,2,c
   766  0005B8  EFF1  F001         	goto	l1631
   767  0005BC  0A01               	xorlw	1	; case 1
   768  0005BE  B4D8               	btfsc	status,2,c
   769  0005C0  EF07  F002         	goto	l1637
   770  0005C4  0A03               	xorlw	3	; case 2
   771  0005C6  B4D8               	btfsc	status,2,c
   772  0005C8  EF1D  F002         	goto	l1643
   773  0005CC  0A01               	xorlw	1	; case 3
   774  0005CE  B4D8               	btfsc	status,2,c
   775  0005D0  EF33  F002         	goto	l1649
   776  0005D4  0A07               	xorlw	7	; case 4
   777  0005D6  B4D8               	btfsc	status,2,c
   778  0005D8  EF49  F002         	goto	l1655
   779  0005DC  0A01               	xorlw	1	; case 5
   780  0005DE  B4D8               	btfsc	status,2,c
   781  0005E0  EF5F  F002         	goto	l1661
   782  0005E4  0A03               	xorlw	3	; case 6
   783  0005E6  B4D8               	btfsc	status,2,c
   784  0005E8  EF75  F002         	goto	l1667
   785  0005EC  0A01               	xorlw	1	; case 7
   786  0005EE  B4D8               	btfsc	status,2,c
   787  0005F0  EF9A  F002         	goto	l1677
   788  0005F4  EFFC  F002         	goto	l242
   789  0005F8                     l242:
   790  0005F8  0012               	return		;funcret
   791  0005FA                     __end_of_sevenSeg_controller:
   792                           	callstack 0
   793                           
   794 ;; *************** function _sevenSeg *****************
   795 ;; Defined at:
   796 ;;		line 433 in file "newmain.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  J               1    wreg     unsigned char 
   799 ;;  D               1    1[COMRAM] unsigned char 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  J               1    4[COMRAM] unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   811 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;Total ram usage:        4 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    3
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_sevenSeg_controller
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text3
   826  00093A                     __ptext3:
   827                           	callstack 0
   828  00093A                     _sevenSeg:
   829                           	callstack 26
   830                           
   831                           ;incstack = 0
   832                           ;sevenSeg@J stored from wreg
   833  00093A  6E17               	movwf	sevenSeg@J^0,c
   834  00093C                     
   835                           ;newmain.c: 433: void sevenSeg(uint8_t J, uint8_t D);newmain.c: 434: {;newmain.c: 435:  
      +                             switch (J)
   836  00093C  EFD8  F004         	goto	l1607
   837  000940                     l1577:
   838                           
   839                           ;newmain.c: 440:         PORTJ = 0x3f;
   840  000940  0E3F               	movlw	63
   841  000942  6E88               	movwf	136,c	;volatile
   842                           
   843                           ;newmain.c: 441:         break;
   844  000944  EF2D  F005         	goto	l1619
   845  000948                     l1579:
   846                           
   847                           ;newmain.c: 443:         PORTJ = 0x06;
   848  000948  0E06               	movlw	6
   849  00094A  6E88               	movwf	136,c	;volatile
   850                           
   851                           ;newmain.c: 444:         break;
   852  00094C  EF2D  F005         	goto	l1619
   853  000950                     l1581:
   854                           
   855                           ;newmain.c: 446:         PORTJ = 0x5b;
   856  000950  0E5B               	movlw	91
   857  000952  6E88               	movwf	136,c	;volatile
   858                           
   859                           ;newmain.c: 447:         break;
   860  000954  EF2D  F005         	goto	l1619
   861  000958                     l1583:
   862                           
   863                           ;newmain.c: 449:         PORTJ = 0x4f;
   864  000958  0E4F               	movlw	79
   865  00095A  6E88               	movwf	136,c	;volatile
   866                           
   867                           ;newmain.c: 450:         break;
   868  00095C  EF2D  F005         	goto	l1619
   869  000960                     l1585:
   870                           
   871                           ;newmain.c: 452:         PORTJ = 0x66;
   872  000960  0E66               	movlw	102
   873  000962  6E88               	movwf	136,c	;volatile
   874                           
   875                           ;newmain.c: 453:         break;
   876  000964  EF2D  F005         	goto	l1619
   877  000968                     l1587:
   878                           
   879                           ;newmain.c: 455:         PORTJ = 0x6d;
   880  000968  0E6D               	movlw	109
   881  00096A  6E88               	movwf	136,c	;volatile
   882                           
   883                           ;newmain.c: 456:         break;
   884  00096C  EF2D  F005         	goto	l1619
   885  000970                     l1589:
   886                           
   887                           ;newmain.c: 458:         PORTJ = 0x7d;
   888  000970  0E7D               	movlw	125
   889  000972  6E88               	movwf	136,c	;volatile
   890                           
   891                           ;newmain.c: 459:         break;
   892  000974  EF2D  F005         	goto	l1619
   893  000978                     l1591:
   894                           
   895                           ;newmain.c: 461:         PORTJ = 0x07;
   896  000978  0E07               	movlw	7
   897  00097A  6E88               	movwf	136,c	;volatile
   898                           
   899                           ;newmain.c: 462:         break;
   900  00097C  EF2D  F005         	goto	l1619
   901  000980                     l1593:
   902                           
   903                           ;newmain.c: 464:         PORTJ = 0x7f;
   904  000980  0E7F               	movlw	127
   905  000982  6E88               	movwf	136,c	;volatile
   906                           
   907                           ;newmain.c: 465:         break;
   908  000984  EF2D  F005         	goto	l1619
   909  000988                     l1595:
   910                           
   911                           ;newmain.c: 467:         PORTJ = 0x6f;
   912  000988  0E6F               	movlw	111
   913  00098A  6E88               	movwf	136,c	;volatile
   914                           
   915                           ;newmain.c: 468:         break;
   916  00098C  EF2D  F005         	goto	l1619
   917  000990                     l1597:
   918                           
   919                           ;newmain.c: 470:         PORTJ = 0x38;
   920  000990  0E38               	movlw	56
   921  000992  6E88               	movwf	136,c	;volatile
   922                           
   923                           ;newmain.c: 471:         break;
   924  000994  EF2D  F005         	goto	l1619
   925  000998                     l1599:
   926                           
   927                           ;newmain.c: 473:         PORTJ = 0x79;
   928  000998  0E79               	movlw	121
   929  00099A  6E88               	movwf	136,c	;volatile
   930                           
   931                           ;newmain.c: 474:         break;
   932  00099C  EF2D  F005         	goto	l1619
   933  0009A0                     l1601:
   934                           
   935                           ;newmain.c: 476:         PORTJ = 0x54;
   936  0009A0  0E54               	movlw	84
   937  0009A2  6E88               	movwf	136,c	;volatile
   938                           
   939                           ;newmain.c: 477:         break;
   940  0009A4  EF2D  F005         	goto	l1619
   941  0009A8                     l1603:
   942                           
   943                           ;newmain.c: 479:         PORTJ = 0x5e;
   944  0009A8  0E5E               	movlw	94
   945  0009AA  6E88               	movwf	136,c	;volatile
   946                           
   947                           ;newmain.c: 480:         break;
   948  0009AC  EF2D  F005         	goto	l1619
   949  0009B0                     l1607:
   950  0009B0  5017               	movf	sevenSeg@J^0,w,c
   951  0009B2  6E15               	movwf	??_sevenSeg^0,c
   952  0009B4  6A16               	clrf	(??_sevenSeg+1)^0,c
   953                           
   954                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   955                           ; Switch size 1, requested type "simple"
   956                           ; Number of cases is 1, Range of values is 0 to 0
   957                           ; switch strategies available:
   958                           ; Name         Instructions Cycles
   959                           ; simple_byte            4     3 (average)
   960                           ;	Chosen strategy is simple_byte
   961  0009B6  5016               	movf	(??_sevenSeg+1)^0,w,c
   962  0009B8  0A00               	xorlw	0	; case 0
   963  0009BA  B4D8               	btfsc	status,2,c
   964  0009BC  EFE2  F004         	goto	l1741
   965  0009C0  EF2D  F005         	goto	l1619
   966  0009C4                     l1741:
   967                           
   968                           ; Switch size 1, requested type "simple"
   969                           ; Number of cases is 14, Range of values is 0 to 13
   970                           ; switch strategies available:
   971                           ; Name         Instructions Cycles
   972                           ; simple_byte           43    22 (average)
   973                           ;	Chosen strategy is simple_byte
   974  0009C4  5015               	movf	??_sevenSeg^0,w,c
   975  0009C6  0A00               	xorlw	0	; case 0
   976  0009C8  B4D8               	btfsc	status,2,c
   977  0009CA  EFA0  F004         	goto	l1577
   978  0009CE  0A01               	xorlw	1	; case 1
   979  0009D0  B4D8               	btfsc	status,2,c
   980  0009D2  EFA4  F004         	goto	l1579
   981  0009D6  0A03               	xorlw	3	; case 2
   982  0009D8  B4D8               	btfsc	status,2,c
   983  0009DA  EFA8  F004         	goto	l1581
   984  0009DE  0A01               	xorlw	1	; case 3
   985  0009E0  B4D8               	btfsc	status,2,c
   986  0009E2  EFAC  F004         	goto	l1583
   987  0009E6  0A07               	xorlw	7	; case 4
   988  0009E8  B4D8               	btfsc	status,2,c
   989  0009EA  EFB0  F004         	goto	l1585
   990  0009EE  0A01               	xorlw	1	; case 5
   991  0009F0  B4D8               	btfsc	status,2,c
   992  0009F2  EFB4  F004         	goto	l1587
   993  0009F6  0A03               	xorlw	3	; case 6
   994  0009F8  B4D8               	btfsc	status,2,c
   995  0009FA  EFB8  F004         	goto	l1589
   996  0009FE  0A01               	xorlw	1	; case 7
   997  000A00  B4D8               	btfsc	status,2,c
   998  000A02  EFBC  F004         	goto	l1591
   999  000A06  0A0F               	xorlw	15	; case 8
  1000  000A08  B4D8               	btfsc	status,2,c
  1001  000A0A  EFC0  F004         	goto	l1593
  1002  000A0E  0A01               	xorlw	1	; case 9
  1003  000A10  B4D8               	btfsc	status,2,c
  1004  000A12  EFC4  F004         	goto	l1595
  1005  000A16  0A03               	xorlw	3	; case 10
  1006  000A18  B4D8               	btfsc	status,2,c
  1007  000A1A  EFC8  F004         	goto	l1597
  1008  000A1E  0A01               	xorlw	1	; case 11
  1009  000A20  B4D8               	btfsc	status,2,c
  1010  000A22  EFCC  F004         	goto	l1599
  1011  000A26  0A07               	xorlw	7	; case 12
  1012  000A28  B4D8               	btfsc	status,2,c
  1013  000A2A  EFD0  F004         	goto	l1601
  1014  000A2E  0A01               	xorlw	1	; case 13
  1015  000A30  B4D8               	btfsc	status,2,c
  1016  000A32  EFD4  F004         	goto	l1603
  1017  000A36  EF2D  F005         	goto	l1619
  1018  000A3A                     l1609:
  1019                           
  1020                           ;newmain.c: 485:         PORTH = 0x01;
  1021  000A3A  0E01               	movlw	1
  1022  000A3C  6E87               	movwf	135,c	;volatile
  1023                           
  1024                           ;newmain.c: 486:         break;
  1025  000A3E  EF4A  F005         	goto	l267
  1026  000A42                     l1611:
  1027                           
  1028                           ;newmain.c: 488:         PORTH = 0x02;
  1029  000A42  0E02               	movlw	2
  1030  000A44  6E87               	movwf	135,c	;volatile
  1031                           
  1032                           ;newmain.c: 489:         break;
  1033  000A46  EF4A  F005         	goto	l267
  1034  000A4A                     l1613:
  1035                           
  1036                           ;newmain.c: 491:         PORTH = 0x04;
  1037  000A4A  0E04               	movlw	4
  1038  000A4C  6E87               	movwf	135,c	;volatile
  1039                           
  1040                           ;newmain.c: 492:         break;
  1041  000A4E  EF4A  F005         	goto	l267
  1042  000A52                     l1615:
  1043                           
  1044                           ;newmain.c: 494:         PORTH = 0x08;
  1045  000A52  0E08               	movlw	8
  1046  000A54  6E87               	movwf	135,c	;volatile
  1047                           
  1048                           ;newmain.c: 495:         break;
  1049  000A56  EF4A  F005         	goto	l267
  1050  000A5A                     l1619:
  1051  000A5A  5014               	movf	sevenSeg@D^0,w,c
  1052  000A5C  6E15               	movwf	??_sevenSeg^0,c
  1053  000A5E  6A16               	clrf	(??_sevenSeg+1)^0,c
  1054                           
  1055                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1056                           ; Switch size 1, requested type "simple"
  1057                           ; Number of cases is 1, Range of values is 0 to 0
  1058                           ; switch strategies available:
  1059                           ; Name         Instructions Cycles
  1060                           ; simple_byte            4     3 (average)
  1061                           ;	Chosen strategy is simple_byte
  1062  000A60  5016               	movf	(??_sevenSeg+1)^0,w,c
  1063  000A62  0A00               	xorlw	0	; case 0
  1064  000A64  B4D8               	btfsc	status,2,c
  1065  000A66  EF37  F005         	goto	l1743
  1066  000A6A  EF4A  F005         	goto	l267
  1067  000A6E                     l1743:
  1068                           
  1069                           ; Switch size 1, requested type "simple"
  1070                           ; Number of cases is 4, Range of values is 0 to 3
  1071                           ; switch strategies available:
  1072                           ; Name         Instructions Cycles
  1073                           ; simple_byte           13     7 (average)
  1074                           ;	Chosen strategy is simple_byte
  1075  000A6E  5015               	movf	??_sevenSeg^0,w,c
  1076  000A70  0A00               	xorlw	0	; case 0
  1077  000A72  B4D8               	btfsc	status,2,c
  1078  000A74  EF1D  F005         	goto	l1609
  1079  000A78  0A01               	xorlw	1	; case 1
  1080  000A7A  B4D8               	btfsc	status,2,c
  1081  000A7C  EF21  F005         	goto	l1611
  1082  000A80  0A03               	xorlw	3	; case 2
  1083  000A82  B4D8               	btfsc	status,2,c
  1084  000A84  EF25  F005         	goto	l1613
  1085  000A88  0A01               	xorlw	1	; case 3
  1086  000A8A  B4D8               	btfsc	status,2,c
  1087  000A8C  EF29  F005         	goto	l1615
  1088  000A90  EF4A  F005         	goto	l267
  1089  000A94                     l267:
  1090  000A94  0012               	return		;funcret
  1091  000A96                     __end_of_sevenSeg:
  1092                           	callstack 0
  1093                           
  1094 ;; *************** function _input_task *****************
  1095 ;; Defined at:
  1096 ;;		line 261 in file "newmain.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;Total ram usage:        0 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    4
  1117 ;; This function calls:
  1118 ;;		_init_ports
  1119 ;;		_init_vars
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text4
  1126  00079C                     __ptext4:
  1127                           	callstack 0
  1128  00079C                     _input_task:
  1129                           	callstack 26
  1130  00079C  500B               	movf	_isGameStarted^0,w,c
  1131  00079E  B4D8               	btfsc	status,2,c
  1132  0007A0  EFD4  F003         	goto	u141
  1133  0007A4  EFD6  F003         	goto	u140
  1134  0007A8                     u141:
  1135  0007A8  EFDE  F003         	goto	l1209
  1136  0007AC                     u140:
  1137  0007AC  500A               	movf	_isGameFinished^0,w,c
  1138  0007AE  B4D8               	btfsc	status,2,c
  1139  0007B0  EFDC  F003         	goto	u151
  1140  0007B4  EFDE  F003         	goto	u150
  1141  0007B8                     u151:
  1142  0007B8  EF06  F004         	goto	l1223
  1143  0007BC                     u150:
  1144  0007BC                     l1209:
  1145  0007BC  0409               	decf	_isRC0Pressed^0,w,c
  1146  0007BE  A4D8               	btfss	status,2,c
  1147  0007C0  EFE4  F003         	goto	u161
  1148  0007C4  EFE6  F003         	goto	u160
  1149  0007C8                     u161:
  1150  0007C8  EFE8  F003         	goto	l184
  1151  0007CC                     u160:
  1152  0007CC  EF06  F004         	goto	l1223
  1153  0007D0                     l184:
  1154  0007D0  A082               	btfss	130,0,c	;volatile
  1155  0007D2  EFED  F003         	goto	u171
  1156  0007D6  EFEF  F003         	goto	u170
  1157  0007DA                     u171:
  1158  0007DA  EF06  F004         	goto	l1223
  1159  0007DE                     u170:
  1160  0007DE                     
  1161                           ;newmain.c: 284:         {;newmain.c: 285:             health = 9;
  1162  0007DE  0E09               	movlw	9
  1163  0007E0  6E26               	movwf	_health^0,c
  1164                           
  1165                           ;newmain.c: 286:             isRC0Pressed = 1;
  1166  0007E2  0E01               	movlw	1
  1167  0007E4  6E09               	movwf	_isRC0Pressed^0,c
  1168                           
  1169                           ;newmain.c: 287:             game_state = G_INIT;
  1170  0007E6  0E00               	movlw	0
  1171  0007E8  6E05               	movwf	_game_state^0,c
  1172  0007EA                     
  1173                           ;newmain.c: 288:                 init_vars();
  1174  0007EA  ECA5  F005         	call	_init_vars	;wreg free
  1175  0007EE                     
  1176                           ;newmain.c: 289:                 init_ports();
  1177  0007EE  ECCD  F005         	call	_init_ports	;wreg free
  1178                           
  1179                           ;newmain.c: 290:                 isRC0Pressed = 0;
  1180  0007F2  0E00               	movlw	0
  1181  0007F4  6E09               	movwf	_isRC0Pressed^0,c
  1182                           
  1183                           ;newmain.c: 291:                 isGameStarted = 1;
  1184  0007F6  0E01               	movlw	1
  1185  0007F8  6E0B               	movwf	_isGameStarted^0,c
  1186                           
  1187                           ;newmain.c: 292:                 isGameFinished = 0;
  1188  0007FA  0E00               	movlw	0
  1189  0007FC  6E0A               	movwf	_isGameFinished^0,c
  1190                           
  1191                           ;newmain.c: 293:                 TRISC = 0x00;
  1192  0007FE  0E00               	movlw	0
  1193  000800  6E94               	movwf	148,c	;volatile
  1194                           
  1195                           ;newmain.c: 294:                 PORTC = 0x00;
  1196  000802  0E00               	movlw	0
  1197  000804  6E82               	movwf	130,c	;volatile
  1198  000806                     
  1199                           ;newmain.c: 295:                 T0CON |= 0x80;
  1200  000806  8ED5               	bsf	213,7,c	;volatile
  1201  000808                     
  1202                           ;newmain.c: 296:                 T1CON = 0xc9;
  1203  000808  0EC9               	movlw	201
  1204  00080A  6ECD               	movwf	205,c	;volatile
  1205  00080C                     l1223:
  1206                           
  1207                           ;newmain.c: 300:     if (isRG0Pressed == 0)
  1208  00080C  5024               	movf	_isRG0Pressed^0,w,c
  1209  00080E  A4D8               	btfss	status,2,c
  1210  000810  EF0C  F004         	goto	u181
  1211  000814  EF0E  F004         	goto	u180
  1212  000818                     u181:
  1213  000818  EF1B  F004         	goto	l187
  1214  00081C                     u180:
  1215  00081C                     
  1216                           ;newmain.c: 301:     {;newmain.c: 302:         if (PORTGbits.RG0 == 0)
  1217  00081C  B086               	btfsc	134,0,c	;volatile
  1218  00081E  EF13  F004         	goto	u191
  1219  000822  EF15  F004         	goto	u190
  1220  000826                     u191:
  1221  000826  EF24  F004         	goto	l189
  1222  00082A                     u190:
  1223  00082A                     
  1224                           ;newmain.c: 303:         {;newmain.c: 304:             isRG0Pressed = 1;
  1225  00082A  0E01               	movlw	1
  1226  00082C  6E24               	movwf	_isRG0Pressed^0,c
  1227                           
  1228                           ;newmain.c: 305:             whichRG = 0;
  1229  00082E  0E00               	movlw	0
  1230  000830  6E1F               	movwf	_whichRG^0,c
  1231  000832  EF24  F004         	goto	l189
  1232  000836                     l187:
  1233  000836  A086               	btfss	134,0,c	;volatile
  1234  000838  EF20  F004         	goto	u201
  1235  00083C  EF22  F004         	goto	u200
  1236  000840                     u201:
  1237  000840  EF24  F004         	goto	l189
  1238  000844                     u200:
  1239  000844                     
  1240                           ;newmain.c: 309:     {;newmain.c: 310:         isRG0Pressed = 0;
  1241  000844  0E00               	movlw	0
  1242  000846  6E24               	movwf	_isRG0Pressed^0,c
  1243  000848                     l189:
  1244                           
  1245                           ;newmain.c: 313:     if (isRG1Pressed == 0)
  1246  000848  5023               	movf	_isRG1Pressed^0,w,c
  1247  00084A  A4D8               	btfss	status,2,c
  1248  00084C  EF2A  F004         	goto	u211
  1249  000850  EF2C  F004         	goto	u210
  1250  000854                     u211:
  1251  000854  EF39  F004         	goto	l191
  1252  000858                     u210:
  1253  000858                     
  1254                           ;newmain.c: 314:     {;newmain.c: 315:         if (PORTGbits.RG1 == 0)
  1255  000858  B286               	btfsc	134,1,c	;volatile
  1256  00085A  EF31  F004         	goto	u221
  1257  00085E  EF33  F004         	goto	u220
  1258  000862                     u221:
  1259  000862  EF42  F004         	goto	l193
  1260  000866                     u220:
  1261  000866                     
  1262                           ;newmain.c: 316:         {;newmain.c: 317:             isRG1Pressed = 1;
  1263  000866  0E01               	movlw	1
  1264  000868  6E23               	movwf	_isRG1Pressed^0,c
  1265                           
  1266                           ;newmain.c: 318:             whichRG = 1;
  1267  00086A  0E01               	movlw	1
  1268  00086C  6E1F               	movwf	_whichRG^0,c
  1269  00086E  EF42  F004         	goto	l193
  1270  000872                     l191:
  1271  000872  A286               	btfss	134,1,c	;volatile
  1272  000874  EF3E  F004         	goto	u231
  1273  000878  EF40  F004         	goto	u230
  1274  00087C                     u231:
  1275  00087C  EF42  F004         	goto	l193
  1276  000880                     u230:
  1277  000880                     
  1278                           ;newmain.c: 322:     {;newmain.c: 323:         isRG1Pressed = 0;
  1279  000880  0E00               	movlw	0
  1280  000882  6E23               	movwf	_isRG1Pressed^0,c
  1281  000884                     l193:
  1282                           
  1283                           ;newmain.c: 326:     if (isRG2Pressed == 0)
  1284  000884  5022               	movf	_isRG2Pressed^0,w,c
  1285  000886  A4D8               	btfss	status,2,c
  1286  000888  EF48  F004         	goto	u241
  1287  00088C  EF4A  F004         	goto	u240
  1288  000890                     u241:
  1289  000890  EF57  F004         	goto	l195
  1290  000894                     u240:
  1291  000894                     
  1292                           ;newmain.c: 327:     {;newmain.c: 328:         if (PORTGbits.RG2 == 0)
  1293  000894  B486               	btfsc	134,2,c	;volatile
  1294  000896  EF4F  F004         	goto	u251
  1295  00089A  EF51  F004         	goto	u250
  1296  00089E                     u251:
  1297  00089E  EF60  F004         	goto	l197
  1298  0008A2                     u250:
  1299  0008A2                     
  1300                           ;newmain.c: 329:         {;newmain.c: 330:             isRG2Pressed = 1;
  1301  0008A2  0E01               	movlw	1
  1302  0008A4  6E22               	movwf	_isRG2Pressed^0,c
  1303                           
  1304                           ;newmain.c: 331:             whichRG = 2;
  1305  0008A6  0E02               	movlw	2
  1306  0008A8  6E1F               	movwf	_whichRG^0,c
  1307  0008AA  EF60  F004         	goto	l197
  1308  0008AE                     l195:
  1309  0008AE  A486               	btfss	134,2,c	;volatile
  1310  0008B0  EF5C  F004         	goto	u261
  1311  0008B4  EF5E  F004         	goto	u260
  1312  0008B8                     u261:
  1313  0008B8  EF60  F004         	goto	l197
  1314  0008BC                     u260:
  1315  0008BC                     
  1316                           ;newmain.c: 335:     {;newmain.c: 336:         isRG2Pressed = 0;
  1317  0008BC  0E00               	movlw	0
  1318  0008BE  6E22               	movwf	_isRG2Pressed^0,c
  1319  0008C0                     l197:
  1320                           
  1321                           ;newmain.c: 339:     if (isRG3Pressed == 0)
  1322  0008C0  5021               	movf	_isRG3Pressed^0,w,c
  1323  0008C2  A4D8               	btfss	status,2,c
  1324  0008C4  EF66  F004         	goto	u271
  1325  0008C8  EF68  F004         	goto	u270
  1326  0008CC                     u271:
  1327  0008CC  EF75  F004         	goto	l199
  1328  0008D0                     u270:
  1329  0008D0                     
  1330                           ;newmain.c: 340:     {;newmain.c: 341:         if (PORTGbits.RG3 == 0)
  1331  0008D0  B686               	btfsc	134,3,c	;volatile
  1332  0008D2  EF6D  F004         	goto	u281
  1333  0008D6  EF6F  F004         	goto	u280
  1334  0008DA                     u281:
  1335  0008DA  EF7E  F004         	goto	l201
  1336  0008DE                     u280:
  1337  0008DE                     
  1338                           ;newmain.c: 342:         {;newmain.c: 343:             isRG3Pressed = 1;
  1339  0008DE  0E01               	movlw	1
  1340  0008E0  6E21               	movwf	_isRG3Pressed^0,c
  1341                           
  1342                           ;newmain.c: 344:             whichRG = 3;
  1343  0008E2  0E03               	movlw	3
  1344  0008E4  6E1F               	movwf	_whichRG^0,c
  1345  0008E6  EF7E  F004         	goto	l201
  1346  0008EA                     l199:
  1347  0008EA  A686               	btfss	134,3,c	;volatile
  1348  0008EC  EF7A  F004         	goto	u291
  1349  0008F0  EF7C  F004         	goto	u290
  1350  0008F4                     u291:
  1351  0008F4  EF7E  F004         	goto	l201
  1352  0008F8                     u290:
  1353  0008F8                     
  1354                           ;newmain.c: 348:     {;newmain.c: 349:         isRG3Pressed = 0;
  1355  0008F8  0E00               	movlw	0
  1356  0008FA  6E21               	movwf	_isRG3Pressed^0,c
  1357  0008FC                     l201:
  1358                           
  1359                           ;newmain.c: 352:     if (isRG4Pressed == 0)
  1360  0008FC  5020               	movf	_isRG4Pressed^0,w,c
  1361  0008FE  A4D8               	btfss	status,2,c
  1362  000900  EF84  F004         	goto	u301
  1363  000904  EF86  F004         	goto	u300
  1364  000908                     u301:
  1365  000908  EF93  F004         	goto	l203
  1366  00090C                     u300:
  1367  00090C                     
  1368                           ;newmain.c: 353:     {;newmain.c: 354:         if (PORTGbits.RG4 == 0)
  1369  00090C  B886               	btfsc	134,4,c	;volatile
  1370  00090E  EF8B  F004         	goto	u311
  1371  000912  EF8D  F004         	goto	u310
  1372  000916                     u311:
  1373  000916  EF9C  F004         	goto	l207
  1374  00091A                     u310:
  1375  00091A                     
  1376                           ;newmain.c: 355:         {;newmain.c: 356:             isRG4Pressed = 1;
  1377  00091A  0E01               	movlw	1
  1378  00091C  6E20               	movwf	_isRG4Pressed^0,c
  1379                           
  1380                           ;newmain.c: 357:             whichRG = 4;
  1381  00091E  0E04               	movlw	4
  1382  000920  6E1F               	movwf	_whichRG^0,c
  1383  000922  EF9C  F004         	goto	l207
  1384  000926                     l203:
  1385  000926  A886               	btfss	134,4,c	;volatile
  1386  000928  EF98  F004         	goto	u321
  1387  00092C  EF9A  F004         	goto	u320
  1388  000930                     u321:
  1389  000930  EF9C  F004         	goto	l207
  1390  000934                     u320:
  1391  000934                     
  1392                           ;newmain.c: 361:     {;newmain.c: 362:         isRG4Pressed = 0;
  1393  000934  0E00               	movlw	0
  1394  000936  6E20               	movwf	_isRG4Pressed^0,c
  1395  000938                     l207:
  1396  000938  0012               	return		;funcret
  1397  00093A                     __end_of_input_task:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _init_vars *****************
  1401 ;; Defined at:
  1402 ;;		line 65 in file "newmain.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    3
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_input_task
  1427 ;;		_main
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text5
  1432  000B4A                     __ptext5:
  1433                           	callstack 0
  1434  000B4A                     _init_vars:
  1435                           	callstack 26
  1436  000B4A                     
  1437                           ;newmain.c: 67:     sevenSeg2WayCounter = 0;
  1438  000B4A  0E00               	movlw	0
  1439  000B4C  6E0C               	movwf	_temp_shift^0,c
  1440                           
  1441                           ;newmain.c: 68:     sevenSeg3WayCounter = 0;
  1442  000B4E  0E09               	movlw	9
  1443  000B50  6E26               	movwf	_health^0,c
  1444                           
  1445                           ;newmain.c: 69:     sevenSeg4WayCounter = 0;
  1446  000B52  0E01               	movlw	1
  1447  000B54  6E25               	movwf	_level^0,c
  1448                           
  1449                           ;newmain.c: 70:     whichRG = 5;
  1450  000B56  0E00               	movlw	0
  1451  000B58  6E0B               	movwf	_isGameStarted^0,c
  1452                           
  1453                           ;newmain.c: 71:     isPressed = 0;
  1454  000B5A  0E00               	movlw	0
  1455  000B5C  6E0A               	movwf	_isGameFinished^0,c
  1456                           
  1457                           ;newmain.c: 72:     starterDelay = 0;
  1458  000B5E  0E00               	movlw	0
  1459  000B60  6E09               	movwf	_isRC0Pressed^0,c
  1460  000B62                     
  1461                           ;newmain.c: 73:     level_subcount = 0;
  1462  000B62  6824               	setf	_isRG0Pressed^0,c
  1463  000B64                     
  1464                           ;newmain.c: 74:     game_level = 1;
  1465  000B64  6823               	setf	_isRG1Pressed^0,c
  1466  000B66                     
  1467                           ;newmain.c: 75:     game_state = G_INIT;
  1468  000B66  6822               	setf	_isRG2Pressed^0,c
  1469  000B68                     
  1470                           ;newmain.c: 76:     tmr1flag = 0;
  1471  000B68  6821               	setf	_isRG3Pressed^0,c
  1472  000B6A                     
  1473                           ;newmain.c: 77: }
  1474  000B6A  6820               	setf	_isRG4Pressed^0,c
  1475                           
  1476                           ;newmain.c: 78: 
  1477  000B6C  0E00               	movlw	0
  1478  000B6E  6E10               	movwf	_sevenSegCounter^0,c
  1479                           
  1480                           ;newmain.c: 79: 
  1481  000B70  0E00               	movlw	0
  1482  000B72  6E0F               	movwf	_sevenSeg2WayCounter^0,c
  1483                           
  1484                           ;newmain.c: 80: 
  1485  000B74  0E00               	movlw	0
  1486  000B76  6E0E               	movwf	_sevenSeg3WayCounter^0,c
  1487                           
  1488                           ;newmain.c: 81: void init_ports()
  1489  000B78  0E00               	movlw	0
  1490  000B7A  6E0D               	movwf	_sevenSeg4WayCounter^0,c
  1491                           
  1492                           ;newmain.c: 82: {
  1493  000B7C  0E05               	movlw	5
  1494  000B7E  6E1F               	movwf	_whichRG^0,c
  1495                           
  1496                           ;newmain.c: 83:     ADCON1 = 0x0f;
  1497  000B80  0E00               	movlw	0
  1498  000B82  6E08               	movwf	_isPressed^0,c
  1499                           
  1500                           ;newmain.c: 84:     TRISA = 0x00;
  1501  000B84  0E00               	movlw	0
  1502  000B86  6E07               	movwf	_starterDelay^0,c
  1503                           
  1504                           ;newmain.c: 85:     TRISB = 0x00;
  1505  000B88  0E00               	movlw	0
  1506  000B8A  6E04               	movwf	_level_subcount^0,c
  1507                           
  1508                           ;newmain.c: 86:     TRISC = 0x01;
  1509  000B8C  0E01               	movlw	1
  1510  000B8E  6E1E               	movwf	_game_level^0,c
  1511                           
  1512                           ;newmain.c: 87:     TRISD = 0x00;
  1513  000B90  0E00               	movlw	0
  1514  000B92  6E05               	movwf	_game_state^0,c
  1515                           
  1516                           ;newmain.c: 88:     TRISE = 0x00;
  1517  000B94  0E00               	movlw	0
  1518  000B96  6E06               	movwf	_tmr1flag^0,c
  1519  000B98  0012               	return		;funcret
  1520  000B9A                     __end_of_init_vars:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _init_irq *****************
  1524 ;; Defined at:
  1525 ;;		line 117 in file "newmain.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;		None
  1528 ;; Auto vars:     Size  Location     Type
  1529 ;;		None
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, status,2
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;Total ram usage:        0 bytes
  1544 ;; Hardware stack levels used:    1
  1545 ;; Hardware stack levels required when called:    3
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text6
  1554  000CC6                     __ptext6:
  1555                           	callstack 0
  1556  000CC6                     _init_irq:
  1557                           	callstack 27
  1558  000CC6                     
  1559                           ;newmain.c: 119:     TMR_DONE
  1560  000CC6  0EA0               	movlw	160
  1561  000CC8  6EF2               	movwf	242,c	;volatile
  1562  000CCA  0012               	return		;funcret
  1563  000CCC                     __end_of_init_irq:
  1564                           	callstack 0
  1565                           
  1566 ;; *************** function _game_task *****************
  1567 ;; Defined at:
  1568 ;;		line 546 in file "newmain.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  count           1   10[COMRAM] unsigned char 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;Total ram usage:        3 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    5
  1589 ;; This function calls:
  1590 ;;		_health_decreaser
  1591 ;;		_randomgen
  1592 ;;		_reset_task
  1593 ;;		_shape_shifter
  1594 ;;		_tmr_start
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text7
  1601  00002A                     __ptext7:
  1602                           	callstack 0
  1603  00002A                     _game_task:
  1604                           	callstack 25
  1605  00002A                     
  1606                           ;newmain.c: 553:     uint8_t count = 0;
  1607  00002A  0E00               	movlw	0
  1608  00002C  6E1D               	movwf	game_task@count^0,c
  1609  00002E                     
  1610                           ;newmain.c: 554:     if (isRG0Pressed == 1)
  1611  00002E  0424               	decf	_isRG0Pressed^0,w,c
  1612  000030  A4D8               	btfss	status,2,c
  1613  000032  EF1D  F000         	goto	u441
  1614  000036  EF1F  F000         	goto	u440
  1615  00003A                     u441:
  1616  00003A  EF21  F000         	goto	l1333
  1617  00003E                     u440:
  1618  00003E                     
  1619                           ;newmain.c: 555:     {;newmain.c: 556:         count++;
  1620  00003E  2A1D               	incf	game_task@count^0,f,c
  1621  000040                     
  1622                           ;newmain.c: 557:         isRG0Pressed = -1;
  1623  000040  6824               	setf	_isRG0Pressed^0,c
  1624  000042                     l1333:
  1625                           
  1626                           ;newmain.c: 559:     if (isRG1Pressed == 1)
  1627  000042  0423               	decf	_isRG1Pressed^0,w,c
  1628  000044  A4D8               	btfss	status,2,c
  1629  000046  EF27  F000         	goto	u451
  1630  00004A  EF29  F000         	goto	u450
  1631  00004E                     u451:
  1632  00004E  EF2B  F000         	goto	l1339
  1633  000052                     u450:
  1634  000052                     
  1635                           ;newmain.c: 560:     {;newmain.c: 561:         count++;
  1636  000052  2A1D               	incf	game_task@count^0,f,c
  1637  000054                     
  1638                           ;newmain.c: 562:         isRG1Pressed = -1;
  1639  000054  6823               	setf	_isRG1Pressed^0,c
  1640  000056                     l1339:
  1641                           
  1642                           ;newmain.c: 564:     if (isRG2Pressed == 1)
  1643  000056  0422               	decf	_isRG2Pressed^0,w,c
  1644  000058  A4D8               	btfss	status,2,c
  1645  00005A  EF31  F000         	goto	u461
  1646  00005E  EF33  F000         	goto	u460
  1647  000062                     u461:
  1648  000062  EF35  F000         	goto	l1345
  1649  000066                     u460:
  1650  000066                     
  1651                           ;newmain.c: 565:     {;newmain.c: 566:         count++;
  1652  000066  2A1D               	incf	game_task@count^0,f,c
  1653  000068                     
  1654                           ;newmain.c: 567:         isRG2Pressed = -1;
  1655  000068  6822               	setf	_isRG2Pressed^0,c
  1656  00006A                     l1345:
  1657                           
  1658                           ;newmain.c: 569:     if (isRG3Pressed == 1)
  1659  00006A  0421               	decf	_isRG3Pressed^0,w,c
  1660  00006C  A4D8               	btfss	status,2,c
  1661  00006E  EF3B  F000         	goto	u471
  1662  000072  EF3D  F000         	goto	u470
  1663  000076                     u471:
  1664  000076  EF3F  F000         	goto	l1351
  1665  00007A                     u470:
  1666  00007A                     
  1667                           ;newmain.c: 570:     {;newmain.c: 571:         count++;
  1668  00007A  2A1D               	incf	game_task@count^0,f,c
  1669  00007C                     
  1670                           ;newmain.c: 572:         isRG3Pressed = -1;
  1671  00007C  6821               	setf	_isRG3Pressed^0,c
  1672  00007E                     l1351:
  1673                           
  1674                           ;newmain.c: 574:     if (isRG4Pressed == 1)
  1675  00007E  0420               	decf	_isRG4Pressed^0,w,c
  1676  000080  A4D8               	btfss	status,2,c
  1677  000082  EF45  F000         	goto	u481
  1678  000086  EF47  F000         	goto	u480
  1679  00008A                     u481:
  1680  00008A  EF49  F000         	goto	l1357
  1681  00008E                     u480:
  1682  00008E                     
  1683                           ;newmain.c: 575:     {;newmain.c: 576:         count++;
  1684  00008E  2A1D               	incf	game_task@count^0,f,c
  1685  000090                     
  1686                           ;newmain.c: 577:         isRG4Pressed = -1;
  1687  000090  6820               	setf	_isRG4Pressed^0,c
  1688  000092                     l1357:
  1689                           
  1690                           ;newmain.c: 580:     if (count > 1)
  1691  000092  0E01               	movlw	1
  1692  000094  641D               	cpfsgt	game_task@count^0,c
  1693  000096  EF4F  F000         	goto	u491
  1694  00009A  EF51  F000         	goto	u490
  1695  00009E                     u491:
  1696  00009E  EF8D  F000         	goto	l1389
  1697  0000A2                     u490:
  1698  0000A2                     
  1699                           ;newmain.c: 581:     {;newmain.c: 582:         whichRG = -1;
  1700  0000A2  681F               	setf	_whichRG^0,c
  1701  0000A4                     
  1702                           ;newmain.c: 583:         isPressed = 1;
  1703  0000A4  0E01               	movlw	1
  1704  0000A6  6E08               	movwf	_isPressed^0,c
  1705  0000A8  EF8D  F000         	goto	l1389
  1706  0000AC                     l1363:
  1707                           
  1708                           ;newmain.c: 591:         health_decreaser();
  1709  0000AC  EC30  F006         	call	_health_decreaser	;wreg free
  1710                           
  1711                           ;newmain.c: 592:         break;
  1712  0000B0  EFB9  F000         	goto	l1391
  1713  0000B4                     l290:
  1714                           
  1715                           ;newmain.c: 594:         if (PORTFbits.RF0 == 1)
  1716  0000B4  A085               	btfss	133,0,c	;volatile
  1717  0000B6  EF5F  F000         	goto	u501
  1718  0000BA  EF61  F000         	goto	u500
  1719  0000BE                     u501:
  1720  0000BE  EF56  F000         	goto	l1363
  1721  0000C2                     u500:
  1722  0000C2                     l1365:
  1723                           
  1724                           ;newmain.c: 595:             tmr_state = TMR_DONE;
  1725  0000C2  0E01               	movlw	1
  1726  0000C4  6E03               	movwf	_tmr_state^0,c
  1727  0000C6  EFB9  F000         	goto	l1391
  1728  0000CA                     l293:
  1729                           
  1730                           ;newmain.c: 600:         if (PORTFbits.RF1 == 1)
  1731  0000CA  A285               	btfss	133,1,c	;volatile
  1732  0000CC  EF6A  F000         	goto	u511
  1733  0000D0  EF6C  F000         	goto	u510
  1734  0000D4                     u511:
  1735  0000D4  EF70  F000         	goto	l1371
  1736  0000D8                     u510:
  1737  0000D8                     
  1738                           ;newmain.c: 601:             tmr_state = TMR_DONE;
  1739  0000D8  0E01               	movlw	1
  1740  0000DA  6E03               	movwf	_tmr_state^0,c
  1741  0000DC  EF72  F000         	goto	l1373
  1742  0000E0                     l1371:
  1743                           
  1744                           ;newmain.c: 603:             health_decreaser();
  1745  0000E0  EC30  F006         	call	_health_decreaser	;wreg free
  1746  0000E4                     l1373:
  1747                           
  1748                           ;newmain.c: 605:         if (PORTFbits.RF2 == 1)
  1749  0000E4  A485               	btfss	133,2,c	;volatile
  1750  0000E6  EF77  F000         	goto	u521
  1751  0000EA  EF79  F000         	goto	u520
  1752  0000EE                     u521:
  1753  0000EE  EF56  F000         	goto	l1363
  1754  0000F2                     u520:
  1755  0000F2  EF61  F000         	goto	l1365
  1756  0000F6                     l299:
  1757                           
  1758                           ;newmain.c: 611:         if (PORTFbits.RF3 == 1)
  1759  0000F6  A685               	btfss	133,3,c	;volatile
  1760  0000F8  EF80  F000         	goto	u531
  1761  0000FC  EF82  F000         	goto	u530
  1762  000100                     u531:
  1763  000100  EF56  F000         	goto	l1363
  1764  000104                     u530:
  1765  000104  EF61  F000         	goto	l1365
  1766  000108                     l302:
  1767                           
  1768                           ;newmain.c: 617:         if (PORTFbits.RF4 == 1)
  1769  000108  A885               	btfss	133,4,c	;volatile
  1770  00010A  EF89  F000         	goto	u541
  1771  00010E  EF8B  F000         	goto	u540
  1772  000112                     u541:
  1773  000112  EF56  F000         	goto	l1363
  1774  000116                     u540:
  1775  000116  EF61  F000         	goto	l1365
  1776  00011A                     l1389:
  1777  00011A  501F               	movf	_whichRG^0,w,c
  1778  00011C  6E1B               	movwf	??_game_task^0,c
  1779  00011E  6A1C               	clrf	(??_game_task+1)^0,c
  1780                           
  1781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1782                           ; Switch size 1, requested type "simple"
  1783                           ; Number of cases is 2, Range of values is 0 to 255
  1784                           ; switch strategies available:
  1785                           ; Name         Instructions Cycles
  1786                           ; simple_byte            7     4 (average)
  1787                           ;	Chosen strategy is simple_byte
  1788  000120  501C               	movf	(??_game_task+1)^0,w,c
  1789  000122  0A00               	xorlw	0	; case 0
  1790  000124  B4D8               	btfsc	status,2,c
  1791  000126  EF9B  F000         	goto	l1745
  1792  00012A  0AFF               	xorlw	255	; case 255
  1793  00012C  B4D8               	btfsc	status,2,c
  1794  00012E  EFB2  F000         	goto	l1747
  1795  000132  EFB9  F000         	goto	l1391
  1796  000136                     l1745:
  1797                           
  1798                           ; Switch size 1, requested type "simple"
  1799                           ; Number of cases is 5, Range of values is 0 to 4
  1800                           ; switch strategies available:
  1801                           ; Name         Instructions Cycles
  1802                           ; simple_byte           16     9 (average)
  1803                           ;	Chosen strategy is simple_byte
  1804  000136  501B               	movf	??_game_task^0,w,c
  1805  000138  0A00               	xorlw	0	; case 0
  1806  00013A  B4D8               	btfsc	status,2,c
  1807  00013C  EF5A  F000         	goto	l290
  1808  000140  0A01               	xorlw	1	; case 1
  1809  000142  B4D8               	btfsc	status,2,c
  1810  000144  EF65  F000         	goto	l293
  1811  000148  0A03               	xorlw	3	; case 2
  1812  00014A  B4D8               	btfsc	status,2,c
  1813  00014C  EF72  F000         	goto	l1373
  1814  000150  0A01               	xorlw	1	; case 3
  1815  000152  B4D8               	btfsc	status,2,c
  1816  000154  EF7B  F000         	goto	l299
  1817  000158  0A07               	xorlw	7	; case 4
  1818  00015A  B4D8               	btfsc	status,2,c
  1819  00015C  EF84  F000         	goto	l302
  1820  000160  EFB9  F000         	goto	l1391
  1821  000164                     l1747:
  1822                           
  1823                           ; Switch size 1, requested type "simple"
  1824                           ; Number of cases is 1, Range of values is 255 to 255
  1825                           ; switch strategies available:
  1826                           ; Name         Instructions Cycles
  1827                           ; simple_byte            4     3 (average)
  1828                           ;	Chosen strategy is simple_byte
  1829  000164  501B               	movf	??_game_task^0,w,c
  1830  000166  0AFF               	xorlw	255	; case 255
  1831  000168  B4D8               	btfsc	status,2,c
  1832  00016A  EF56  F000         	goto	l1363
  1833  00016E  EFB9  F000         	goto	l1391
  1834  000172                     l1391:
  1835                           
  1836                           ;newmain.c: 626:     whichRG = 5;
  1837  000172  0E05               	movlw	5
  1838  000174  6E1F               	movwf	_whichRG^0,c
  1839                           
  1840                           ;newmain.c: 627:     switch (game_state)
  1841  000176  EFC1  F001         	goto	l1517
  1842  00017A                     l1393:
  1843                           
  1844                           ;newmain.c: 630:         tmr_start(240);
  1845  00017A  0EF0               	movlw	240
  1846  00017C  EC48  F006         	call	_tmr_start
  1847  000180                     
  1848                           ;newmain.c: 631:         game_state = LEVEL1;
  1849  000180  0E01               	movlw	1
  1850  000182  6E05               	movwf	_game_state^0,c
  1851  000184                     
  1852                           ;newmain.c: 633:         randomgen();
  1853  000184  ECFD  F002         	call	_randomgen	;wreg free
  1854  000188                     
  1855                           ;newmain.c: 634:         ++level_subcount;
  1856  000188  2A04               	incf	_level_subcount^0,f,c
  1857  00018A                     
  1858                           ;newmain.c: 635:         game_level = 1;
  1859  00018A  0E01               	movlw	1
  1860  00018C  6E1E               	movwf	_game_level^0,c
  1861                           
  1862                           ;newmain.c: 636:         break;
  1863  00018E  EFEE  F001         	goto	l334
  1864  000192                     l1403:
  1865                           
  1866                           ;newmain.c: 640:         if (tmr_state == TMR_DONE)
  1867  000192  0403               	decf	_tmr_state^0,w,c
  1868  000194  A4D8               	btfss	status,2,c
  1869  000196  EFCF  F000         	goto	u551
  1870  00019A  EFD1  F000         	goto	u550
  1871  00019E                     u551:
  1872  00019E  EFEE  F001         	goto	l334
  1873  0001A2                     u550:
  1874  0001A2                     
  1875                           ;newmain.c: 641:         {;newmain.c: 642:             starterDelay++;
  1876  0001A2  2A07               	incf	_starterDelay^0,f,c
  1877  0001A4                     
  1878                           ;newmain.c: 643:             if (isPressed == 0 && starterDelay >= 6)
  1879  0001A4  5008               	movf	_isPressed^0,w,c
  1880  0001A6  A4D8               	btfss	status,2,c
  1881  0001A8  EFD8  F000         	goto	u561
  1882  0001AC  EFDA  F000         	goto	u560
  1883  0001B0                     u561:
  1884  0001B0  EFE8  F000         	goto	l1413
  1885  0001B4                     u560:
  1886  0001B4  5007               	movf	_starterDelay^0,w,c
  1887  0001B6  0A80               	xorlw	128
  1888  0001B8  0F7A               	addlw	-134
  1889  0001BA  A0D8               	btfss	status,0,c
  1890  0001BC  EFE2  F000         	goto	u571
  1891  0001C0  EFE4  F000         	goto	u570
  1892  0001C4                     u571:
  1893  0001C4  EFE8  F000         	goto	l1413
  1894  0001C8                     u570:
  1895  0001C8                     
  1896                           ;newmain.c: 644:             {;newmain.c: 645:                 health_decreaser();
  1897  0001C8  EC30  F006         	call	_health_decreaser	;wreg free
  1898                           
  1899                           ;newmain.c: 646:             }
  1900  0001CC  EFEA  F000         	goto	l1415
  1901  0001D0                     l1413:
  1902                           
  1903                           ;newmain.c: 648:             {;newmain.c: 649:                 isPressed = 0;
  1904  0001D0  0E00               	movlw	0
  1905  0001D2  6E08               	movwf	_isPressed^0,c
  1906  0001D4                     l1415:
  1907                           
  1908                           ;newmain.c: 651:             if (level_subcount < L1)
  1909  0001D4  0E05               	movlw	5
  1910  0001D6  6004               	cpfslt	_level_subcount^0,c
  1911  0001D8  EFF0  F000         	goto	u581
  1912  0001DC  EFF2  F000         	goto	u580
  1913  0001E0                     u581:
  1914  0001E0  EFF6  F000         	goto	l1419
  1915  0001E4                     u580:
  1916  0001E4                     
  1917                           ;newmain.c: 652:             {;newmain.c: 653:                 shape_shifter();
  1918  0001E4  EC7C  F005         	call	_shape_shifter	;wreg free
  1919                           
  1920                           ;newmain.c: 654:                 randomgen();
  1921  0001E8  ECFD  F002         	call	_randomgen	;wreg free
  1922  0001EC                     l1419:
  1923                           
  1924                           ;newmain.c: 656:             if (level_subcount >= L1)
  1925  0001EC  0E04               	movlw	4
  1926  0001EE  6404               	cpfsgt	_level_subcount^0,c
  1927  0001F0  EFFC  F000         	goto	u591
  1928  0001F4  EFFE  F000         	goto	u590
  1929  0001F8                     u591:
  1930  0001F8  EF00  F001         	goto	l1423
  1931  0001FC                     u590:
  1932  0001FC                     
  1933                           ;newmain.c: 657:             {;newmain.c: 658:                 shape_shifter();
  1934  0001FC  EC7C  F005         	call	_shape_shifter	;wreg free
  1935  000200                     l1423:
  1936                           
  1937                           ;newmain.c: 661:             ++level_subcount;
  1938  000200  2A04               	incf	_level_subcount^0,f,c
  1939  000202                     
  1940                           ;newmain.c: 662:             if (level_subcount == 6 + L1)
  1941  000202  0E0B               	movlw	11
  1942  000204  1804               	xorwf	_level_subcount^0,w,c
  1943  000206  A4D8               	btfss	status,2,c
  1944  000208  EF08  F001         	goto	u601
  1945  00020C  EF0A  F001         	goto	u600
  1946  000210                     u601:
  1947  000210  EF0C  F001         	goto	l1429
  1948  000214                     u600:
  1949  000214                     
  1950                           ;newmain.c: 663:             {;newmain.c: 664:                 game_state = LEVEL2_INIT;
  1951  000214  0E02               	movlw	2
  1952  000216  6E05               	movwf	_game_state^0,c
  1953  000218                     l1429:
  1954                           
  1955                           ;newmain.c: 666:             tmr_start(240);
  1956  000218  0EF0               	movlw	240
  1957  00021A  EC48  F006         	call	_tmr_start
  1958  00021E  EFEE  F001         	goto	l334
  1959  000222                     l1431:
  1960                           
  1961                           ;newmain.c: 670:         level_subcount = 0;
  1962  000222  0E00               	movlw	0
  1963  000224  6E04               	movwf	_level_subcount^0,c
  1964  000226                     
  1965                           ;newmain.c: 671:         tmr_start(61);
  1966  000226  0E3D               	movlw	61
  1967  000228  EC48  F006         	call	_tmr_start
  1968  00022C                     
  1969                           ;newmain.c: 672:         game_state = LEVEL2;
  1970  00022C  0E03               	movlw	3
  1971  00022E  6E05               	movwf	_game_state^0,c
  1972  000230                     
  1973                           ;newmain.c: 674:         randomgen();
  1974  000230  ECFD  F002         	call	_randomgen	;wreg free
  1975  000234                     
  1976                           ;newmain.c: 675:         ++level_subcount;
  1977  000234  2A04               	incf	_level_subcount^0,f,c
  1978  000236                     
  1979                           ;newmain.c: 676:         game_level = 2;
  1980  000236  0E02               	movlw	2
  1981  000238  6E1E               	movwf	_game_level^0,c
  1982                           
  1983                           ;newmain.c: 677:         break;
  1984  00023A  EFEE  F001         	goto	l334
  1985  00023E                     l1443:
  1986                           
  1987                           ;newmain.c: 679:         if (tmr_state == TMR_DONE)
  1988  00023E  0403               	decf	_tmr_state^0,w,c
  1989  000240  A4D8               	btfss	status,2,c
  1990  000242  EF25  F001         	goto	u611
  1991  000246  EF27  F001         	goto	u610
  1992  00024A                     u611:
  1993  00024A  EFEE  F001         	goto	l334
  1994  00024E                     u610:
  1995  00024E                     
  1996                           ;newmain.c: 680:         {;newmain.c: 681:             starterDelay++;
  1997  00024E  2A07               	incf	_starterDelay^0,f,c
  1998  000250                     
  1999                           ;newmain.c: 682:             if (isPressed == 0 && starterDelay >= 6)
  2000  000250  5008               	movf	_isPressed^0,w,c
  2001  000252  A4D8               	btfss	status,2,c
  2002  000254  EF2E  F001         	goto	u621
  2003  000258  EF30  F001         	goto	u620
  2004  00025C                     u621:
  2005  00025C  EF3E  F001         	goto	l1453
  2006  000260                     u620:
  2007  000260  5007               	movf	_starterDelay^0,w,c
  2008  000262  0A80               	xorlw	128
  2009  000264  0F7A               	addlw	-134
  2010  000266  A0D8               	btfss	status,0,c
  2011  000268  EF38  F001         	goto	u631
  2012  00026C  EF3A  F001         	goto	u630
  2013  000270                     u631:
  2014  000270  EF3E  F001         	goto	l1453
  2015  000274                     u630:
  2016  000274                     
  2017                           ;newmain.c: 683:             {;newmain.c: 684:                 health_decreaser();
  2018  000274  EC30  F006         	call	_health_decreaser	;wreg free
  2019                           
  2020                           ;newmain.c: 685:             }
  2021  000278  EF40  F001         	goto	l1455
  2022  00027C                     l1453:
  2023                           
  2024                           ;newmain.c: 687:             {;newmain.c: 688:                 isPressed = 0;
  2025  00027C  0E00               	movlw	0
  2026  00027E  6E08               	movwf	_isPressed^0,c
  2027  000280                     l1455:
  2028                           
  2029                           ;newmain.c: 690:             if (level_subcount < L2)
  2030  000280  0E0A               	movlw	10
  2031  000282  6004               	cpfslt	_level_subcount^0,c
  2032  000284  EF46  F001         	goto	u641
  2033  000288  EF48  F001         	goto	u640
  2034  00028C                     u641:
  2035  00028C  EF4C  F001         	goto	l1459
  2036  000290                     u640:
  2037  000290                     
  2038                           ;newmain.c: 691:             {;newmain.c: 692:                 shape_shifter();
  2039  000290  EC7C  F005         	call	_shape_shifter	;wreg free
  2040                           
  2041                           ;newmain.c: 693:                 randomgen();
  2042  000294  ECFD  F002         	call	_randomgen	;wreg free
  2043  000298                     l1459:
  2044                           
  2045                           ;newmain.c: 695:             if (level_subcount >= L2)
  2046  000298  0E09               	movlw	9
  2047  00029A  6404               	cpfsgt	_level_subcount^0,c
  2048  00029C  EF52  F001         	goto	u651
  2049  0002A0  EF54  F001         	goto	u650
  2050  0002A4                     u651:
  2051  0002A4  EF56  F001         	goto	l1463
  2052  0002A8                     u650:
  2053  0002A8                     
  2054                           ;newmain.c: 696:             {;newmain.c: 697:                 shape_shifter();
  2055  0002A8  EC7C  F005         	call	_shape_shifter	;wreg free
  2056  0002AC                     l1463:
  2057                           
  2058                           ;newmain.c: 700:             ++level_subcount;
  2059  0002AC  2A04               	incf	_level_subcount^0,f,c
  2060  0002AE                     
  2061                           ;newmain.c: 701:             if (level_subcount == 6 + L2)
  2062  0002AE  0E10               	movlw	16
  2063  0002B0  1804               	xorwf	_level_subcount^0,w,c
  2064  0002B2  A4D8               	btfss	status,2,c
  2065  0002B4  EF5E  F001         	goto	u661
  2066  0002B8  EF60  F001         	goto	u660
  2067  0002BC                     u661:
  2068  0002BC  EF62  F001         	goto	l1469
  2069  0002C0                     u660:
  2070  0002C0                     
  2071                           ;newmain.c: 702:             {;newmain.c: 703:                 game_state = LEVEL3_INIT;
  2072  0002C0  0E04               	movlw	4
  2073  0002C2  6E05               	movwf	_game_state^0,c
  2074  0002C4                     l1469:
  2075                           
  2076                           ;newmain.c: 705:             tmr_start(61);
  2077  0002C4  0E3D               	movlw	61
  2078  0002C6  EC48  F006         	call	_tmr_start
  2079  0002CA  EFEE  F001         	goto	l334
  2080  0002CE                     l1471:
  2081                           
  2082                           ;newmain.c: 709:         level_subcount = 0;
  2083  0002CE  0E00               	movlw	0
  2084  0002D0  6E04               	movwf	_level_subcount^0,c
  2085  0002D2                     
  2086                           ;newmain.c: 710:         tmr_start(46);
  2087  0002D2  0E2E               	movlw	46
  2088  0002D4  EC48  F006         	call	_tmr_start
  2089  0002D8                     
  2090                           ;newmain.c: 711:         game_state = LEVEL3;
  2091  0002D8  0E05               	movlw	5
  2092  0002DA  6E05               	movwf	_game_state^0,c
  2093  0002DC                     
  2094                           ;newmain.c: 713:         randomgen();
  2095  0002DC  ECFD  F002         	call	_randomgen	;wreg free
  2096  0002E0                     
  2097                           ;newmain.c: 714:         ++level_subcount;
  2098  0002E0  2A04               	incf	_level_subcount^0,f,c
  2099  0002E2                     
  2100                           ;newmain.c: 715:         game_level = 3;
  2101  0002E2  0E03               	movlw	3
  2102  0002E4  6E1E               	movwf	_game_level^0,c
  2103                           
  2104                           ;newmain.c: 716:         break;
  2105  0002E6  EFEE  F001         	goto	l334
  2106  0002EA                     l1483:
  2107                           
  2108                           ;newmain.c: 718:         if (tmr_state == TMR_DONE)
  2109  0002EA  0403               	decf	_tmr_state^0,w,c
  2110  0002EC  A4D8               	btfss	status,2,c
  2111  0002EE  EF7B  F001         	goto	u671
  2112  0002F2  EF7D  F001         	goto	u670
  2113  0002F6                     u671:
  2114  0002F6  EFEE  F001         	goto	l334
  2115  0002FA                     u670:
  2116  0002FA                     
  2117                           ;newmain.c: 719:         {;newmain.c: 720:             starterDelay++;
  2118  0002FA  2A07               	incf	_starterDelay^0,f,c
  2119  0002FC                     
  2120                           ;newmain.c: 721:             if (isPressed == 0 && starterDelay >= 6)
  2121  0002FC  5008               	movf	_isPressed^0,w,c
  2122  0002FE  A4D8               	btfss	status,2,c
  2123  000300  EF84  F001         	goto	u681
  2124  000304  EF86  F001         	goto	u680
  2125  000308                     u681:
  2126  000308  EF94  F001         	goto	l1493
  2127  00030C                     u680:
  2128  00030C  5007               	movf	_starterDelay^0,w,c
  2129  00030E  0A80               	xorlw	128
  2130  000310  0F7A               	addlw	-134
  2131  000312  A0D8               	btfss	status,0,c
  2132  000314  EF8E  F001         	goto	u691
  2133  000318  EF90  F001         	goto	u690
  2134  00031C                     u691:
  2135  00031C  EF94  F001         	goto	l1493
  2136  000320                     u690:
  2137  000320                     
  2138                           ;newmain.c: 722:             {;newmain.c: 723:                 health_decreaser();
  2139  000320  EC30  F006         	call	_health_decreaser	;wreg free
  2140                           
  2141                           ;newmain.c: 724:             }
  2142  000324  EF96  F001         	goto	l1495
  2143  000328                     l1493:
  2144                           
  2145                           ;newmain.c: 726:             {;newmain.c: 727:                 isPressed = 0;
  2146  000328  0E00               	movlw	0
  2147  00032A  6E08               	movwf	_isPressed^0,c
  2148  00032C                     l1495:
  2149                           
  2150                           ;newmain.c: 729:             if (level_subcount < L3)
  2151  00032C  0E0F               	movlw	15
  2152  00032E  6004               	cpfslt	_level_subcount^0,c
  2153  000330  EF9C  F001         	goto	u701
  2154  000334  EF9E  F001         	goto	u700
  2155  000338                     u701:
  2156  000338  EFA2  F001         	goto	l1499
  2157  00033C                     u700:
  2158  00033C                     
  2159                           ;newmain.c: 730:             {;newmain.c: 731:                 shape_shifter();
  2160  00033C  EC7C  F005         	call	_shape_shifter	;wreg free
  2161                           
  2162                           ;newmain.c: 732:                 randomgen();
  2163  000340  ECFD  F002         	call	_randomgen	;wreg free
  2164  000344                     l1499:
  2165                           
  2166                           ;newmain.c: 734:             if (level_subcount >= L3)
  2167  000344  0E0E               	movlw	14
  2168  000346  6404               	cpfsgt	_level_subcount^0,c
  2169  000348  EFA8  F001         	goto	u711
  2170  00034C  EFAA  F001         	goto	u710
  2171  000350                     u711:
  2172  000350  EFAC  F001         	goto	l1503
  2173  000354                     u710:
  2174  000354                     
  2175                           ;newmain.c: 735:             {;newmain.c: 736:                 shape_shifter();
  2176  000354  EC7C  F005         	call	_shape_shifter	;wreg free
  2177  000358                     l1503:
  2178                           
  2179                           ;newmain.c: 739:             ++level_subcount;
  2180  000358  2A04               	incf	_level_subcount^0,f,c
  2181  00035A                     
  2182                           ;newmain.c: 740:             if (level_subcount == 6 + L3)
  2183  00035A  0E15               	movlw	21
  2184  00035C  1804               	xorwf	_level_subcount^0,w,c
  2185  00035E  A4D8               	btfss	status,2,c
  2186  000360  EFB4  F001         	goto	u721
  2187  000364  EFB6  F001         	goto	u720
  2188  000368                     u721:
  2189  000368  EFB8  F001         	goto	l1509
  2190  00036C                     u720:
  2191  00036C                     
  2192                           ;newmain.c: 741:             {;newmain.c: 742:                 game_state = END;
  2193  00036C  0E06               	movlw	6
  2194  00036E  6E05               	movwf	_game_state^0,c
  2195  000370                     l1509:
  2196                           
  2197                           ;newmain.c: 744:             tmr_start(46);
  2198  000370  0E2E               	movlw	46
  2199  000372  EC48  F006         	call	_tmr_start
  2200  000376  EFEE  F001         	goto	l334
  2201  00037A                     l1511:
  2202                           
  2203                           ;newmain.c: 748:         reset_task();
  2204  00037A  EC5C  F006         	call	_reset_task	;wreg free
  2205                           
  2206                           ;newmain.c: 749:         break;
  2207  00037E  EFEE  F001         	goto	l334
  2208  000382                     l1517:
  2209  000382  5005               	movf	_game_state^0,w,c
  2210  000384  6E1B               	movwf	??_game_task^0,c
  2211  000386  6A1C               	clrf	(??_game_task+1)^0,c
  2212                           
  2213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2214                           ; Switch size 1, requested type "simple"
  2215                           ; Number of cases is 1, Range of values is 0 to 0
  2216                           ; switch strategies available:
  2217                           ; Name         Instructions Cycles
  2218                           ; simple_byte            4     3 (average)
  2219                           ;	Chosen strategy is simple_byte
  2220  000388  501C               	movf	(??_game_task+1)^0,w,c
  2221  00038A  0A00               	xorlw	0	; case 0
  2222  00038C  B4D8               	btfsc	status,2,c
  2223  00038E  EFCB  F001         	goto	l1749
  2224  000392  EFEE  F001         	goto	l334
  2225  000396                     l1749:
  2226                           
  2227                           ; Switch size 1, requested type "simple"
  2228                           ; Number of cases is 8, Range of values is 0 to 7
  2229                           ; switch strategies available:
  2230                           ; Name         Instructions Cycles
  2231                           ; simple_byte           25    13 (average)
  2232                           ;	Chosen strategy is simple_byte
  2233  000396  501B               	movf	??_game_task^0,w,c
  2234  000398  0A00               	xorlw	0	; case 0
  2235  00039A  B4D8               	btfsc	status,2,c
  2236  00039C  EFBD  F000         	goto	l1393
  2237  0003A0  0A01               	xorlw	1	; case 1
  2238  0003A2  B4D8               	btfsc	status,2,c
  2239  0003A4  EFC9  F000         	goto	l1403
  2240  0003A8  0A03               	xorlw	3	; case 2
  2241  0003AA  B4D8               	btfsc	status,2,c
  2242  0003AC  EF11  F001         	goto	l1431
  2243  0003B0  0A01               	xorlw	1	; case 3
  2244  0003B2  B4D8               	btfsc	status,2,c
  2245  0003B4  EF1F  F001         	goto	l1443
  2246  0003B8  0A07               	xorlw	7	; case 4
  2247  0003BA  B4D8               	btfsc	status,2,c
  2248  0003BC  EF67  F001         	goto	l1471
  2249  0003C0  0A01               	xorlw	1	; case 5
  2250  0003C2  B4D8               	btfsc	status,2,c
  2251  0003C4  EF75  F001         	goto	l1483
  2252  0003C8  0A03               	xorlw	3	; case 6
  2253  0003CA  B4D8               	btfsc	status,2,c
  2254  0003CC  EFBD  F001         	goto	l1511
  2255  0003D0  0A01               	xorlw	1	; case 7
  2256  0003D2  B4D8               	btfsc	status,2,c
  2257  0003D4  EFBD  F001         	goto	l1511
  2258  0003D8  EFEE  F001         	goto	l334
  2259  0003DC                     l334:
  2260  0003DC  0012               	return		;funcret
  2261  0003DE                     __end_of_game_task:
  2262                           	callstack 0
  2263                           
  2264 ;; *************** function _tmr_start *****************
  2265 ;; Defined at:
  2266 ;;		line 167 in file "newmain.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  ticks           1    wreg     unsigned char 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  ticks           1    1[COMRAM] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, status,2
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;Total ram usage:        1 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    3
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_game_task
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text8
  2295  000C90                     __ptext8:
  2296                           	callstack 0
  2297  000C90                     _tmr_start:
  2298                           	callstack 26
  2299                           
  2300                           ;incstack = 0
  2301                           ;tmr_start@ticks stored from wreg
  2302  000C90  6E14               	movwf	tmr_start@ticks^0,c
  2303  000C92                     
  2304                           ;newmain.c: 167: ;newmain.c: 168: ;newmain.c: 169:     if (tmr1flag == 0)
  2305  000C92  C014  F001         	movff	tmr_start@ticks,_tmr_ticks_left
  2306  000C96                     
  2307                           ;newmain.c: 170:     {
  2308  000C96  0E00               	movlw	0
  2309  000C98  6E03               	movwf	_tmr_state^0,c
  2310  000C9A                     
  2311                           ;newmain.c: 171:         ltmrval = TMR1L;
  2312  000C9A  0E00               	movlw	0
  2313  000C9C  6ED7               	movwf	215,c	;volatile
  2314  000C9E  0E00               	movlw	0
  2315  000CA0  6ED6               	movwf	214,c	;volatile
  2316  000CA2                     
  2317                           ;newmain.c: 172:         htmrval = TMR1H;
  2318  000CA2  94F2               	bcf	242,2,c	;volatile
  2319  000CA4  0012               	return		;funcret
  2320  000CA6                     __end_of_tmr_start:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function _shape_shifter *****************
  2324 ;; Defined at:
  2325 ;;		line 503 in file "newmain.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    3
  2346 ;; This function calls:
  2347 ;;		Nothing
  2348 ;; This function is called by:
  2349 ;;		_game_task
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text9
  2354  000AF8                     __ptext9:
  2355                           	callstack 0
  2356  000AF8                     _shape_shifter:
  2357                           	callstack 26
  2358  000AF8                     
  2359                           ;newmain.c: 505:     T1CON = 0xc1;
  2360  000AF8  0EC1               	movlw	193
  2361  000AFA  6ECD               	movwf	205,c	;volatile
  2362  000AFC                     
  2363                           ;newmain.c: 506:     PORTF = PORTE;
  2364  000AFC  CF84 FF85          	movff	3972,3973	;volatile
  2365  000B00                     
  2366                           ;newmain.c: 507:     PORTE = PORTD;
  2367  000B00  CF83 FF84          	movff	3971,3972	;volatile
  2368  000B04                     
  2369                           ;newmain.c: 508:     PORTD = PORTC;
  2370  000B04  CF82 FF83          	movff	3970,3971	;volatile
  2371                           
  2372                           ;newmain.c: 509:     if(temp_shift != 0)
  2373  000B08  500C               	movf	_temp_shift^0,w,c
  2374  000B0A  B4D8               	btfsc	status,2,c
  2375  000B0C  EF8A  F005         	goto	u91
  2376  000B10  EF8C  F005         	goto	u90
  2377  000B14                     u91:
  2378  000B14  EF8E  F005         	goto	l270
  2379  000B18                     u90:
  2380  000B18                     
  2381                           ;newmain.c: 510:     {;newmain.c: 511:         PORTD = temp_shift;
  2382  000B18  C00C  FF83         	movff	_temp_shift,3971	;volatile
  2383  000B1C                     l270:
  2384                           
  2385                           ;newmain.c: 513:     temp_shift = PORTB;
  2386  000B1C  CF81 F00C          	movff	3969,_temp_shift	;volatile
  2387                           
  2388                           ;newmain.c: 514:     LATC = PORTB;
  2389  000B20  CF81 FF8B          	movff	3969,3979	;volatile
  2390                           
  2391                           ;newmain.c: 515:     PORTB = PORTA;
  2392  000B24  CF80 FF81          	movff	3968,3969	;volatile
  2393  000B28                     
  2394                           ;newmain.c: 517:     PORTA &= 0x1f;
  2395  000B28  0E1F               	movlw	31
  2396  000B2A  1680               	andwf	128,f,c	;volatile
  2397                           
  2398                           ;newmain.c: 518:     PORTB &= 0x1f;
  2399  000B2C  0E1F               	movlw	31
  2400  000B2E  1681               	andwf	129,f,c	;volatile
  2401                           
  2402                           ;newmain.c: 519:     LATC &= 0x1f;
  2403  000B30  0E1F               	movlw	31
  2404  000B32  168B               	andwf	139,f,c	;volatile
  2405                           
  2406                           ;newmain.c: 520:     PORTD &= 0x1f;
  2407  000B34  0E1F               	movlw	31
  2408  000B36  1683               	andwf	131,f,c	;volatile
  2409                           
  2410                           ;newmain.c: 521:     PORTE &= 0x1f;
  2411  000B38  0E1F               	movlw	31
  2412  000B3A  1684               	andwf	132,f,c	;volatile
  2413                           
  2414                           ;newmain.c: 522:     PORTF &= 0x1f;
  2415  000B3C  0E1F               	movlw	31
  2416  000B3E  1685               	andwf	133,f,c	;volatile
  2417  000B40                     
  2418                           ;newmain.c: 524:     PORTA = 0x00;
  2419  000B40  0E00               	movlw	0
  2420  000B42  6E80               	movwf	128,c	;volatile
  2421  000B44                     
  2422                           ;newmain.c: 525:         T1CON = 0xc9;
  2423  000B44  0EC9               	movlw	201
  2424  000B46  6ECD               	movwf	205,c	;volatile
  2425  000B48  0012               	return		;funcret
  2426  000B4A                     __end_of_shape_shifter:
  2427                           	callstack 0
  2428                           
  2429 ;; *************** function _reset_task *****************
  2430 ;; Defined at:
  2431 ;;		line 529 in file "newmain.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;		None
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, status,2, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;Total ram usage:        0 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    4
  2452 ;; This function calls:
  2453 ;;		_init_ports
  2454 ;; This function is called by:
  2455 ;;		_game_task
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text10
  2460  000CB8                     __ptext10:
  2461                           	callstack 0
  2462  000CB8                     _reset_task:
  2463                           	callstack 25
  2464  000CB8                     
  2465                           ;newmain.c: 532:     isGameStarted = 0;
  2466  000CB8  0E00               	movlw	0
  2467  000CBA  6E0B               	movwf	_isGameStarted^0,c
  2468                           
  2469                           ;newmain.c: 533:     isGameFinished = 1;
  2470  000CBC  0E01               	movlw	1
  2471  000CBE  6E0A               	movwf	_isGameFinished^0,c
  2472  000CC0                     
  2473                           ;newmain.c: 534:     init_ports();
  2474  000CC0  ECCD  F005         	call	_init_ports	;wreg free
  2475  000CC4  0012               	return		;funcret
  2476  000CC6                     __end_of_reset_task:
  2477                           	callstack 0
  2478                           
  2479 ;; *************** function _init_ports *****************
  2480 ;; Defined at:
  2481 ;;		line 93 in file "newmain.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;Total ram usage:        0 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    3
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_input_task
  2506 ;;		_reset_task
  2507 ;;		_main
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text11
  2512  000B9A                     __ptext11:
  2513                           	callstack 0
  2514  000B9A                     _init_ports:
  2515                           	callstack 26
  2516  000B9A                     
  2517                           ;newmain.c: 95:     PORTB = 0x00;
  2518  000B9A  0E0F               	movlw	15
  2519  000B9C  6EC1               	movwf	193,c	;volatile
  2520                           
  2521                           ;newmain.c: 96:     PORTD = 0x00;
  2522  000B9E  0E00               	movlw	0
  2523  000BA0  6E92               	movwf	146,c	;volatile
  2524                           
  2525                           ;newmain.c: 97:     PORTE = 0x00;
  2526  000BA2  0E00               	movlw	0
  2527  000BA4  6E93               	movwf	147,c	;volatile
  2528                           
  2529                           ;newmain.c: 98:     PORTF = 0x00;
  2530  000BA6  0E01               	movlw	1
  2531  000BA8  6E94               	movwf	148,c	;volatile
  2532                           
  2533                           ;newmain.c: 99:     PORTH = 0x00;
  2534  000BAA  0E00               	movlw	0
  2535  000BAC  6E95               	movwf	149,c	;volatile
  2536                           
  2537                           ;newmain.c: 100:     PORTJ = 0x00;
  2538  000BAE  0E00               	movlw	0
  2539  000BB0  6E96               	movwf	150,c	;volatile
  2540                           
  2541                           ;newmain.c: 101: 
  2542  000BB2  0E00               	movlw	0
  2543  000BB4  6E97               	movwf	151,c	;volatile
  2544                           
  2545                           ;newmain.c: 102:     T1CON = 0xc1;
  2546  000BB6  0E1F               	movlw	31
  2547  000BB8  6E98               	movwf	152,c	;volatile
  2548                           
  2549                           ;newmain.c: 103: }
  2550  000BBA  0E00               	movlw	0
  2551  000BBC  6E99               	movwf	153,c	;volatile
  2552                           
  2553                           ;newmain.c: 104: 
  2554  000BBE  0E00               	movlw	0
  2555  000BC0  6E9A               	movwf	154,c	;volatile
  2556                           
  2557                           ;newmain.c: 106: {
  2558  000BC2  0E00               	movlw	0
  2559  000BC4  6E80               	movwf	128,c	;volatile
  2560                           
  2561                           ;newmain.c: 107:     INTCON = 0xa0;
  2562  000BC6  0E00               	movlw	0
  2563  000BC8  6E81               	movwf	129,c	;volatile
  2564                           
  2565                           ;newmain.c: 108: 
  2566  000BCA  0E00               	movlw	0
  2567  000BCC  6E83               	movwf	131,c	;volatile
  2568                           
  2569                           ;newmain.c: 109: }
  2570  000BCE  0E00               	movlw	0
  2571  000BD0  6E84               	movwf	132,c	;volatile
  2572                           
  2573                           ;newmain.c: 110: 
  2574  000BD2  0E00               	movlw	0
  2575  000BD4  6E85               	movwf	133,c	;volatile
  2576                           
  2577                           ;newmain.c: 111: 
  2578  000BD6  0E00               	movlw	0
  2579  000BD8  6E87               	movwf	135,c	;volatile
  2580                           
  2581                           ;newmain.c: 112: 
  2582  000BDA  0E00               	movlw	0
  2583  000BDC  6E88               	movwf	136,c	;volatile
  2584                           
  2585                           ;newmain.c: 114: 
  2586  000BDE  0EC1               	movlw	193
  2587  000BE0  6ECD               	movwf	205,c	;volatile
  2588  000BE2  0012               	return		;funcret
  2589  000BE4                     __end_of_init_ports:
  2590                           	callstack 0
  2591                           
  2592 ;; *************** function _randomgen *****************
  2593 ;; Defined at:
  2594 ;;		line 176 in file "newmain.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;		None
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  intermbit       1    7[COMRAM] unsigned char 
  2599 ;;  lastbit         1    6[COMRAM] unsigned char 
  2600 ;;  noteval         1    5[COMRAM] unsigned char 
  2601 ;;  num             1    4[COMRAM] unsigned char 
  2602 ;;  val             1    3[COMRAM] unsigned char 
  2603 ;;  i               1    0        unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      void 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;Total ram usage:        7 bytes
  2618 ;; Hardware stack levels used:    1
  2619 ;; Hardware stack levels required when called:    3
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_game_task
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text12
  2628  0005FA                     __ptext12:
  2629                           	callstack 0
  2630  0005FA                     _randomgen:
  2631                           	callstack 26
  2632  0005FA                     
  2633                           ;newmain.c: 178:     {;newmain.c: 181:         switch (noteval) {
  2634  0005FA  5006               	movf	_tmr1flag^0,w,c
  2635  0005FC  A4D8               	btfss	status,2,c
  2636  0005FE  EF03  F003         	goto	u11
  2637  000602  EF05  F003         	goto	u10
  2638  000606                     u11:
  2639  000606  EF0B  F003         	goto	l1051
  2640  00060A                     u10:
  2641  00060A                     
  2642                           ;newmain.c: 182:             case 5:;newmain.c: 183:                 noteval = 0;
  2643  00060A  CFCE F012          	movff	4046,_ltmrval	;volatile
  2644                           
  2645                           ;newmain.c: 184:                 break;
  2646  00060E  CFCF F011          	movff	4047,_htmrval	;volatile
  2647  000612                     
  2648                           ;newmain.c: 186:                 noteval = 1;
  2649  000612  0E01               	movlw	1
  2650  000614  6E06               	movwf	_tmr1flag^0,c
  2651  000616                     l1051:
  2652                           
  2653                           ;newmain.c: 189:                 noteval = 2;
  2654  000616  0406               	decf	_tmr1flag^0,w,c
  2655  000618  A4D8               	btfss	status,2,c
  2656  00061A  EF11  F003         	goto	u21
  2657  00061E  EF13  F003         	goto	u20
  2658  000622                     u21:
  2659  000622  EFCD  F003         	goto	l178
  2660  000626                     u20:
  2661  000626                     
  2662                           ;newmain.c: 190:                 break;;newmain.c: 191:             default:
  2663  000626  5012               	movf	_ltmrval^0,w,c
  2664  000628  0B07               	andlw	7
  2665  00062A  6E18               	movwf	randomgen@noteval^0,c
  2666                           
  2667                           ;newmain.c: 193:         }
  2668  00062C  EF24  F003         	goto	l1063
  2669  000630                     l1055:
  2670                           
  2671                           ;newmain.c: 195: 
  2672  000630  0E00               	movlw	0
  2673  000632  6E18               	movwf	randomgen@noteval^0,c
  2674                           
  2675                           ;newmain.c: 196: 
  2676  000634  EF3D  F003         	goto	l1065
  2677  000638                     l1057:
  2678                           
  2679                           ;newmain.c: 198: 
  2680  000638  0E01               	movlw	1
  2681  00063A  6E18               	movwf	randomgen@noteval^0,c
  2682                           
  2683                           ;newmain.c: 199:             PORTA = 0x00;
  2684  00063C  EF3D  F003         	goto	l1065
  2685  000640                     l1059:
  2686                           
  2687                           ;newmain.c: 201:         if (level == 1)
  2688  000640  0E02               	movlw	2
  2689  000642  6E18               	movwf	randomgen@noteval^0,c
  2690                           
  2691                           ;newmain.c: 202:         {
  2692  000644  EF3D  F003         	goto	l1065
  2693  000648                     l1063:
  2694  000648  5018               	movf	randomgen@noteval^0,w,c
  2695  00064A  6E14               	movwf	??_randomgen^0,c
  2696  00064C  6A15               	clrf	(??_randomgen+1)^0,c
  2697                           
  2698                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2699                           ; Switch size 1, requested type "simple"
  2700                           ; Number of cases is 1, Range of values is 0 to 0
  2701                           ; switch strategies available:
  2702                           ; Name         Instructions Cycles
  2703                           ; simple_byte            4     3 (average)
  2704                           ;	Chosen strategy is simple_byte
  2705  00064E  5015               	movf	(??_randomgen+1)^0,w,c
  2706  000650  0A00               	xorlw	0	; case 0
  2707  000652  B4D8               	btfsc	status,2,c
  2708  000654  EF2E  F003         	goto	l1751
  2709  000658  EF3D  F003         	goto	l1065
  2710  00065C                     l1751:
  2711                           
  2712                           ; Switch size 1, requested type "simple"
  2713                           ; Number of cases is 3, Range of values is 5 to 7
  2714                           ; switch strategies available:
  2715                           ; Name         Instructions Cycles
  2716                           ; simple_byte           10     6 (average)
  2717                           ;	Chosen strategy is simple_byte
  2718  00065C  5014               	movf	??_randomgen^0,w,c
  2719  00065E  0A05               	xorlw	5	; case 5
  2720  000660  B4D8               	btfsc	status,2,c
  2721  000662  EF18  F003         	goto	l1055
  2722  000666  0A03               	xorlw	3	; case 6
  2723  000668  B4D8               	btfsc	status,2,c
  2724  00066A  EF1C  F003         	goto	l1057
  2725  00066E  0A01               	xorlw	1	; case 7
  2726  000670  B4D8               	btfsc	status,2,c
  2727  000672  EF20  F003         	goto	l1059
  2728  000676  EF3D  F003         	goto	l1065
  2729  00067A                     l1065:
  2730                           
  2731                           ;newmain.c: 206:             ltmrval = ltmrval >> 1;
  2732  00067A  0E01               	movlw	1
  2733  00067C  6E16               	movwf	randomgen@val^0,c
  2734  00067E                     
  2735                           ;newmain.c: 209:             ltmrval = ltmrval | lastbit;
  2736  00067E  C018  F014         	movff	randomgen@noteval,??_randomgen
  2737  000682  C016  F015         	movff	randomgen@val,??_randomgen+1
  2738  000686  2A14               	incf	??_randomgen^0,f,c
  2739  000688  EF48  F003         	goto	u34
  2740  00068C                     u35:
  2741  00068C  90D8               	bcf	status,0,c
  2742  00068E  3615               	rlcf	(??_randomgen+1)^0,f,c
  2743  000690                     u34:
  2744  000690  2E14               	decfsz	??_randomgen^0,f,c
  2745  000692  EF46  F003         	goto	u35
  2746  000696  5015               	movf	(??_randomgen+1)^0,w,c
  2747  000698  6E16               	movwf	randomgen@val^0,c
  2748  00069A                     
  2749                           ;newmain.c: 211:         }
  2750  00069A  0E00               	movlw	0
  2751  00069C  6E80               	movwf	128,c	;volatile
  2752  00069E                     
  2753                           ;newmain.c: 212:         if (level == 2)
  2754  00069E  C016  FF80         	movff	randomgen@val,3968	;volatile
  2755                           
  2756                           ;newmain.c: 213:         {
  2757  0006A2  0425               	decf	_level^0,w,c
  2758  0006A4  A4D8               	btfss	status,2,c
  2759  0006A6  EF57  F003         	goto	u41
  2760  0006AA  EF59  F003         	goto	u40
  2761  0006AE                     u41:
  2762  0006AE  EF71  F003         	goto	l169
  2763  0006B2                     u40:
  2764  0006B2                     
  2765                           ;newmain.c: 214:             num = 3;;newmain.c: 215:             while (num > 0)
  2766  0006B2  5012               	movf	_ltmrval^0,w,c
  2767  0006B4  0B01               	andlw	1
  2768  0006B6  6E19               	movwf	randomgen@lastbit^0,c
  2769                           
  2770                           ;newmain.c: 216:             {
  2771  0006B8  5011               	movf	_htmrval^0,w,c
  2772  0006BA  0B01               	andlw	1
  2773  0006BC  6E1A               	movwf	randomgen@intermbit^0,c
  2774                           
  2775                           ;newmain.c: 217:                 lastbit = 0x01 & ltmrval;
  2776  0006BE  90D8               	bcf	status,0,c
  2777  0006C0  3011               	rrcf	_htmrval^0,w,c
  2778  0006C2  6E11               	movwf	_htmrval^0,c
  2779                           
  2780                           ;newmain.c: 218:                 intermbit = 0x01 & htmrval;
  2781  0006C4  90D8               	bcf	status,0,c
  2782  0006C6  3012               	rrcf	_ltmrval^0,w,c
  2783  0006C8  6E12               	movwf	_ltmrval^0,c
  2784                           
  2785                           ;newmain.c: 219:                 htmrval = htmrval >> 1;
  2786  0006CA  4019               	rrncf	randomgen@lastbit^0,w,c
  2787  0006CC  0B80               	andlw	128
  2788  0006CE  6E19               	movwf	randomgen@lastbit^0,c
  2789                           
  2790                           ;newmain.c: 220:                 ltmrval = ltmrval >> 1;
  2791  0006D0  401A               	rrncf	randomgen@intermbit^0,w,c
  2792  0006D2  0B80               	andlw	128
  2793  0006D4  6E1A               	movwf	randomgen@intermbit^0,c
  2794                           
  2795                           ;newmain.c: 221:                 lastbit = lastbit << 7;
  2796  0006D6  5012               	movf	_ltmrval^0,w,c
  2797  0006D8  1019               	iorwf	randomgen@lastbit^0,w,c
  2798  0006DA  6E12               	movwf	_ltmrval^0,c
  2799                           
  2800                           ;newmain.c: 222:                 intermbit = intermbit << 7;
  2801  0006DC  5011               	movf	_htmrval^0,w,c
  2802  0006DE  101A               	iorwf	randomgen@intermbit^0,w,c
  2803  0006E0  6E11               	movwf	_htmrval^0,c
  2804  0006E2                     l169:
  2805                           
  2806                           ;newmain.c: 224:                 htmrval = htmrval | intermbit;
  2807  0006E2  0E02               	movlw	2
  2808  0006E4  1825               	xorwf	_level^0,w,c
  2809  0006E6  A4D8               	btfss	status,2,c
  2810  0006E8  EF78  F003         	goto	u51
  2811  0006EC  EF7A  F003         	goto	u50
  2812  0006F0                     u51:
  2813  0006F0  EF9F  F003         	goto	l1083
  2814  0006F4                     u50:
  2815  0006F4                     
  2816                           ;newmain.c: 225:                 num--;;newmain.c: 226:             }
  2817  0006F4  0E03               	movlw	3
  2818  0006F6  6E17               	movwf	randomgen@num^0,c
  2819                           
  2820                           ;newmain.c: 227:         }
  2821  0006F8  EF97  F003         	goto	l1081
  2822  0006FC                     l1077:
  2823                           
  2824                           ;newmain.c: 228:         if (level == 3);newmain.c: 229:         {
  2825  0006FC  5012               	movf	_ltmrval^0,w,c
  2826  0006FE  0B01               	andlw	1
  2827  000700  6E19               	movwf	randomgen@lastbit^0,c
  2828                           
  2829                           ;newmain.c: 230:             num = 5;
  2830  000702  5011               	movf	_htmrval^0,w,c
  2831  000704  0B01               	andlw	1
  2832  000706  6E1A               	movwf	randomgen@intermbit^0,c
  2833                           
  2834                           ;newmain.c: 231:             while (num > 0)
  2835  000708  90D8               	bcf	status,0,c
  2836  00070A  3011               	rrcf	_htmrval^0,w,c
  2837  00070C  6E11               	movwf	_htmrval^0,c
  2838                           
  2839                           ;newmain.c: 232:             {
  2840  00070E  90D8               	bcf	status,0,c
  2841  000710  3012               	rrcf	_ltmrval^0,w,c
  2842  000712  6E12               	movwf	_ltmrval^0,c
  2843                           
  2844                           ;newmain.c: 233:                 lastbit = 0x01 & ltmrval;
  2845  000714  4019               	rrncf	randomgen@lastbit^0,w,c
  2846  000716  0B80               	andlw	128
  2847  000718  6E19               	movwf	randomgen@lastbit^0,c
  2848                           
  2849                           ;newmain.c: 234:                 intermbit = 0x01 & htmrval;
  2850  00071A  401A               	rrncf	randomgen@intermbit^0,w,c
  2851  00071C  0B80               	andlw	128
  2852  00071E  6E1A               	movwf	randomgen@intermbit^0,c
  2853                           
  2854                           ;newmain.c: 235:                 htmrval = htmrval >> 1;
  2855  000720  5012               	movf	_ltmrval^0,w,c
  2856  000722  1019               	iorwf	randomgen@lastbit^0,w,c
  2857  000724  6E12               	movwf	_ltmrval^0,c
  2858                           
  2859                           ;newmain.c: 236:                 ltmrval = ltmrval >> 1;
  2860  000726  5011               	movf	_htmrval^0,w,c
  2861  000728  101A               	iorwf	randomgen@intermbit^0,w,c
  2862  00072A  6E11               	movwf	_htmrval^0,c
  2863  00072C                     
  2864                           ;newmain.c: 237:                 lastbit = lastbit << 7;
  2865  00072C  0617               	decf	randomgen@num^0,f,c
  2866  00072E                     l1081:
  2867                           
  2868                           ;newmain.c: 227:         }
  2869  00072E  5017               	movf	randomgen@num^0,w,c
  2870  000730  A4D8               	btfss	status,2,c
  2871  000732  EF9D  F003         	goto	u61
  2872  000736  EF9F  F003         	goto	u60
  2873  00073A                     u61:
  2874  00073A  EF7E  F003         	goto	l1077
  2875  00073E                     u60:
  2876  00073E                     l1083:
  2877                           
  2878                           ;newmain.c: 240:                 htmrval = htmrval | intermbit;
  2879  00073E  0E03               	movlw	3
  2880  000740  1825               	xorwf	_level^0,w,c
  2881  000742  A4D8               	btfss	status,2,c
  2882  000744  EFA6  F003         	goto	u71
  2883  000748  EFA8  F003         	goto	u70
  2884  00074C                     u71:
  2885  00074C  EFCD  F003         	goto	l178
  2886  000750                     u70:
  2887  000750                     
  2888                           ;newmain.c: 241:                 num--;;newmain.c: 242:             }
  2889  000750  0E05               	movlw	5
  2890  000752  6E17               	movwf	randomgen@num^0,c
  2891                           
  2892                           ;newmain.c: 243:         }
  2893  000754  EFC5  F003         	goto	l1091
  2894  000758                     l1087:
  2895                           
  2896                           ;newmain.c: 244:     };newmain.c: 245: }
  2897  000758  5012               	movf	_ltmrval^0,w,c
  2898  00075A  0B01               	andlw	1
  2899  00075C  6E19               	movwf	randomgen@lastbit^0,c
  2900                           
  2901                           ;newmain.c: 246: 
  2902  00075E  5011               	movf	_htmrval^0,w,c
  2903  000760  0B01               	andlw	1
  2904  000762  6E1A               	movwf	randomgen@intermbit^0,c
  2905                           
  2906                           ;newmain.c: 247: 
  2907  000764  90D8               	bcf	status,0,c
  2908  000766  3011               	rrcf	_htmrval^0,w,c
  2909  000768  6E11               	movwf	_htmrval^0,c
  2910                           
  2911                           ;newmain.c: 248: 
  2912  00076A  90D8               	bcf	status,0,c
  2913  00076C  3012               	rrcf	_ltmrval^0,w,c
  2914  00076E  6E12               	movwf	_ltmrval^0,c
  2915                           
  2916                           ;newmain.c: 249: void input_task()
  2917  000770  4019               	rrncf	randomgen@lastbit^0,w,c
  2918  000772  0B80               	andlw	128
  2919  000774  6E19               	movwf	randomgen@lastbit^0,c
  2920                           
  2921                           ;newmain.c: 250: {
  2922  000776  401A               	rrncf	randomgen@intermbit^0,w,c
  2923  000778  0B80               	andlw	128
  2924  00077A  6E1A               	movwf	randomgen@intermbit^0,c
  2925                           
  2926                           ;newmain.c: 251: 
  2927  00077C  5012               	movf	_ltmrval^0,w,c
  2928  00077E  1019               	iorwf	randomgen@lastbit^0,w,c
  2929  000780  6E12               	movwf	_ltmrval^0,c
  2930                           
  2931                           ;newmain.c: 252: 
  2932  000782  5011               	movf	_htmrval^0,w,c
  2933  000784  101A               	iorwf	randomgen@intermbit^0,w,c
  2934  000786  6E11               	movwf	_htmrval^0,c
  2935  000788                     
  2936                           ;newmain.c: 253: 
  2937  000788  0617               	decf	randomgen@num^0,f,c
  2938  00078A                     l1091:
  2939                           
  2940                           ;newmain.c: 243:         }
  2941  00078A  5017               	movf	randomgen@num^0,w,c
  2942  00078C  A4D8               	btfss	status,2,c
  2943  00078E  EFCB  F003         	goto	u81
  2944  000792  EFCD  F003         	goto	u80
  2945  000796                     u81:
  2946  000796  EFAC  F003         	goto	l1087
  2947  00079A                     u80:
  2948  00079A                     l178:
  2949  00079A  0012               	return		;funcret
  2950  00079C                     __end_of_randomgen:
  2951                           	callstack 0
  2952                           
  2953 ;; *************** function _health_decreaser *****************
  2954 ;; Defined at:
  2955 ;;		line 537 in file "newmain.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;Total ram usage:        0 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    3
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_game_task
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text13
  2984  000C60                     __ptext13:
  2985                           	callstack 0
  2986  000C60                     _health_decreaser:
  2987                           	callstack 26
  2988  000C60                     
  2989                           ;newmain.c: 539:     health--;
  2990  000C60  0626               	decf	_health^0,f,c
  2991  000C62                     
  2992                           ;newmain.c: 540:     if (health == 0)
  2993  000C62  5026               	movf	_health^0,w,c
  2994  000C64  A4D8               	btfss	status,2,c
  2995  000C66  EF37  F006         	goto	u101
  2996  000C6A  EF39  F006         	goto	u100
  2997  000C6E                     u101:
  2998  000C6E  EF3B  F006         	goto	l278
  2999  000C72                     u100:
  3000  000C72                     
  3001                           ;newmain.c: 541:     {;newmain.c: 542:         game_state = LOSE;
  3002  000C72  0E07               	movlw	7
  3003  000C74  6E05               	movwf	_game_state^0,c
  3004  000C76                     l278:
  3005  000C76  0012               	return		;funcret
  3006  000C78                     __end_of_health_decreaser:
  3007                           	callstack 0
  3008                           
  3009 ;; *************** function _lowPriorityISR *****************
  3010 ;; Defined at:
  3011 ;;		line 24 in file "newmain.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		None
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;Total ram usage:        1 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    2
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		Interrupt level 1
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	intcodelo
  3040  000018                     __pintcodelo:
  3041                           	callstack 0
  3042  000018                     _lowPriorityISR:
  3043                           	callstack 25
  3044                           
  3045                           ;incstack = 0
  3046  000018  802A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  3047  00001A  CFE0 F013          	movff	bsr,??_lowPriorityISR
  3048  00001E  C013  FFE0         	movff	??_lowPriorityISR,bsr
  3049  000022  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3050  000024  0010               	retfie	
  3051  000026                     __end_of_lowPriorityISR:
  3052                           	callstack 0
  3053                           
  3054 ;; *************** function _highPriorityISR *****************
  3055 ;; Defined at:
  3056 ;;		line 17 in file "newmain.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;		None
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;		None
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, status,2, status,0, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;Total ram usage:        0 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; Hardware stack levels required when called:    1
  3077 ;; This function calls:
  3078 ;;		_tmr_isr
  3079 ;; This function is called by:
  3080 ;;		Interrupt level 2
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	intcode
  3085  000008                     __pintcode:
  3086                           	callstack 0
  3087  000008                     _highPriorityISR:
  3088                           	callstack 25
  3089                           
  3090                           ;incstack = 0
  3091  000008  822A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3092  00000A  ED3C  F006         	call	int_func,f	;refresh shadow registers
  3093                           
  3094                           	psect	intcode_body
  3095  000C78                     __pintcode_body:
  3096                           	callstack 25
  3097  000C78                     int_func:
  3098                           	callstack 25
  3099  000C78  0006               	pop		; remove dummy address from shadow register refresh
  3100  000C7A                     
  3101                           ;newmain.c: 19: uint8_t isGameFinished;
  3102  000C7A  A4F2               	btfss	242,2,c	;volatile
  3103  000C7C  EF42  F006         	goto	i2u73_41
  3104  000C80  EF44  F006         	goto	i2u73_40
  3105  000C84                     i2u73_41:
  3106  000C84  EF46  F006         	goto	i2l76
  3107  000C88                     i2u73_40:
  3108  000C88                     
  3109                           ;newmain.c: 20: int8_t isRC0Pressed;;newmain.c: 21: int8_t isRG0Pressed;
  3110  000C88  EC4B  F005         	call	_tmr_isr	;wreg free
  3111  000C8C                     i2l76:
  3112  000C8C  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3113  000C8E  0011               	retfie		f
  3114  000C90                     __end_of_highPriorityISR:
  3115                           	callstack 0
  3116                           
  3117 ;; *************** function _tmr_isr *****************
  3118 ;; Defined at:
  3119 ;;		line 137 in file "newmain.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2, status,0
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; This function calls:
  3140 ;;		Nothing
  3141 ;; This function is called by:
  3142 ;;		_highPriorityISR
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text16
  3147  000A96                     __ptext16:
  3148                           	callstack 0
  3149  000A96                     _tmr_isr:
  3150                           	callstack 25
  3151  000A96                     
  3152                           ;newmain.c: 139:     INTCONbits.TMR0IF = 0;
  3153  000A96  040F               	decf	_sevenSeg2WayCounter^0,w,c
  3154  000A98  A4D8               	btfss	status,2,c
  3155  000A9A  EF51  F005         	goto	i2u11_41
  3156  000A9E  EF53  F005         	goto	i2u11_40
  3157  000AA2                     i2u11_41:
  3158  000AA2  EF57  F005         	goto	i2l1181
  3159  000AA6                     i2u11_40:
  3160  000AA6                     
  3161                           ;newmain.c: 140:     if (--tmr_ticks_left == 0)
  3162  000AA6  0E00               	movlw	0
  3163  000AA8  6E0F               	movwf	_sevenSeg2WayCounter^0,c
  3164  000AAA  EF59  F005         	goto	i2l1183
  3165  000AAE                     i2l1181:
  3166                           
  3167                           ;newmain.c: 142: }
  3168  000AAE  0E01               	movlw	1
  3169  000AB0  6E0F               	movwf	_sevenSeg2WayCounter^0,c
  3170  000AB2                     i2l1183:
  3171                           
  3172                           ;newmain.c: 143: void tmr_init()
  3173  000AB2  0E02               	movlw	2
  3174  000AB4  180E               	xorwf	_sevenSeg3WayCounter^0,w,c
  3175  000AB6  A4D8               	btfss	status,2,c
  3176  000AB8  EF60  F005         	goto	i2u12_41
  3177  000ABC  EF62  F005         	goto	i2u12_40
  3178  000AC0                     i2u12_41:
  3179  000AC0  EF66  F005         	goto	i2l1187
  3180  000AC4                     i2u12_40:
  3181  000AC4                     
  3182                           ;newmain.c: 144: {
  3183  000AC4  0E00               	movlw	0
  3184  000AC6  6E0E               	movwf	_sevenSeg3WayCounter^0,c
  3185  000AC8  EF67  F005         	goto	i2l1189
  3186  000ACC                     i2l1187:
  3187                           
  3188                           ;newmain.c: 146: 
  3189  000ACC  2A0E               	incf	_sevenSeg3WayCounter^0,f,c
  3190  000ACE                     i2l1189:
  3191                           
  3192                           ;newmain.c: 147: 
  3193  000ACE  0E03               	movlw	3
  3194  000AD0  180D               	xorwf	_sevenSeg4WayCounter^0,w,c
  3195  000AD2  A4D8               	btfss	status,2,c
  3196  000AD4  EF6E  F005         	goto	i2u13_41
  3197  000AD8  EF70  F005         	goto	i2u13_40
  3198  000ADC                     i2u13_41:
  3199  000ADC  EF74  F005         	goto	i2l1193
  3200  000AE0                     i2u13_40:
  3201  000AE0                     
  3202                           ;newmain.c: 148:     T0CON = 0x47;
  3203  000AE0  0E00               	movlw	0
  3204  000AE2  6E0D               	movwf	_sevenSeg4WayCounter^0,c
  3205  000AE4  EF75  F005         	goto	i2l1195
  3206  000AE8                     i2l1193:
  3207                           
  3208                           ;newmain.c: 150:     T1CON = 0xc1;
  3209  000AE8  2A0D               	incf	_sevenSeg4WayCounter^0,f,c
  3210  000AEA                     i2l1195:
  3211                           
  3212                           ;newmain.c: 151: }
  3213  000AEA  94F2               	bcf	242,2,c	;volatile
  3214  000AEC                     
  3215                           ;newmain.c: 152: 
  3216  000AEC  2E01               	decfsz	_tmr_ticks_left^0,f,c
  3217  000AEE  EF7B  F005         	goto	i2l152
  3218  000AF2                     
  3219                           ;newmain.c: 153: 
  3220  000AF2  0E01               	movlw	1
  3221  000AF4  6E03               	movwf	_tmr_state^0,c
  3222  000AF6                     i2l152:
  3223  000AF6  0012               	return		;funcret
  3224  000AF8                     __end_of_tmr_isr:
  3225                           	callstack 0
  3226  0000                     
  3227                           	psect	rparam
  3228  0000                     
  3229                           	psect	temp
  3230  00002A                     btemp:
  3231                           	callstack 0
  3232  00002A                     	ds	1
  3233  0000                     int$flags	set	btemp
  3234  0000                     wtemp8	set	btemp+1
  3235  0000                     ttemp5	set	btemp+1
  3236  0000                     ttemp6	set	btemp+4
  3237  0000                     ttemp7	set	btemp+8
  3238                           
  3239                           	psect	idloc
  3240                           
  3241                           ;Config register IDLOC0 @ 0x200000
  3242                           ;	unspecified, using default values
  3243  200000                     	org	2097152
  3244  200000  FF                 	db	255
  3245                           
  3246                           ;Config register IDLOC1 @ 0x200001
  3247                           ;	unspecified, using default values
  3248  200001                     	org	2097153
  3249  200001  FF                 	db	255
  3250                           
  3251                           ;Config register IDLOC2 @ 0x200002
  3252                           ;	unspecified, using default values
  3253  200002                     	org	2097154
  3254  200002  FF                 	db	255
  3255                           
  3256                           ;Config register IDLOC3 @ 0x200003
  3257                           ;	unspecified, using default values
  3258  200003                     	org	2097155
  3259  200003  FF                 	db	255
  3260                           
  3261                           ;Config register IDLOC4 @ 0x200004
  3262                           ;	unspecified, using default values
  3263  200004                     	org	2097156
  3264  200004  FF                 	db	255
  3265                           
  3266                           ;Config register IDLOC5 @ 0x200005
  3267                           ;	unspecified, using default values
  3268  200005                     	org	2097157
  3269  200005  FF                 	db	255
  3270                           
  3271                           ;Config register IDLOC6 @ 0x200006
  3272                           ;	unspecified, using default values
  3273  200006                     	org	2097158
  3274  200006  FF                 	db	255
  3275                           
  3276                           ;Config register IDLOC7 @ 0x200007
  3277                           ;	unspecified, using default values
  3278  200007                     	org	2097159
  3279  200007  FF                 	db	255
  3280                           
  3281                           	psect	config
  3282                           
  3283                           ; Padding undefined space
  3284  300000                     	org	3145728
  3285  300000  FF                 	db	255
  3286                           
  3287                           ;Config register CONFIG1H @ 0x300001
  3288                           ;	Oscillator Selection bits
  3289                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  3290                           ;	Fail-Safe Clock Monitor Enable bit
  3291                           ;	FCMEN = 0x0, unprogrammed default
  3292                           ;	Internal/External Oscillator Switchover bit
  3293                           ;	IESO = 0x0, unprogrammed default
  3294  300001                     	org	3145729
  3295  300001  06                 	db	6
  3296                           
  3297                           ;Config register CONFIG2L @ 0x300002
  3298                           ;	unspecified, using default values
  3299                           ;	Power-up Timer Enable bit
  3300                           ;	PWRT = 0x1, unprogrammed default
  3301                           ;	Brown-out Reset Enable bits
  3302                           ;	BOREN = 0x3, unprogrammed default
  3303                           ;	Brown-out Voltage bits
  3304                           ;	BORV = 0x3, unprogrammed default
  3305  300002                     	org	3145730
  3306  300002  1F                 	db	31
  3307                           
  3308                           ;Config register CONFIG2H @ 0x300003
  3309                           ;	Watchdog Timer
  3310                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3311                           ;	Watchdog Timer Postscale Select bits
  3312                           ;	WDTPS = 0xF, unprogrammed default
  3313  300003                     	org	3145731
  3314  300003  1E                 	db	30
  3315                           
  3316                           ;Config register CONFIG3L @ 0x300004
  3317                           ;	unspecified, using default values
  3318                           ;	Processor Data Memory Mode Select bits
  3319                           ;	MODE = 0x3, unprogrammed default
  3320                           ;	Address Bus Width Select bits
  3321                           ;	ADDRBW = 0x3, unprogrammed default
  3322                           ;	Data Bus Width Select bit
  3323                           ;	DATABW = 0x1, unprogrammed default
  3324                           ;	External Bus Data Wait Enable bit
  3325                           ;	WAIT = 0x1, unprogrammed default
  3326  300004                     	org	3145732
  3327  300004  F3                 	db	243
  3328                           
  3329                           ;Config register CONFIG3H @ 0x300005
  3330                           ;	unspecified, using default values
  3331                           ;	CCP2 MUX bit
  3332                           ;	CCP2MX = 0x1, unprogrammed default
  3333                           ;	ECCP MUX bit
  3334                           ;	ECCPMX = 0x1, unprogrammed default
  3335                           ;	Low-Power Timer1 Oscillator Enable bit
  3336                           ;	LPT1OSC = 0x0, unprogrammed default
  3337                           ;	MCLR Pin Enable bit
  3338                           ;	MCLRE = 0x1, unprogrammed default
  3339  300005                     	org	3145733
  3340  300005  83                 	db	131
  3341                           
  3342                           ;Config register CONFIG4L @ 0x300006
  3343                           ;	unspecified, using default values
  3344                           ;	Stack Full/Underflow Reset Enable bit
  3345                           ;	STVREN = 0x1, unprogrammed default
  3346                           ;	Single-Supply ICSP Enable bit
  3347                           ;	LVP = 0x1, unprogrammed default
  3348                           ;	Boot Block Size Select bits
  3349                           ;	BBSIZ = 0x0, unprogrammed default
  3350                           ;	Extended Instruction Set Enable bit
  3351                           ;	XINST = 0x0, unprogrammed default
  3352                           ;	Background Debugger Enable bit
  3353                           ;	DEBUG = 0x1, unprogrammed default
  3354  300006                     	org	3145734
  3355  300006  85                 	db	133
  3356                           
  3357                           ; Padding undefined space
  3358  300007                     	org	3145735
  3359  300007  FF                 	db	255
  3360                           
  3361                           ;Config register CONFIG5L @ 0x300008
  3362                           ;	unspecified, using default values
  3363                           ;	Code Protection bit Block 0
  3364                           ;	CP0 = 0x1, unprogrammed default
  3365                           ;	Code Protection bit Block 1
  3366                           ;	CP1 = 0x1, unprogrammed default
  3367                           ;	Code Protection bit Block 2
  3368                           ;	CP2 = 0x1, unprogrammed default
  3369                           ;	Code Protection bit Block 3
  3370                           ;	CP3 = 0x1, unprogrammed default
  3371                           ;	Code Protection bit Block 4
  3372                           ;	CP4 = 0x1, unprogrammed default
  3373                           ;	Code Protection bit Block 5
  3374                           ;	CP5 = 0x1, unprogrammed default
  3375                           ;	Code Protection bit Block 6
  3376                           ;	CP6 = 0x1, unprogrammed default
  3377                           ;	Code Protection bit Block 7
  3378                           ;	CP7 = 0x1, unprogrammed default
  3379  300008                     	org	3145736
  3380  300008  FF                 	db	255
  3381                           
  3382                           ;Config register CONFIG5H @ 0x300009
  3383                           ;	unspecified, using default values
  3384                           ;	Boot Block Code Protection bit
  3385                           ;	CPB = 0x1, unprogrammed default
  3386                           ;	Data EEPROM Code Protection bit
  3387                           ;	CPD = 0x1, unprogrammed default
  3388  300009                     	org	3145737
  3389  300009  C0                 	db	192
  3390                           
  3391                           ;Config register CONFIG6L @ 0x30000A
  3392                           ;	unspecified, using default values
  3393                           ;	Write Protection bit Block 0
  3394                           ;	WRT0 = 0x1, unprogrammed default
  3395                           ;	Write Protection bit Block 1
  3396                           ;	WRT1 = 0x1, unprogrammed default
  3397                           ;	Write Protection bit Block 2
  3398                           ;	WRT2 = 0x1, unprogrammed default
  3399                           ;	Write Protection bit Block 3
  3400                           ;	WRT3 = 0x1, unprogrammed default
  3401                           ;	Write Protection bit Block 4
  3402                           ;	WRT4 = 0x1, unprogrammed default
  3403                           ;	Write Protection bit Block 5
  3404                           ;	WRT5 = 0x1, unprogrammed default
  3405                           ;	Write Protection bit Block 6
  3406                           ;	WRT6 = 0x1, unprogrammed default
  3407                           ;	Write Protection bit Block 7
  3408                           ;	WRT7 = 0x1, unprogrammed default
  3409  30000A                     	org	3145738
  3410  30000A  FF                 	db	255
  3411                           
  3412                           ;Config register CONFIG6H @ 0x30000B
  3413                           ;	unspecified, using default values
  3414                           ;	Configuration Register Write Protection bit
  3415                           ;	WRTC = 0x1, unprogrammed default
  3416                           ;	Boot Block Write Protection bit
  3417                           ;	WRTB = 0x1, unprogrammed default
  3418                           ;	Data EEPROM Write Protection bit
  3419                           ;	WRTD = 0x1, unprogrammed default
  3420  30000B                     	org	3145739
  3421  30000B  E0                 	db	224
  3422                           
  3423                           ;Config register CONFIG7L @ 0x30000C
  3424                           ;	unspecified, using default values
  3425                           ;	Table Read Protection bit Block 0
  3426                           ;	EBTR0 = 0x1, unprogrammed default
  3427                           ;	Table Read Protection bit Block 1
  3428                           ;	EBTR1 = 0x1, unprogrammed default
  3429                           ;	Table Read Protection bit Block 2
  3430                           ;	EBTR2 = 0x1, unprogrammed default
  3431                           ;	Table Read Protection bit Block 3
  3432                           ;	EBTR3 = 0x1, unprogrammed default
  3433                           ;	Table Read Protection bit Block 4
  3434                           ;	EBTR4 = 0x1, unprogrammed default
  3435                           ;	Table Read Protection bit Block 5
  3436                           ;	EBTR5 = 0x1, unprogrammed default
  3437                           ;	Table Read Protection bit Block 6
  3438                           ;	EBTR6 = 0x1, unprogrammed default
  3439                           ;	Table Read Protection bit Block 7
  3440                           ;	EBTR7 = 0x1, unprogrammed default
  3441  30000C                     	org	3145740
  3442  30000C  FF                 	db	255
  3443                           
  3444                           ;Config register CONFIG7H @ 0x30000D
  3445                           ;	unspecified, using default values
  3446                           ;	Boot Block Table Read Protection bit
  3447                           ;	EBTRB = 0x1, unprogrammed default
  3448  30000D                     	org	3145741
  3449  30000D  40                 	db	64
  3450                           tosu	equ	0xFFF
  3451                           tosh	equ	0xFFE
  3452                           tosl	equ	0xFFD
  3453                           stkptr	equ	0xFFC
  3454                           pclatu	equ	0xFFB
  3455                           pclath	equ	0xFFA
  3456                           pcl	equ	0xFF9
  3457                           tblptru	equ	0xFF8
  3458                           tblptrh	equ	0xFF7
  3459                           tblptrl	equ	0xFF6
  3460                           tablat	equ	0xFF5
  3461                           prodh	equ	0xFF4
  3462                           prodl	equ	0xFF3
  3463                           indf0	equ	0xFEF
  3464                           postinc0	equ	0xFEE
  3465                           postdec0	equ	0xFED
  3466                           preinc0	equ	0xFEC
  3467                           plusw0	equ	0xFEB
  3468                           fsr0h	equ	0xFEA
  3469                           fsr0l	equ	0xFE9
  3470                           wreg	equ	0xFE8
  3471                           indf1	equ	0xFE7
  3472                           postinc1	equ	0xFE6
  3473                           postdec1	equ	0xFE5
  3474                           preinc1	equ	0xFE4
  3475                           plusw1	equ	0xFE3
  3476                           fsr1h	equ	0xFE2
  3477                           fsr1l	equ	0xFE1
  3478                           bsr	equ	0xFE0
  3479                           indf2	equ	0xFDF
  3480                           postinc2	equ	0xFDE
  3481                           postdec2	equ	0xFDD
  3482                           preinc2	equ	0xFDC
  3483                           plusw2	equ	0xFDB
  3484                           fsr2h	equ	0xFDA
  3485                           fsr2l	equ	0xFD9
  3486                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         18
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     11      41
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_game_task
    _sevenSeg_controller->_sevenSeg
    _game_task->_randomgen

Critical Paths under _lowPriorityISR in COMRAM

    None.

Critical Paths under _highPriorityISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _lowPriorityISR in BANK0

    None.

Critical Paths under _highPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lowPriorityISR in BANK1

    None.

Critical Paths under _highPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lowPriorityISR in BANK2

    None.

Critical Paths under _highPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lowPriorityISR in BANK3

    None.

Critical Paths under _highPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lowPriorityISR in BANK4

    None.

Critical Paths under _highPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lowPriorityISR in BANK5

    None.

Critical Paths under _highPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lowPriorityISR in BANK6

    None.

Critical Paths under _highPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lowPriorityISR in BANK7

    None.

Critical Paths under _highPriorityISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lowPriorityISR in BANK8

    None.

Critical Paths under _highPriorityISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lowPriorityISR in BANK9

    None.

Critical Paths under _highPriorityISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lowPriorityISR in BANK10

    None.

Critical Paths under _highPriorityISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lowPriorityISR in BANK11

    None.

Critical Paths under _highPriorityISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lowPriorityISR in BANK12

    None.

Critical Paths under _highPriorityISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lowPriorityISR in BANK13

    None.

Critical Paths under _highPriorityISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lowPriorityISR in BANK14

    None.

Critical Paths under _highPriorityISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lowPriorityISR in BANK15

    None.

Critical Paths under _highPriorityISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1788
                          _game_task
                           _init_irq
                         _init_ports
                          _init_vars
                         _input_task
                _sevenSeg_controller
                           _tmr_init
 ---------------------------------------------------------------------------------
 (1) _tmr_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sevenSeg_controller                                  2     2      0    1488
                                              5 COMRAM     2     2      0
                           _sevenSeg
 ---------------------------------------------------------------------------------
 (2) _sevenSeg                                             4     3      1    1488
                                              1 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _input_task                                           0     0      0       0
                         _init_ports
                          _init_vars
 ---------------------------------------------------------------------------------
 (2) _init_vars                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_irq                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _game_task                                            3     3      0     300
                                              8 COMRAM     3     3      0
                   _health_decreaser
                          _randomgen
                         _reset_task
                      _shape_shifter
                          _tmr_start
 ---------------------------------------------------------------------------------
 (2) _tmr_start                                            1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _shape_shifter                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _reset_task                                           0     0      0       0
                         _init_ports
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _randomgen                                            8     8      0     270
                                              1 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (2) _health_decreaser                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _lowPriorityISR                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _highPriorityISR                                      0     0      0       0
                            _tmr_isr
 ---------------------------------------------------------------------------------
 (6) _tmr_isr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _game_task
     _health_decreaser
     _randomgen
     _reset_task
       _init_ports
     _shape_shifter
     _tmr_start
   _init_irq
   _init_ports
   _init_vars
   _input_task
     _init_ports
     _init_vars
   _sevenSeg_controller
     _sevenSeg
   _tmr_init

 _lowPriorityISR (ROOT)

 _highPriorityISR (ROOT)
   _tmr_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      B      29       1       43.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      29      32        0.0%
DATA                 0      0      29       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed May 11 22:39:22 2022

                          _L1 0029                            _L2 0028                            _L3 0027  
            randomgen@lastbit 0019                            u10 060A                            u11 0606  
                          u20 0626                            u21 0622                            u40 06B2  
                          u41 06AE                            u50 06F4                            u34 0690  
                          u51 06F0                            u35 068C                            u60 073E  
                          u61 073A                            u70 0750                            u71 074C  
                          u80 079A                            u81 0796                            u90 0B18  
                          u91 0B14                            bsr 000FE0              randomgen@noteval 0018  
                         l201 08FC                           l130 0B98                           l203 0926  
                         l133 0BE2                           l302 0108                           l207 0938  
                         l136 0CCA                           l242 05F8                           l155 0CB6  
                         l270 0B1C                           l158 0CA4                           l334 03DC  
                         l271 0B48                           l191 0872                           l184 07D0  
                         l169 06E2                           l193 0884                           l178 079A  
                         l274 0CC4                           l290 00B4                           l195 08AE  
                         l187 0836                           l267 0A94                           l293 00CA  
                         l197 08C0                           l189 0848                           l278 0C76  
                         l199 08EA                           l299 00F6                           u100 0C72  
                         u101 0C6E                           u200 0844                           u201 0840  
                         u210 0858                           u211 0854                           u300 090C  
                         u220 0866                           u140 07AC                           u301 0908  
                         u221 0862                           u141 07A8                           u310 091A  
                         u230 0880                           u150 07BC                           u311 0916  
                         u231 087C                           u151 07B8                           u320 0934  
                         u240 0894                           u160 07CC                           u321 0930  
                         u241 0890                           u161 07C8                           u250 08A2  
                         u170 07DE                           u251 089E                           u171 07DA  
                         u500 00C2                           u260 08BC                           u180 081C  
                         u501 00BE                           u261 08B8                           u181 0818  
                         u510 00D8                           u270 08D0                           u190 082A  
                         u511 00D4                           u271 08CC                           u191 0826  
                         u600 0214                           u520 00F2                           u440 003E  
                         u280 08DE                           u601 0210                           u521 00EE  
                         u441 003A                           u281 08DA                           u610 024E  
                         u530 0104                           u450 0052                           u290 08F8  
                         u611 024A                           u531 0100                           u451 004E  
                         u291 08F4                           u700 033C                           u620 0260  
                         u540 0116                           u460 0066                           u701 0338  
                         u621 025C                           u541 0112                           u461 0062  
                         u710 0354                           u630 0274                           u550 01A2  
                         u470 007A                           u711 0350                           u631 0270  
                         u551 019E                           u471 0076                           u720 036C  
                         u640 0290                           u560 01B4                           u480 008E  
                         u800 04A2                           u721 0368                           u641 028C  
                         u561 01B0                           u481 008A                           u801 049E  
                         u650 02A8                           u570 01C8                           u490 00A2  
                         u810 04CE                           u651 02A4                           u571 01C4  
                         u491 009E                           u811 04CA                           u660 02C0  
                         u580 01E4                           u820 04FA                           u661 02BC  
                         u581 01E0                           u821 04F6                           u670 02FA  
                         u590 01FC                           u830 0518                           u671 02F6  
                         u591 01F8                           u831 0514                           u680 030C  
                         u840 0544                           u760 03F2                           u681 0308  
                         u841 0540                           u761 03EE                           u690 0320  
                         u850 0562                           u770 041E                           u691 031C  
                         u851 055E                           u771 041A                           u860 0582  
                         u780 044A                           u861 057E                           u781 0446  
                         u790 0476                           u870 0C0C                           u791 0472  
                         u871 0C08                           u880 0C1C                           u881 0C18  
                         wreg 000FE8                          l1021 0B9A                          l1031 0B68  
                        l1023 0B4A                          l1041 0CA2                          l1201 0CC6  
                        l1033 0B6A                          l1025 0B62                          l1051 0616  
                        l1043 05FA                          l1035 0C92                          l1027 0B64  
                        l1203 0CA6                          l1053 0626                          l1045 060A  
                        l1037 0C96                          l1029 0B66                          l1221 0808  
                        l1213 07DE                          l1205 079C                          l1071 069E  
                        l1055 0630                          l1063 0648                          l1047 0612  
                        l1151 0AF8                          l1039 0C9A                          l1231 0858  
                        l1215 07EA                          l1223 080C                          l1207 07AC  
                        l1081 072E                          l1073 06B2                          l1057 0638  
                        l1065 067A                          l1049 0612                          l1161 0B28  
                        l1153 0AFC                          l1401 018A                          l1241 08BC  
                        l1233 0866                          l1225 081C                          l1217 07EE  
                        l1209 07BC                          l1171 0C60                          l1091 078A  
                        l1075 06F4                          l1083 073E                          l1067 067E  
                        l1059 0640                          l1163 0B40                          l1155 0B00  
                        l1411 01C8                          l1403 0192                          l1331 0040  
                        l1251 091A                          l1243 08D0                          l1235 0880  
                        l1227 082A                          l1219 0806                          l1173 0C62  
                        l1085 0750                          l1077 06FC                          l1069 069A  
                        l1165 0B44                          l1157 0B04                          l1501 0354  
                        l1421 01FC                          l1413 01D0                          l1405 01A2  
                        l1341 0066                          l1333 0042                          l1325 002A  
                        l1253 0934                          l1245 08DE                          l1237 0894  
                        l1229 0844                          l1175 0C72                          l1087 0758  
                        l1079 072C                          l1167 0CB8                          l1159 0B18  
                        l1511 037A                          l1503 0358                          l1431 0222  
                        l1423 0200                          l1415 01D4                          l1407 01A4  
                        l1351 007E                          l1343 0068                          l1335 0052  
                        l1327 002E                          l1247 08F8                          l1239 08A2  
                        l1089 0788                          l1169 0CC0                          l1505 035A  
                        l1441 0236                          l1433 0226                          l1425 0202  
                        l1417 01E4                          l1409 01B4                          l1361 00A4  
                        l1353 008E                          l1345 006A                          l1337 0054  
                        l1329 003E                          l1249 090C                          l1601 09A0  
                        l1507 036C                          l1451 0274                          l1443 023E  
                        l1435 022C                          l1427 0214                          l1419 01EC  
                        l1371 00E0                          l1363 00AC                          l1355 0090  
                        l1347 007A                          l1339 0056                          l1611 0A42  
                        l1603 09A8                          l1509 0370                          l1461 02A8  
                        l1453 027C                          l1445 024E                          l1437 0230  
                        l1429 0218                          l1517 0382                          l1373 00E4  
                        l1365 00C2                          l1357 0092                          l1349 007C  
                        l1613 0A4A                          l1701 0BF4                          l1471 02CE  
                        l1463 02AC                          l1455 0280                          l1447 0250  
                        l1439 0234                          l1391 0172                          l1359 00A2  
                        l1615 0A52                          l1607 09B0                          l1631 03E2  
                        l1703 0BF8                          l1481 02E2                          l1473 02D2  
                        l1465 02AE                          l1457 0290                          l1449 0260  
                        l1393 017A                          l1369 00D8                          l1609 0A3A  
                        l1641 042C                          l1633 03F2                          l1705 0BFC  
                        l1491 0320                          l1483 02EA                          l1475 02D8  
                        l1467 02C0                          l1459 0298                          l1395 0180  
                        l1619 0A5A                          l1651 0476                          l1643 043A  
                        l1635 0400                          l1707 0C0C                          l1493 0328  
                        l1485 02FA                          l1477 02DC                          l1469 02C4  
                        l1397 0184                          l1389 011A                          l1741 09C4  
                        l1581 0950                          l1661 04BE                          l1653 0484  
                        l1645 044A                          l1637 040E                          l1629 03DE  
                        l1709 0C20                          l1751 065C                          l1495 032C  
                        l1487 02FC                          l1479 02E0                          l1399 0188  
                        l1743 0A6E                          l1591 0978                          l1583 0958  
                        l1575 093C                          l1671 0508                          l1663 04CE  
                        l1655 0492                          l1647 0458                          l1639 041E  
                        l1497 033C                          l1489 030C                          l1745 0136  
                        l1593 0980                          l1585 0960                          l1577 0940  
                        l1681 0552                          l1673 0518                          l1665 04DC  
                        l1657 04A2                          l1649 0466                          l1499 0344  
                        l1747 0164                          l1595 0988                          l1587 0968  
                        l1579 0948                          l1739 05B2                          l1683 0562  
                        l1675 0526                          l1667 04EA                          l1659 04B0  
                        l1749 0396                          l1597 0990                          l1589 0970  
                        l1685 0570                          l1677 0534                          l1669 04FA  
                        l1693 059E                          l1599 0998                          l1687 0582  
                        l1679 0544                          l1689 0590                          l1699 0BE4  
                        _LATC 000F8B                          i1l81 001E                          i2l76 0C8C  
                        _TMR0 000FD6                  _tmr_startreq 0002                  _starterDelay 0007  
                        _main 0BE4                          btemp 002A            randomgen@intermbit 001A  
                        start 0026                  ___param_bank 000000                         ?_main 0013  
                       _T0CON 000FD5                         _T1CON 000FCD                         i2l152 0AF6  
                       _TMR1H 000FCF                         _TMR1L 000FCE                         _PORTA 000F80  
             _sevenSegCounter 0010                         _PORTB 000F81                         _PORTC 000F82  
                       _PORTD 000F83                         _PORTE 000F84                         _PORTF 000F85  
                       _PORTH 000F87                         _PORTJ 000F88                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
                       _TRISE 000F96                         _TRISF 000F97                         _TRISG 000F98  
                       _TRISH 000F99                         _TRISJ 000F9A                         _level 0025  
                       tablat 000FF5               __end_of_tmr_isr 0AF8                         ttemp5 002B  
                       ttemp6 002E                         ttemp7 0032                         status 000FD8  
                       wtemp8 002B                _lowPriorityISR 0018               __initialization 0C2C  
                __end_of_main 0C2C                _tmr_ticks_left 0001         __end_of_shape_shifter 0B4A  
                      ??_main 001E                 __activetblptr 000003                        _ADCON1 000FC1  
    __size_of_highPriorityISR 0C88                        i2l1181 0AAE                        i2l1191 0AE0  
                      i2l1183 0AB2                        i2l1193 0AE8                        i2l1185 0AC4  
                      i2l1177 0A96                        i2l1195 0AEA                        i2l1187 0ACC  
                      i2l1179 0AA6                        i2l1531 0C7A                        i2l1197 0AEC  
                      i2l1189 0ACE                        i2l1533 0C88                        i2l1199 0AF2  
                      _INTCON 000FF2        __end_of_lowPriorityISR 0026     __size_of_health_decreaser 0018  
                      _health 0026              __end_of_init_irq 0CCC                  _isRC0Pressed 0009  
                      clear_0 0C50                  __pdataCOMRAM 0027              __end_of_sevenSeg 0A96  
                _isRG0Pressed 0024                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                  _isRG1Pressed 0023                  _isRG2Pressed 0022  
            __end_of_tmr_init 0CB8                  _isRG3Pressed 0021                     ??_tmr_isr 0013  
                _isRG4Pressed 0020                    __accesstop 0060       __end_of__initialization 0C56  
 __end_of_sevenSeg_controller 05FA               ?_lowPriorityISR 0013                 ___rparam_used 000001  
              __pcstackCOMRAM 0013                game_task@count 001D            __size_of_game_task 03B4  
                  __pnvCOMRAM 001E            __size_of_init_vars 0050             ??_highPriorityISR 0013  
                  _game_level 001E            __size_of_randomgen 01A2                    _game_state 0005  
                     i2u11_40 0AA6                       i2u11_41 0AA2                       i2u12_40 0AC4  
                     i2u12_41 0AC0                       i2u13_40 0AE0                       i2u13_41 0ADC  
                     i2u73_40 0C88                       i2u73_41 0C84            __size_of_tmr_start 0016  
                   ?_init_irq 0013             __end_of_game_task 03DE                       __Hparam 0000  
                     __Lparam 0000                     ?_sevenSeg 0014              _health_decreaser 0C60  
                   ?_tmr_init 0013                       __pcinit 0C2C                    _init_ports 0B9A  
                     __ramtop 1000                       __ptext0 0BE4                       __ptext1 0CA6  
                     __ptext2 03DE                       __ptext3 093A                       __ptext4 079C  
                     __ptext5 0B4A                       __ptext6 0CC6                       __ptext7 002A  
                     __ptext8 0C90                       __ptext9 0AF8             __end_of_init_vars 0B9A  
                     _htmrval 0011                       _ltmrval 0012                       _whichRG 001F  
                     _tmr_isr 0A96                    _input_task 079C             __end_of_randomgen 079C  
              __pintcode_body 0C78          end_of_initialization 0C56                       int_func 0C78  
                  ??_init_irq 0014                    _reset_task 0CB8                    ??_sevenSeg 0015  
                     postinc0 000FEE                    _temp_shift 000C                    ??_tmr_init 0014  
           __end_of_tmr_start 0CA6                     _PORTCbits 000F82                     _PORTFbits 000F85  
                   _PORTGbits 000F86                _isGameFinished 000A              ??_lowPriorityISR 0013  
      __size_of_shape_shifter 0052                 __pidataCOMRAM 0CCC                   ?_init_ports 0013  
         start_initialization 0C2C                   ?_input_task 0013               _highPriorityISR 0008  
                 ?_reset_task 0013  __size_of_sevenSeg_controller 021C                 _shape_shifter 0AF8  
                randomgen@val 0016                  randomgen@num 0017                   __pbssCOMRAM 0001  
    __end_of_health_decreaser 0C78           __size_of_init_ports 004A             __size_of_init_irq 0006  
                   _game_task 002A                     __pintcode 0008           __size_of_input_task 019E  
           __size_of_sevenSeg 015C                   __pintcodelo 0018             __size_of_tmr_init 0012  
              ?_shape_shifter 0013                _level_subcount 0004       __end_of_highPriorityISR 0C90  
                   _isPressed 0008           __size_of_reset_task 000E                      ?_tmr_isr 0013  
                   _init_vars 0B4A                     _randomgen 05FA                    ?_game_task 0013  
                   _tmr_state 0003                     _tmr_start 0C90                 _isGameStarted 000B  
                  ?_init_vars 0013                    ?_randomgen 0013                      __Hrparam 0000  
                    __Lrparam 0000               ??_shape_shifter 0014                  ??_init_ports 0014  
                  ?_tmr_start 0013              ?_highPriorityISR 0013                  ??_input_task 0014  
                    __ptext10 0CB8                      __ptext11 0B9A                      __ptext12 05FA  
                    __ptext13 0C60                      __ptext16 0A96           _sevenSeg_controller 03DE  
            __size_of_tmr_isr 0062                 __size_of_main 0048                      _init_irq 0CC6  
          __end_of_init_ports 0BE4                     sevenSeg@D 0014                     sevenSeg@J 0017  
                    _tmr1flag 0006                  ??_reset_task 0014                   ??_game_task 001B  
                    _sevenSeg 093A          ?_sevenSeg_controller 0013                      int$flags 002A  
                    _tmr_init 0CA6            __end_of_input_task 093A           _sevenSeg2WayCounter 000F  
                  _INTCONbits 000FF2           _sevenSeg3WayCounter 000E            __end_of_reset_task 0CC6  
                 ??_init_vars 0014                tmr_start@ticks 0014             ?_health_decreaser 0013  
                    intlevel1 0000                      intlevel2 0000                   ??_randomgen 0014  
          ??_health_decreaser 0014           _sevenSeg4WayCounter 000D       __size_of_lowPriorityISR 000E  
       ??_sevenSeg_controller 0018                   ??_tmr_start 0014  
